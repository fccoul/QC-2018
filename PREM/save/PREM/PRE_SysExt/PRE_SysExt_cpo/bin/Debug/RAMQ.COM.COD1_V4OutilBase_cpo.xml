<?xml version="1.0"?>
<doc>
<assembly>
<name>
RAMQ.COM.COD1_V4OutilBase_cpo
</name>
</assembly>
<members>
<member name="T:RAMQ.Attribut.CodAppli">
 <summary> 
     Définition de la classe représentant le code d'application afin d'être
     utilisé comme un attribut.
 </summary>
 <remarks>
 </remarks>
</member>
<member name="P:RAMQ.Attribut.CodAppli.PPP">
 <summary>
     Propriété qui retourne le code d'application.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Attribut.CodAppli.#ctor(System.String)">
 <summary>
     Constructeur par défaut.
 </summary>
 <param name="_strPPP">Code d'application.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Attribut.IClaErr">
 <summary> 
     Définition de l'interface qui doit être implémenter par les classes de gestion d'erreurs.
     utilisé comme un attribut.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Attribut.IClaErr.ErreurSurvenue(System.Exception)">
 <summary>
     Cette méthode s'exécute lorsqu'une erreur survient dans la méthode,
     la classe, ou l'assembly associé à la classe qui implémente cette méthode.
 </summary>
 <param name="_exExcep">L'objet de type <see cref="T:System.Exception" /> représentant l'erreur survenue.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Attribut.InfoGestionErr">
 <summary> 
     Définition de la classe qui permet d'associer un classe d'erreur à une méthode, une classe ou un assembly
     lorsqu'une erreur survenue dans cette méthode, classe ou assembly sera attraper par le
     module <see cref="T:RAMQ.Web.ModuleHttp.ModulHttpErr" /> elle sera redirigé vers cette classe d'erreur.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Attribut.InfoGestionErr.ClasseErreur">
 <summary>
     Propriété qui retourne la classe d'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Attribut.InfoGestionErr.#ctor(System.Type)">
 <summary>
     Construteur qui vérifie que la classe d'erreur implémente bien l'interface
     <see cref="T:RAMQ.Attribut.IClaErr" /> et qu'elle possède un constructeur vide.
 </summary>
 <param name="_objTypClaErr">Instance de l'objet ayant causé l'exception.</param>
 <exception cref="T:System.ApplicationException">La classe d'erreur '{0}' provenant de l'assembly '{1}' n'hérite pas de l'interface '{2}' de l'assembly '{3}'.</exception>
 <exception cref="T:System.ApplicationException">La classe d'erreur '{0}' provenant de l'assembly '{1}' ne possède aucun constructeur vide "sub new()".</exception>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ClasseBase.IParamSorti">
 <summary> 
     Définition de l'interface représentant l'information de base d'une
     classe de base de sortie d'un service WCF.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ClasseBase.IParamSorti.InfoMsgTrait">
 <summary>
     Propriété qui retourne une collection d'instances 
     de la classe <see cref="T:RAMQ.Message.MsgTrait" />.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ClasseBase.ParamSorti">
 <summary> 
     Définition de la classe représentant l'information de base d'une
     classe de base de sortie d'un service WCF.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ClasseBase.ParamSorti.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ClasseBase.ParamSorti.#ctor(System.Collections.Generic.IList{RAMQ.Message.MsgTrait})">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_colctMsgTrait">Collection d'instances de la classe <see cref="T:RAMQ.Message.MsgTrait" />.</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ClasseBase.ParamSorti.InfoMsgTrait">
 <summary>
     Propriété qui retourne une collection d'instances 
     de la classe <see cref="T:RAMQ.Message.MsgTrait" />.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Configuration.IRecupConfgEnvir">
 <summary> 
     Définition de l'interface permettant de gérer les valeurs dans un fichier
     de paramètres d’environnement.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Configuration.IRecupConfgEnvir.Cheminee">
 <summary>
     Propriété qui retourne la cheminée.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.IRecupConfgEnvir.NomFichConfg">
 <summary>
     Propriété qui retourne le nom et l'emplacement du fichier de configuration.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.IRecupConfgEnvir.EnvirAppli">
 <summary>
     Propriété qui retourne l'environnement déterminé pour l'applicatif.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.IRecupConfgEnvir.EnvirDonne">
 <summary>
     Propriété qui retourne l'environnement déterminé pour les données.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.IRecupConfgEnvir.PPP">
 <summary>
     Propriété qui retourne le code d'application (PPP) en traitement.
     Le fait de changer le PPP peut avoir des répercussions sur les
     propriétés <see cref="P:RAMQ.Configuration.IRecupConfgEnvir.EnvirAppli" /> et <see cref="P:RAMQ.Configuration.IRecupConfgEnvir.EnvirDonne" />.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.IRecupConfgEnvir.ObtenirVarEnvir(System.String)">
 <summary>
     Cette méthode permet d'obtenir la valeur d'une variable d'environnement.
 </summary>
 <param name="_strVarEnvir">Nom de la variable dont on veut obtenir la valeur.</param>
 <returns>La valeur de la variable de configuration spécifiée.</returns>
 <example> Obtenir la valeur d'une variable d'environnement avec le constructeur sans l'environnement.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.vb" region="ObtenirVarEnvir"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.cs" region="ObtenirVarEnvir"></code>
 </example>
 <example> Obtenir la valeur d'une variable d'environnement avec le constructeur avec l'environnement.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.vb" region="ObtenirVarEnvirAvecEnvir"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.cs" region="ObtenirVarEnvirAvecEnvir"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Configuration.IRecupConfgAppli">
 <summary> 
     Définition de l'interface permettant de gérer les valeurs dans un fichier
     de paramètres d’application.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Configuration.IRecupConfgAppli.NomFichConfg">
 <summary>
     Propriété qui retourne le nom et l'emplacement du fichier de configuration.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.IRecupConfgAppli.ObtenirVarAppli(System.String)">
 <summary>
     Cette méthode permet d'obtenir la valeur d'une variable d'application
     du fichier de configuration.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application pour laquelle on veut obtenir la valeur.</param>
 <returns>Valeur de la variable d'application demandée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="ObtenirVarAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="ObtenirVarAppli"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.IRecupConfgAppli.ObtenirColctElmAppli(System.String)">
 <summary>
     Cette méthode permet d'obtenir les noeuds d'une variable d'application.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application pour laquelle on veut obtenir les noeuds.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="ObtenirColctElmAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="ObtenirColctElmAppli"></code>
 </example>
 <returns>
     La liste de noeuds de la variable spécifiée sous forme de collection d'intances
     d'objet de type <see cref="T:System.Xml.Linq.XElement" />.
 </returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.IRecupConfgAppli.VerifierPresVarAppli(System.String)">
 <summary>
     Cette méthode permet de vérifier la présence d’une variable d’application ou d'un noeud.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application dont on veut vérifier la présence.</param>
 <returns>True = présent, False = non présent.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="VerifierPresVarAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="VerifierPresVarAppli"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.IRecupConfgAppli.AssignerVarAppli(System.String,System.String)">
 <summary>
     Cette méthode permet d'assigner une valeur à une variable d'application.
     Si la variable n'existe pas, elle sera créée.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application que l'on veut assigner.</param>
 <param name="_strVal">Valeur à assigner à la variable.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="AssignerVarAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="AssignerVarAppli"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Configuration.RecupConfgAppli">
 <summary> 
     Définition de la classe permettant de gérer les valeurs dans un fichier
     de paramètres d’application.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Configuration.RecupConfgAppli.NomFichConfg">
 <summary>
     Propriété qui retourne le nom et l'emplacement du fichier de configuration.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgAppli.#ctor(System.String)">
 <summary>
     Constructeur par défaut.
 </summary>
 <param name="_strNomFichConfg">Le nom du fichier de configuration.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="Constructeur"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="Constructeur"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgAppli.AssignerVarAppli(System.String,System.String)">
 <summary>
     Cette méthode permet d'assigner une valeur à une variable d'application.
     Si la variable n'existe pas, elle sera créée.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application que l'on veut assigner.</param>
 <param name="_strVal">Valeur à assigner à la variable.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="AssignerVarAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="AssignerVarAppli"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgAppli.ObtenirVarAppli(System.String)">
 <summary>
     Cette méthode permet d'obtenir la valeur d'une variable d'application
     du fichier de configuration.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application pour laquelle on veut obtenir la valeur.</param>
 <returns>Valeur de la variable d'application demandée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="ObtenirVarAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="ObtenirVarAppli"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgAppli.VerifierPresVarAppli(System.String)">
 <summary>
     Cette méthode permet de vérifier la présence d’une variable d’application ou d'un noeud.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application dont on veut vérifier la présence.</param>
 <returns>True = présent, False = non présent.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="VerifierPresVarAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="VerifierPresVarAppli"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgAppli.ObtenirColctElmAppli(System.String)">
 <summary>
     Cette méthode permet d'obtenir les noeuds d'une variable d'application.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application pour laquelle on veut obtenir les noeuds.</param>
 <returns>
     La liste de noeuds de la variable spécifiée sous forme de collection d'intances
     d'objet de type <see cref="T:System.Xml.Linq.XElement" />.
 </returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.vb" region="ObtenirColctElmAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgAppli.cs" region="ObtenirColctElmAppli"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgAppli.SelectionnerNoeud(System.String)">
 <summary>
     Cette méthode permet de sélectionner un noeud.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application à sélectionner.</param>
 <returns>Une collection d'instance d'objet de type <see cref="T:System.Xml.Linq.XElement" />.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Configuration.RecupConfgEnvir">
 <summary> 
     Définition de la classe permettant de gérer les valeurs dans un fichier
     de paramètres d’environnement.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Configuration.RecupConfgEnvir.Cheminee">
 <summary>
     Propriété qui retourne la cheminée.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.RecupConfgEnvir.EnvirAppli">
 <summary>
     Propriété qui retourne l'environnement déterminé pour l'applicatif.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.RecupConfgEnvir.EnvirDonne">
 <summary>
     Propriété qui retourne l'environnement déterminé pour les données.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.RecupConfgEnvir.NomFichConfg">
 <summary>
     Propriété qui retourne le nom et l'emplacement du fichier de configuration.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Configuration.RecupConfgEnvir.PPP">
 <summary>
     Propriété qui retourne le code d'application (PPP) en traitement.
     Le fait de changer le PPP peut avoir des répercussions sur les
     propriétés <see cref="P:RAMQ.Configuration.RecupConfgEnvir.EnvirAppli" /> et <see cref="P:RAMQ.Configuration.RecupConfgEnvir.EnvirDonne" />.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.#ctor(System.String,System.IO.FileInfo)">
 <summary>
     Constructeur servant aux tests unitaires.
 </summary>
 <param name="_strNomFichConfg">
     Nom (et emplacement) du fichier de configuration contenant les variables
     d'application. Il est possible de spécifier l'emplacement du fichier ("proj".config).
 </param>
 <param name="_objFichEnvir">Objet représentant le fichier de configuration de l'environnement.</param>
 <exception cref="T:System.IO.FileNotFoundException">Le fichier de configuration est inexistant.</exception>
 <exception cref="T:System.ApplicationException">Le fichier de configuration est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le PPP est inexistant dans le fichier de configuration.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.#ctor(System.String)">
 <summary>
     Constructeur à partir du nom (et emplacement) du fichier de configuration.
 
     Ce constructeur est plus adapté aux applications client/serveur locales (dont 
     l'environnement est déterminé par Choix d'Environnement).
 
     L’environnement est déterminée grâce aux informations du fichier Z:\RQ_ENVIR.XML, 
     selon le PPP contenu dans ce fichier de Choix d'Environnement.
 </summary>
 <param name="_strNomFichConfg">
     Nom (et emplacement) du fichier de configuration contenant les variables
     d'application. Il est possible de spécifier l'emplacement du fichier ("proj".config).
 </param>
 <exception cref="T:System.IO.FileNotFoundException">Le fichier de configuration est inexistant.</exception>
 <exception cref="T:System.ApplicationException">Le fichier de configuration est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le PPP est inexistant dans le fichier de configuration.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.vb" region="Constructeur"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.cs" region="Constructeur"></code>
 </example>
 <remarks>
     À l’instanciation, la présence du fichier spécifié est vérifiée.
     Par la suite. il est chargé en mémoire.
 </remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.#ctor(System.String,System.String)">
 <summary>
     Constructeur à partir du nom (et emplacement) du fichier de configuration.
 
     Ce constructeur est plus adapté aux applications Web locales 
     (en développement d'une application Web).
 </summary>
 <param name="_strNomFichConfg">
     Nom (et emplacement) du fichier de configuration contenant les variables
     d'application. Il est possible de spécifier l'emplacement du fichier ("proj".config).
 </param>
 <param name="_strEnvir">Environnement à utiliser.</param>
 <exception cref="T:System.IO.FileNotFoundException">Le fichier de configuration est inexistant.</exception>
 <exception cref="T:System.ApplicationException">Le fichier de configuration est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le PPP est inexistant dans le fichier de configuration.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.vb" region="ConstructeurAverEnvir"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.cs" region="ConstructeurAverEnvir"></code>
 </example>
 <remarks>
     À l’instanciation, la présence du fichier spécifié est vérifiée.
     Par la suite. il est chargé en mémoire.
 </remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.ObtenirEnvirXml(System.IO.FileInfo,System.String,System.String@,System.String@,System.String@)">
 <summary>
     Cette méthode permet d'obtenir les valeurs d'environnement pour <see cref="P:RAMQ.Configuration.RecupConfgEnvir.Cheminee" />,
     <see cref="P:RAMQ.Configuration.RecupConfgEnvir.EnvirAppli" /> et <see cref="P:RAMQ.Configuration.RecupConfgEnvir.EnvirDonne" />, selon le choix d'environnement
     initialisé sur le poste pour le PPP identifié.  Cette surcharge sert pour les tests unitaires.
 </summary>
 <param name="_objFichEnvir">Objet représentant le fichier de configuration de l'environnement.</param>
 <param name="_strPPP">Code d'application (PPP) dont on veut obtenir les valeurs.</param>
 <param name="_strChmin">Retourne la valeur d'environnement pour Cheminee.</param>
 <param name="_strEnvirAppli">Retourne la valeur d'environnement pour EnvApp.</param>
 <param name="_strEnvirDonne">Retourne la valeur d'environnement pour EnvDonne.</param>
 <exception cref="T:System.IO.FileNotFoundException">Le fichier de configuration est inexistant.</exception>
 <exception cref="T:System.ApplicationException">Le fichier de configuration est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le PPP est inexistant dans le fichier de configuration.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.ObtenirEnvirXml(System.String,System.String@,System.String@,System.String@)">
 <summary>
     Cette méthode permet d'obtenir les valeurs d'environnement pour <see cref="P:RAMQ.Configuration.RecupConfgEnvir.Cheminee" />,
     <see cref="P:RAMQ.Configuration.RecupConfgEnvir.EnvirAppli" /> et <see cref="P:RAMQ.Configuration.RecupConfgEnvir.EnvirDonne" />, selon le choix d'environnement
     initialisé sur le poste pour le PPP identifié.
 </summary>
 <param name="_strPPP">Code d'application (PPP) dont on veut obtenir les valeurs.</param>
 <param name="_strChmin">Retourne la valeur d'environnement pour Cheminee.</param>
 <param name="_strEnvirAppli">Retourne la valeur d'environnement pour EnvApp.</param>
 <param name="_strEnvirDonne">Retourne la valeur d'environnement pour EnvDonne.</param>
 <exception cref="T:System.IO.FileNotFoundException">Le fichier de configuration est inexistant.</exception>
 <exception cref="T:System.ApplicationException">Le fichier de configuration est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le PPP est inexistant dans le fichier de configuration.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.vb" region="ObtenirEnvirXml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.cs" region="ObtenirEnvirXml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.ObtenirVarEnvir(System.String)">
 <summary>
     Cette méthode permet d'obtenir la valeur d'une variable d'environnement.
 </summary>
 <param name="_strVarEnvir">Nom de la variable dont on veut obtenir la valeur.</param>
 <returns>La valeur de la variable de configuration spécifiée.</returns>
 <exception cref="T:System.ArgumentException">La variable est inexistante.</exception>
 <example> Obtenir la valeur d'une variable d'environnement avec le constructeur sans l'environnement.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.vb" region="ObtenirVarEnvir"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.cs" region="ObtenirVarEnvir"></code>
 </example>
 <example> Obtenir la valeur d'une variable d'environnement avec le constructeur avec l'environnement.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.vb" region="ObtenirVarEnvirAvecEnvir"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RecupConfgEnvir.cs" region="ObtenirVarEnvirAvecEnvir"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.SelectionnerNoeud(System.String)">
 <summary>
     Cette méthode permet de sélectionner un noeud.
 </summary>
 <param name="_strVarAppli">Nom de la variable d'application à sélectionner.</param>
 <returns>Une collection d'instance d'objet de type <see cref="T:System.Xml.Linq.XElement" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.VerifierExistanceFichier(System.String)">
 <summary>
     Cette méthode permet de vérifier l'existance d'un fichier.
 </summary>
 <param name="_strNomFich">Le nom du fichier à vérifier.</param>
 <returns>True = présent, False = non présent.</returns>
 <exception cref="T:System.IO.FileNotFoundException">Le fichier de configuration est inexistant.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.ObtenirCodAppli">
 <summary>
     Cette méthode permet d'obtenir le code d'application.
 </summary>
 <returns>Le code d'application.</returns>
 <exception cref="T:System.ApplicationException">Le PPP est inexistant dans le fichier de configuration.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Configuration.RecupConfgEnvir.ValiderEnvir(System.String)">
 <summary>
     Cette méthode permet de vérifier la validité de l'environnement.
 </summary>
 <param name="_strEnvir">L'environnement à vérifier.</param>
 <returns>True = valide, False = invalide.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Configuration.NamespaceDoc">
 <summary>
 Espace de nom regroupant des classes, interfaces et services gérant les 
 configurations des applications.
 </summary>
</member>
<member name="T:RAMQ.Web.Configuration.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> et qui offre deux classes permettant d'utiliser certains fichiers de configuration spécifique à la RAMQ. 
 </summary>
 <remarks>
 <para>
 Les classes de cet espace de nom ne remplacent aucunement les classes standards du cadre d'application .Net 
 permettant d'accéder aux fichiers de configuration standard (.config). Ces dernières supportent deux contextes particuliers de 
 configuration propre à la RAMQ :
 </para>
 <h3>Les applications clients lourds</h3>
 <para>
 Ce fichier de configuration est propre à chaque utilisateur et est déposé sur le disque Z: de l'usager (rq_envir.xml). Il est principalement 
 utilisé par l'utilitaire «Choix d'environnement de travail» et permet de spécifier certains paramètres pour l'exécution de l'application
 sur le poste client de l'utilisateur tel que :
 </para>
 <ul>
  <li>Environnement de l'exécutable de l'application.</li>
  <li>Environnement de données à exploiter.</li>
 </ul>
 <para>
 Afin d'exploiter ce fichier de configuration, il est fortement recommandé d'utiliser la classe 
 <see cref="T:RAMQ.Configuration.RecupConfgAppli">RAMQ.Configuration.RecupConfgAppli</see>.
 </para>
 <h3>Les traitements en lot</h3>
 <para>
 Généralement à la RAMQ les traitements en lots sont toujours déployés avec la configuration complète, et ce sur chacun des environnements.
 Ainsi il est possible de lancer un traitement en lot déployé en unitaire, mais qui exploitera la configuration d'un autre environnement.
 </para>
 <para>
 Il est donc fortement recommandé d'utiliser la classe <see cref="T:RAMQ.Configuration.RecupConfgEnvir">RAMQ.Configuration.RecupConfgEnvir</see>
 afin d'exploiter ces valeurs de configurations ce type d'application ou de type similaire.
 </para>
 <h3>Fichiers de configurations standards (.config)</h3>
 <para>
 Les classes de configuration offertes par la composante permettent de supporter certains cas particuliers. Pour le reste, utiliser les classes standards
 du cadre d'application .Net (référer à <see cref="N:System.Configuration">System.Configuration</see>).
 </para>
 <para>
 Il est à noter que l'on retrouve sur les serveurs la section AppSettings du machine.config dans un autre fichier, soit le ramq_machine.config.
 Ce fichier est normalement dans le dossier D:\RAMQ\dotNet. Dans le cadre du développement d'un PPP vous n'avez pas à modifier ce fichier, mais
 sachez tout de même que ce dernier existe, vous pouvez y référer lorsque vous pensez avoir des problèmes de configuration.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Web.Configuration.GroupeElement">
 <summary>
 Définition des éléments constituant la définition d'un groupe de sécurité.
 Composé d'un attribut "Nom"
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.GroupeElement.Nom">
 <summary>
 Obtient ou défini le nom.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Configuration.GroupesElement">
 <summary>
 Définition des éléments constituant la définition des groupes.
 Composé d'une collection de groupe de sécurité
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.GroupesElement.CollectionType">
 <summary>
 Obtient le type de collection.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.GroupesElement.ElementName">
 <summary>
 Obtient le nom d'élément.
 </summary>
 <remarks>Retourne "groupe".</remarks>
</member>
<member name="T:RAMQ.Web.Configuration.OperationElement">
 <summary>
 Définition des éléments constituant la définition d'une opération.
 Composé d'un attribut "Nom" et d'une collection de groupes de sécurité.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.OperationElement.Nom">
 <summary>
 Obtient ou défini nom.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.OperationElement.Groupes">
 <summary>
 Obtient un GroupesElement.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Configuration.OperationsElement">
 <summary>
 Définition des éléments constituant la définition des opération.
 Composé d'une collection d'opération
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.OperationsElement.CollectionType">
 <summary>
 Obtient le type de collection.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.OperationsElement.ElementName">
 <summary>
 Obtient le nom d'élément.
 </summary>
 <remarks>Retourne "operation".</remarks>
</member>
<member name="T:RAMQ.Web.Configuration.ramqAutorisation2">
 <summary>
 Définition de la section personnalisée "ramqAutorisation2"
 qui permet d'inscrire des groupes de sécurités associés à des opérations
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Configuration.ramqAutorisation2.Operations">
 <summary>
 Obtient les opérations de la section personnalisée "ramqAutorisation2".
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Globalisation.Ressources">
 <summary>
 Classe permettant l'accès au fichier de ressources des applications.
 </summary>
</member>
<member name="M:RAMQ.Web.Globalisation.Ressources.ObtnChnLocal(System.String,System.String)">
 <summary>
 Fonction permettant d'obtenir une chaîne de caractères localisée
 à l'aide d'un fichier resx. Cette méthode permet d'interroger
 les fichier de ressource du répertoire App_GlobalResources 
 d'une application web (ASP.Net ou Sharepoint).
 </summary>
 <param name="_strClef">Clef à rechercher dans le fichier de ressource</param>
 <param name="_strNomFichRess">
 Nom du fichier de ressource, sans le code de langue ni l'extension
 Exemple : fichierRess.en-US.resx
 Le paramètre serait : fichierRess
 
 Une exception de type 'System.Resources.MissingManifestResourceException' sera
 levée dans le cas où le fichier reçu en paramètre est introuvable dans le 
 répertoire App_GlobalResources.
 </param>
 <returns>Chaîne de caractères localisée à l'aide d'un fichier ressource.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Globalisation.NamespaceDoc">
 <summary>
 Espace de nom regroupant les méthodes et fonctionnalités globales aux composantes webs.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Erreur.ExceptionRamqExpire">
 <summary>
 Exception RAMQ qui permet de spécifier un TimeOut.
 Ce type est utilisé afin de déterminer que l'erreur est provoqué par une expiration de session (ViewState).
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.Erreur.ExceptionRamqExpire.#ctor(System.String)">
 <summary>
     Constructeur par défaut.
 </summary>
 <param name="_strMsg">Le message de l'exception.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Erreur.NamespaceDoc">
 <summary>
 Espace de nom Exception RAMQ qui offre des classes et interfaces pour la gestion des erreurs.
 </summary>
</member>
<member name="T:RAMQ.Web.ModuleHttp.ModulAuthnAppliInitl">
 <summary> 
     Définition de la classe permettant d'authentifier avec le compte 
 du app pool l'appel du module "Application initialization" de IIS (Warm-Up)
 </summary>
 <remarks>
  Auteur : Jean-Philippe Bégin <br/>
  Date   : 2013-02-18
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : 2012-02-09<br/>
  Description:
 <br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulAuthnAppliInitl.Init(System.Web.HttpApplication)">
 <summary>
 Initialisation du module
 </summary>
 <param name="context">Context actuel de l'appel.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulAuthnAppliInitl.Dispose">
 <summary>
 Implémentation du dispose
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulAuthnAppliInitl.AuthenticateRequest(System.Object,System.EventArgs)">
 <summary>
 Permet d'authentifier la requete si elle provient du module d'initialisation de IIS
 (Application Initialization Module)
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulAuthnAppliInitl.VerifierSiAppInit">
 <summary>
 Permet de s'assurer que l'appel provient du module d'initialisation de IIS
 (Application Initialization Module)
 </summary>
 <returns>Si oui ou non l'appel provient du module de IIS</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.ModuleHttp.ModulHttpErr">
 <summary> 
     Définition de la classe permettant d'attraper les erreur HTTP survenu dans l'application web
     et de rediriger cette erreur vers la bonne classe d'erreur (<see cref="P:RAMQ.Attribut.InfoGestionErr.ClasseErreur" />)
     associée à la méthode, la classe ou l'assembly dans laquelle l'erreur est survenue.
     Si aucune classe d'erreur n'est associée, ou si une erreur survient lors de l'appel
     de la classe d'erreur, on gère l'erreur de façon générique.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : 2012-02-09<br/>
  Description:
     Ajout d'une page d'erreur incorporée dans la composante afin de s'assurer que la page
     d'erreur soit affichée advenant le fait qu'une service (exemple BD Sharepoint) ne soit accessible.
 <br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.Init(System.Web.HttpApplication)">
 <summary>
     Cette méthode initialise le module Http.
 </summary>
 <param name="_objContx">Contexte Http</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.OnError(System.Object,System.EventArgs)">
 <summary>
     Cette méthode est appelé lorsqu'une erreur est survenue dans le contexte web à lequelle le module est associé.
     (dans le web.config)
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.Dispose">
 <summary>
     Cette méthode ne fait rien pour l'instant.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.ObtnUrlCompl(System.String)">
 <summary>
 Retourne un URL complet à partir d'un URL relatif.
 </summary>
 <param name="_strUrlRelatif">URL relatif.</param>
 <returns>URL complet.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.TraiterErreursNonGeree(System.Collections.Generic.List{System.Exception})">
 <summary>
     Cette méthode permet de traiter les erreurs survenue dans la gestion d'erreur 
     et les erreurs non-gérée.
 </summary>
 <param name="_colctEx">Liste des erreurs non-gérée.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.JournaliseException(System.Exception)">
 <summary>
 Vérifie si le type d'exception doit être journalisé
 </summary>
 <param name="_exException"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.AppelerRecepteur(System.Exception)">
 <summary>
     Cette méthode permet d'appeler le récepteur dans la portée la plus granulaire ou on trouve
     un récepteur associé à la méthode dans laquelle l'erreur est survenue.
 </summary>
 <param name="_exException">L'objet exception qui représente l'erreur.</param>
 <returns>Indique si le récepteur a été appelé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.ObtenirRecepteur(System.Exception)">
 <summary>
     Cette méthode cherche une classe de gestion d'erreur dans la pile d'appelle de l'exception
     en partant de la fin de la pile.
 </summary>
 <param name="_exException">L'objet exception qui représente l'erreur.</param>
 <returns>Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Attribut.IClaErr" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.ObtenirInfoGestionErreurs(System.Reflection.MethodBase)">
 <summary>
     Cette méthode obtient l'information sur la classe recepteur de l'erreur associé à la méthode.
     On vérifie si une est associé à la méthode pour commencer, ensuite la classe
     sinon à l'assembly.
 </summary>
 <param name="_objMethod">Instance de la classe <see cref="T:System.Reflection.MethodBase" />.</param>
 <returns>Collection d'instances de la classe <see cref="T:RAMQ.Attribut.InfoGestionErr" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.ErreurSurvenue(System.Exception)">
 <summary>
     Cette méthode journalise l'erreur lorsque l'erreur n'est pas géré par aucune 
     composantes impliqué dans l'erreur.
 </summary>
 <param name="_exException">L'objet exception qui représente l'erreur.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.ObtenirSSFU(System.Exception)">
 <summary>
     Cette méthode permet d'obtenir le SSFU du premier assembly RAMQ impliqué dans l'erreur
     cette fonction est utilisé lorsqu'aucune gestion d'erreur n'est 
     déclaré pour les assemblys en cause
 </summary>
 <param name="_exException">L'objet exception qui représente l'erreur.</param>
 <returns>Le SSFU.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.AfficherPageErrTech(System.Web.HttpContext)">
 <summary>
 Afficher une page qui décrit l'erreur technique
 </summary>
 <param name="_objContx">HttpContext courant</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.NomPageErreur(System.Web.HttpContext)">
 <summary>
 Obtenir la page d'erreur à afficher selon la zone d'exécution et l'état de débuggage
 </summary>
 <param name="_objContx"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.ExceptionExpire(System.Exception)">
 <summary>
 Vérifier si le type de l'exception indique qu'il s'agit de l'expiration d'une session
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.ObtenirPageErrTech(System.String)">
 <summary>
 Obtenir la page HTML de la ressource incorporée de la page d'erreur technique
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.DetailTech(System.String,System.Web.HttpContext)">
 <summary>
 Retournée de l'information technique selon un token
 </summary>
 <param name="_strNomToken"></param>
 <param name="_objContext"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.IDUsager">
 <summary>
 Retourner l'identifiant de l'utilisateur courant 
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.ModuleHttp.ModulHttpErr.RemplaceTokens(System.String,System.Web.HttpContext)">
 <summary>
 Remplace les tokens (WebResource, DetailTech) qui se trouvent dans le HTML
 </summary>
 <param name="_strSource"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ">
 <summary>
 Définition de la classe représentant l'en-tête Soap personnalisée pour 
 la RAMQ.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis <br/>
  Date   : 2011-12-22
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="F:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.strIdent">
 <summary>
 Identité de l'utilisateur appelant selon le format (Domain/uXXXX)
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.IdentiteRAMQ">
 <summary>
 Propriété permettant d'obtenir et de définir l'identité de l'utilisateur appelant
 </summary>
 <returns>L'identité de l'utilisateur appelant</returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.TypeAuthRAMQ">
 <summary>
 Obtient ou définit le type d'authentification
 à inscrire dans l'en-tête
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.RolesRAMQ">
 <summary>
 Obtient la liste des rôles associés à
 l'identifiant appelant
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.#ctor">
 <summary>
 Constructeur par défaut (sans paramètres)
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.#ctor(System.String)">
 <summary>
 Constructeur avec l'identifiant de l'appelant
 </summary>
 <param name="_strUtil">Identifiant de l'appelant</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.#ctor(System.String,System.Collections.Generic.List{System.String})">
 <summary>
 Constructeur
 </summary>
 <param name="_strUtil">Le nom de l'identifiant appelant</param>
 <param name="_colctRoles">La liste de rôles associés à cet identifiant</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Web.Services.Protocols.EnteteSoapRAMQ.#ctor(System.String,System.Collections.Generic.List{System.String},RAMQ.Enumeration.EnumTypesAuthn)">
 <summary>
 Constructeur
 </summary>
 <param name="_strUtil">Le nom de l'identifiant appelant</param>
 <param name="_colctRoles">La liste de rôles associés à cet identifiant</param>
 <param name="_enuTypeAuth">Type d'authentification de l'identifiant.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Web.Services.Protocols.NamespaceDoc">
 <summary>
 Espace de nom regroupant les classes et interfaces reliés au SOAP personnalisé
  pour la RAMQ.
 </summary>
</member>
<member name="T:RAMQ.Web.Services.Protocols.SoapHttpClientRAMQ">
 <summary>
 Définition de la classe représentant un SoapHttpClient personnalisé. Elle
 permet l'ajout des en-têtes SOAP nécessaires.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis <br/>
  Date   : 2011-12-22
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Web.Services.Protocols.SoapHttpClientRAMQ.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
 <summary>
 Fonction permettant l'écriture des en-têtes SOAP dans le message
 </summary>
 <param name="message">Le message Soap contenant le requête originale</param>
 <param name="bufferSize">La taille du message</param>
 <returns>un XmlWriter contenant le message et les en-têtes à écrires</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.Adresse">
 <summary> 
     Définition de la classe de validation des adresses pour les messages et les télécopies .
 </summary>
 <remarks>
  Auteur : Pascal Hamel <br/>
  Date   : 2015-05-14
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="F:RAMQ.Courriel.Adresse.REGEX_ADRESSE_COURRIEL">
 <summary>
 Regex servant pour la validation d'une adresse de courriel
 </summary>
</member>
<member name="P:RAMQ.Courriel.Adresse.RegexAdresseCourriel">
 <summary>
 Regex servant pour la validation d'une adresse de courriel
 </summary>
 <returns></returns>
</member>
<member name="M:RAMQ.Courriel.Adresse.ValiderAdrCourl(System.String)">
 <summary>
     Cette méthode permet de vérifier si l'adresse passée est
     dans un format valide pour être expédiée.
 </summary>
 <param name="_strAdresse">Une adresse de courriel à valider.</param>
 <returns>Instance de la classe <see cref="T:RAMQ.Courriel.ParamSortieValidationAdresse" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="ValiderAdrCourl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="ValiderAdrCourl"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Adresse.ValiderNoTlcop(System.String)">
 <summary>
     Cette méthode permet de vérifier si l'adresse passée est
     dans un format valide pour être expédiée.
 </summary>
 <param name="_strNoTelecopieur">Un numéro de télécopieur à valider.</param>
 <returns>Instance de la classe <see cref="T:RAMQ.Courriel.ParamSortieValidationAdresse" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="ValiderNoTlcop"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="ValiderNoTlcop"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> et qui offre des classes permettant de faire l'envoi de courriel. 
 </summary>
 <remarks>
 <para>
 Les classes de cet espace de nom permettent d'encapsuler les fonctionnalités d'envoi de courriel et de télécopie offertes par le cadre 
 d'application .Net. Principalement, elle est utilisée par un service Web qui permet à des applications installées sur des postes client 
 ou sur des serveurs n'ayant pas accès directement au serveur SMTP d'effectuer l'envoi de courriel et donc par le fait même de détecter 
 automatiquement les paramètres nécessaires afin d'atteindre le bon serveur SMTP.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Courriel.ParamSortieValidationAdresse">
 <summary> 
     Définition de la classe représentant les paramètres de sortie des méthodes
     <see cref="M:RAMQ.Courriel.Adresse.ValiderAdrCourl(System.String)" /> et <see cref="M:RAMQ.Courriel.Adresse.ValiderNoTlcop(System.String)" />.
 </summary>
 <remarks>
  Auteur : Pascal Hamel <br/>
  Date   : 2015-05-14
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Courriel.ParamSortieValidationAdresse.EstEnErreur">
 <summary>
     Propriété qui indique si l'adresse est en erreur ou pas.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.MessageTlcop">
 <summary> 
     Définition de la classe représentant une télécopie.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Courriel.MessageTlcop.#ctor">
 <summary>
     Constructeur par défaut. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.MessageTlcop.Destinataire">
 <summary>
 Propriété qui retourne le ou les destinataires du message.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.MessageTlcop.CCDestinataire">
 <summary>
 Propriété qui retourne le ou les destinataires en copie conforme du message.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.MessageTlcop.CCIDestinataire">
 <summary>
 Propriété qui retourne le ou les destinataires en copie conforme invisible du message.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageTlcop.AjoutDomDesti(System.String)">
 <summary>
 Methode permettant d'ajouter ou re remplacer le nom de domaine lors de l'envoi d'une telecopie (Fax).
 </summary>
 <param name="_strDest"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.MessageCourl">
 <summary> 
     Définition de la classe représentant un courriel.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Courriel.MessageCourl.#ctor">
 <summary>
     Constructeur par défaut. 
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageCourl.#ctor(System.Boolean)">
 <summary>
 Constructeur par défaut 2. 
 </summary>
 <param name="_blnValidCourl">True si on veut valider le domaine, sinon false.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.IMessage">
 <summary> 
 Définition de l'interface représentant les informations nécessaires à la création d'un courriel ou d'une télécopie.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.AdrDomaineDns">
 <summary>
     Propriété qui retourne le nom du serveur du domaine corporatif.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.FichiersAttaches">
 <summary>
     Propriété qui retourne la collection des fichiers attachés.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.Destinataire">
 <summary>
     Propriété qui retourne le ou les destinataires du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.Expediteur">
 <summary>
     Propriété qui retourne l'expéditeur du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.CCDestinataire">
 <summary>
     Propriété qui retourne le ou les destinataires en copie conforme du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.CCIDestinataire">
 <summary>
     Propriété qui retourne le ou les destinataires en copie conforme du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.Sujet">
 <summary>
     Propriété qui retourne le sujet du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.Message">
 <summary>
     Propriété qui retourne le message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.Importance">
 <summary>
     Propriété qui retourne l'importance du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.Format">
 <summary>
     Propriété qui retourne le format du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.EncodageMsg">
 <summary>
     Propriété qui retourne l'encodage du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IMessage.EnteteMsg">
 <summary>
     Propriété qui retourne la collection d'entête du message.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.IMessage.AjoutEntete(System.String,System.String)">
 <summary>
     Cette méthode permet d'ajouter une clé et sa valeur dans la
     liste des entêtes (HEADER) du message. 
 </summary>
 <param name="_strCle">Clé de l'entête.</param>
 <param name="_strVal">Valeur associée à la clé de l'entête.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="AjouterEntete"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="AjouterEntete"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.IMessageSMTP">
 <summary> 
     Définition de l'interface qui permet la gestion de l'expédition d'un courriel
     ou d'une télécopie via un serveur SMTP.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/> 
 </remarks>
</member>
<member name="P:RAMQ.Courriel.IMessageSMTP.ServrSmtp">
 <summary>
 Propriété qui retourne le nom du serveur SMTP.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.IMessageSMTP.Envoyer(RAMQ.Courriel.IMessage)">
 <summary>
 Cette méthode permet d'envoyer un courriel ou une télécopie.
 </summary>
 <param name="_objIMessage">Instance d'une classe qui implémente <see cref="T:RAMQ.Courriel.IMessage" />.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="EnvoyerMessage"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="EnvoyerMessage"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.IMessageSMTP.Envoyer(System.Collections.Generic.IList{RAMQ.Courriel.IMessage})">
 <summary>
 Cette méthode permet d'envoyer une liste de courriels ou une télécopies.
 </summary>
 <param name="_colctIMessage">Liste des messages ou télécopies à envoyer.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="EnvoyerColctMessages"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="EnvoyerColctMessages"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.FichierAttache">
 <summary> 
     Définition de la classe représentant un fichier attaché.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Courriel.FichierAttache.#ctor">
 <summary>
     Constructeur privé pour empêcher l'instanciation de l'objet sans paramètre.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.FichierAttache.#ctor(System.String,System.Byte[],RAMQ.Enumeration.EnumEncodFichAtch)">
 <summary>
     Constructeur qui initialise les variables (attributs) nécessaires pour créer
     un objet de la classe. 
 </summary>
 <param name="_strNomFich">Nom du fichier à attacher.</param>
 <param name="_bytFichAtch">Contenu du fichier à attacher.</param>
 <param name="_enuEncodFichAtch">Encodage du fichier à attacher.</param>
 <remarks>
     Il est privé pour empecher l'utilisateur de le créer publiquement
     car la classe ne peut exister sans faire partie de la classe 
     <see cref="T:RAMQ.Courriel.MessageCourl" />.
 </remarks>
</member>
<member name="P:RAMQ.Courriel.FichierAttache.NomFichAtchCourl">
 <summary>
     Propriété qui retourne le nom du fichier attaché.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.FichierAttache.FichAtchCourl">
 <summary>
     Propriété qui retourne le contenu du fichier attaché.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.FichierAttache.EncodFichAtch">
 <summary>
     Propriété qui retourne l'encodage du fichier attaché.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.FichierAttache.AjouterFichAtch(System.String,System.Byte[],RAMQ.Enumeration.EnumEncodFichAtch)">
 <summary>
     Cette méthode permet de créer une nouvelle instance de la classe. Elle 
     permet à la classe appellante (FichierAttaches) d'ajouter une instance 
     de cette classe  Elle est déclaré "Friend" car elle est accessible uniquement
     à l'interieur de cet assembly. 
 </summary>
 <param name="_strNomFich">Le nom du fichier attaché.</param>
 <param name="_bytFichAtch">Le contenu du fichier attaché.</param>
 <param name="_enuEncodFichAtch">L'encodage du fichier attaché.</param>
 <returns>Instance de la classe.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.FichierAttaches">
 <summary> 
     Définition de la classe représentant une collection de fichiers attachés.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Courriel.FichierAttaches.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:RAMQ.Courriel.FichierAttaches.AjouterFichAtch(System.String,System.Byte[],RAMQ.Enumeration.EnumEncodFichAtch)">
 <summary>
     Cette méthode permet d'ajouter un fichier attaché à la collection. 
 </summary>
 <param name="_strNomFichAtch">Nom du fichier à attacher.</param>
 <param name="_bytFichAtch">Contenu du fichier à attacher.</param>
 <param name="_enuEncodFichAtch">Encodage du fichier à attacher.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="AjouterFichAtch"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="AjouterFichAtch"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.FichierAttaches.AssignerFichAtch(RAMQ.Courriel.IFichierAttache)">
 <summary>
     Cette méthode permet d'ajouter un fichier attaché à la collection. 
 </summary>
 <param name="_objFichAtch">Instance de la classe <see cref="T:RAMQ.Courriel.FichierAttache" />.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.IFichierAttache">
 <summary> 
     Définition de l'interface représentant un fichier attaché.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Courriel.IFichierAttache.NomFichAtchCourl">
 <summary>
     Propriété qui retourne le nom du fichier attaché.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IFichierAttache.FichAtchCourl">
 <summary>
     Propriété qui retourne le contenu du fichier attaché.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.IFichierAttache.EncodFichAtch">
 <summary>
     Propriété qui retourne l'encodage du fichier attaché.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.MessageSMTP">
 <summary> 
     Définition de la classe qui permet la gestion de l'expédition d'un courriel
     ou d'une télécopie via un serveur SMTP.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.#ctor">
 <summary>
     Constructeur par default.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.vb" region="Constructeur"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.cs" region="Constructeur"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.#ctor(RAMQ.svcIServMessage.IServMessage,System.String,System.Boolean)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objIServMessage">Objet qui implémente l'interface <see cref="T:RAMQ.svcIServMessage.IServMessage" />.</param>
 <param name="_strServrSMTP">Le nom du serveur SMTP à utiliser.</param>
 <param name="_blnAppelSvc">Indique si l'on doit appeller le service web.</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.MessageSMTP.ServrSmtp">
 <summary>
     Propriété qui retourne le nom du serveur SMTP.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.Envoyer(RAMQ.Courriel.IMessage)">
 <summary>
     Cette méthode permet d'envoyer un courriel ou une télécopie.
 </summary>
 <param name="_objIMessage">Instance d'une classe qui implémente <see cref="T:RAMQ.Courriel.IMessage" />.</param>
 <exception cref="T:System.ApplicationException">Le nom du serveur SMTP {0} pourrait être invalide ou {1}.</exception>
 <example> Envoyer un courriel sans pièce jointe.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.vb" region="EnvoyerCourl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.cs" region="EnvoyerCourl"></code>
 </example>
 <example>Envoyer un courriel avec pièce jointe.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.vb" region="EnvoyerCourlPieceJointe"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.cs" region="EnvoyerCourlPieceJointe"></code>
 </example>
 <example>Envoyer une télécopie.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.vb" region="EnvoyerTlcop"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.cs" region="EnvoyerTlcop"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.Envoyer(System.Collections.Generic.IList{RAMQ.Courriel.IMessage})">
 <summary>
 Cette méthode permet d'envoyer une liste de courriels ou une télécopies.
 </summary>
 <param name="_colctIMessage">Liste des messages ou télécopies à envoyer.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.vb" region="EnvoyerListeCourl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MessageSMTP.cs" region="EnvoyerListeCourl"></code>
 </example>
 <remarks>Suivre l'exemple d'envoyer un message pour les télécopies et les courriels avec
  pièces jointes.</remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.ObtenirTypeEncodMsgCourl(RAMQ.Enumeration.EnumEncodMsgCourl)">
 <summary>
     Cette méthode permet de déterminer le type d'encodage du message courriel. 
 </summary>
 <param name="_enuEncodMsgCourl">Type d'encodage du message du courriel.</param>
 <returns>L'encodage du courriel.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.ObtenirImportMsg(RAMQ.Enumeration.EnumImportanceCourl)">
 <summary>
     Cette méthode permet de déterminer l'importance du courriel.
 </summary>
 <param name="_enuImportanceCourl">Importance du courriel.</param>
 <returns>L'importance du courriel.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.ObtenirFormatMsg(RAMQ.Enumeration.EnumFormatMessage)">
 <summary>
     Cette méthode permet de déterminer le format du courriel.
 </summary>
 <param name="_enuFormatMsg">Le format du courriel.</param>
 <returns>Une valeur de type <see cref="T:System.Boolean" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.ObtenirEncodFichAtch(RAMQ.Enumeration.EnumEncodFichAtch)">
 <summary>
     Cette méthode permet d'obtenir l'encodage d'un fichier attaché.
 </summary>
 <param name="_enuEncodFichAtch">Encodage du fichier attaché.</param>
 <returns>Une valeur de type <see cref="T:System.Net.Mime.TransferEncoding" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.MessageSMTP.FermerConxnServMessage">
 <summary>
     Cette méthode permet de fermer la connexion avec le service WCF.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Courriel.Message">
 <summary> 
     Définition de la classe représentant les informations nécessaires à la
     creation d'un courriel ou d'une télécopie.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : Pascal Hamel<br/>
  Date   : 2015-05-14<br/>
  Description: Refactoring de la classe pour exposer les méthodes de validations <br/>
               des adresses de courriel et de télécopie (DS150430093353645).
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Courriel.Message.#ctor">
 <summary>
     Constructeur par défaut. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.AdrDomaineDns">
 <summary>
     Propriété qui retourne le nom du serveur du domaine corporatif.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.FichiersAttaches">
 <summary>
     Propriété qui retourne la collection des fichiers attachés.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.Destinataire">
 <summary>
     Propriété qui retourne le ou les destinataires du message.
 </summary>
 <exception cref="T:System.ApplicationException">L'adresse est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le domaine n'existe pas.</exception>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.Expediteur">
 <summary>
     Propriété qui retourne l'expéditeur du message.
 </summary>
 <exception cref="T:System.ApplicationException">L'adresse est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le domaine n'existe pas.</exception>
 <exception cref="T:System.ApplicationException">Une seule adresse expéditeur est autorisée.</exception>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.CCDestinataire">
 <summary>
     Propriété qui retourne le ou les destinataires en copie conforme du message.
 </summary>
 <exception cref="T:System.ApplicationException">L'adresse est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le domaine n'existe pas.</exception>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.CCIDestinataire">
 <summary>
     Propriété qui retourne le ou les destinataires en copie conforme invisible du message.
 </summary>
 <exception cref="T:System.ApplicationException">L'adresse est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le domaine n'existe pas.</exception>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.Sujet">
 <summary>
     Propriété qui retourne le sujet du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.Message">
 <summary>
     Propriété qui retourne le message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.Importance">
 <summary>
     Propriété qui retourne l'importance du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.Format">
 <summary>
     Propriété qui retourne le format du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.EncodageMsg">
 <summary>
     Propriété qui retourne l'encodage du message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Courriel.Message.EnteteMsg">
 <summary>
     Propriété qui retourne la collection d'entête du message.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.DomaineAdrCourlValid(System.String,System.String)">
 <summary>
     Cette méthode permet de valider si le domaine du courriel est valide (Ex: ramq.gouv.qc.ca) 
     ou invalide (Ex: ramq.gouvvre.qc.ca).
 </summary>
 <param name="_strNomDomaine">Nom du domaine.</param>
 <param name="_strDomAdrCourlDns">Nom du serveur DNS.</param>
 <returns>True si le domaine de l'adresse existe. False dans le cas contraire.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="DomaineAdrCourlValid"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="DomaineAdrCourlValid"></code>
 </example>
 <exception cref="T:System.ApplicationException">Le nom du serveur DNS corporatif est invalide.</exception>
 <exception cref="T:System.ApplicationException">Les serveurs DNS corporatifs sont inaccessibles.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.AjoutEntete(System.String,System.String)">
 <summary>
     Cette méthode permet d'ajouter une clé et sa valeur dans la
     liste des entêtes (HEADER) du message. 
 </summary>
 <param name="_strCle">Clé de l'entête.</param>
 <param name="_strVal">Valeur associée à la clé de l'entête.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.vb" region="AjouterEntete"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Courriel.cs" region="AjouterEntete"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.ObtenirAdrIP(System.String)">
 <summary>
     Cette méthode convertit le nom du serveur DNS corporatif passé en paramètre
     en adresse IP reliée à ce serveur DNS. Comme il peut y avoir plus d'une adresse
     pour le même nom de serveur, les adresses IP seront contenus dans un tableau.
 </summary>
 <param name="_strDomAdrCourlDns">Nom du serveur DNS.</param>
 <exception cref="T:System.ApplicationException">Le nom du serveur DNS corporatif est invalide.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.DomaineAdrCourlValid(System.String)">
 <summary>
     Cette méthode permet de valider si le domaine du courriel est valide (Ex: ramq.gouv.qc.ca) 
     ou invalide (Ex: ramq.gouvvre.qc.ca).
 </summary>
 <param name="_strNomDomaine">Nom du domaine.</param>
 <returns>True si le domaine de l'adresse existe. False dans le cas contraire.</returns>
 <exception cref="T:System.ApplicationException">Les serveurs DNS corporatifs sont inaccessibles.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.TransportUdp(System.String,System.Int32,System.Byte[])">
 <summary>
     Cette méthode permet par l'entremise d'un socket, d'ouvrir un port 
     (le port 53) et d'envoyer sur le réseau un paquet contenant le domaine du 
     destinataire et l'adresse de retour. Grâce a la méthode SendTo, nous envoyons 
     le tableau bytPaquet et nous accusons reception avec la méthode ReceiveFrom. 
     La fonction retourne un tableau de byte contenant la réponse du destinataire 
     s'il y a eu un ping.
 </summary>
 <param name="_strAdrDomaineIP">Adresse IP.</param>
 <param name="_intPort">Port utilisé pour envoyer la requête.</param>
 <param name="_bytPaquet">Tableau de byte contenant la réquête du domaine destinataire.</param>
 <returns>Tableau de byte contenant la réponse du domaine destinataire</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.CreationEntete">
 <summary>
     Cette méthode permet la création de l'entête du stream pour valider
     le domaine de l'adresse qui sera  envoyé sur le réseau par le protocole UDP.
 </summary>
 <returns>Tableau de byte représentant l'entête.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.CreationRequete(System.String,RAMQ.Enumeration.DNSField.EnumQType)">
 <summary>
     Cette méthode permet la création de la requête pour valider le domaine de l'adresse qui sera envoyé 
     sur le réseau par le protocole UDP en byte
 </summary>
 <param name="_strAdrDomDest">Domaine de l'adresse à vérifier.</param>
 <param name="_enuQuestType">Valeur du QTYPE a utiliser pour créer une requête DNS. Peut être une valeur QType ou TYPE.</param>
 <returns>Tableau de byte représentant la requête.</returns>
 <remarks>Voir https://www.ietf.org/rfc/rfc1035.txt pour les valeurs possibles de _enuQuestType</remarks>
</member>
<member name="M:RAMQ.Courriel.Message.TransformerEnByte(System.Int32)">
 <summary>
     Cette méthode permet la transformation d'integer en 4 bytes pour le transport sur le réseau.
 </summary>
 <param name="_intVal">Valeur à transformer en byte.</param>
 <returns>Valeur transformé sous forme de tableau de byte.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.TransformerEnInteger(System.Byte[],System.Int32)">
 <summary>
     Cette méthode permet la transformation de byte en integer lors de la réception du message de retour.
 </summary>
 <param name="_bytVal">Valeur à transformer en integer</param>
 <param name="_intIndex">Index du tableau</param>
 <returns>Valeur transformé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.ObtenirRequete(System.Int32@)">
 <summary>
     Cette méthode permet d'obtenir la requête de retour.
 </summary>
 <param name="_intLocat">Position dans le tableau de byte de la requête.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.ObtenirEntete">
 <summary>
     Cette méthode permet d'obtenir l'entête de retour.
 </summary>
 <returns>La grosseur de l'entête.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.NomDomaineCourl(System.Int32@)">
 <summary>
     Cette méthode permet la récupération du nom de domaine à valider.
 </summary>
 <param name="_intLocat">Valeur à transformer en integer.</param>
 <returns>Le nom du domaine à valider.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Courriel.Message.VerifierAdrCourl(System.String,System.Boolean)">
 <summary>
     Cette méthode permet de valider les adresses de courriel.
 </summary>
 <param name="_strAdr">Adresse(s) à vérifier.</param>
 <param name="_blnExped">Indique si c'est une adresse d'expéditeur.</param>
 <exception cref="T:System.ApplicationException">L'adresse est invalide.</exception>
 <exception cref="T:System.ApplicationException">Le domaine n'existe pas.</exception>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Diagnostics.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> et qui permet de faire un emprunt d'identité particulier.
 </summary>
 <remarks>
 <para>
 Les classes de cet espace de nom ne remplacent pas l'emprunt d'identité standard utilisé à la RAMQ, à moins d'un besoin particulier un PPP
 standard n'a pas besoin d'utiliser ces classes afin de réaliser cette tâche.
 </para>
 <para>
 Ces classes permettent de faciliter le processus d'emprunt d'identité nécessaire au lancement de scripts PowerShell sur des serveurs distants. 
 Si vous croyez que votre PPP doit utiliser des éléments de cet espace de nom, nous vous recommandons de faire approuver son utilisation par 
 votre conseiller organique et au besoin de consulter le SSD.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Diagnostics.ProcessImpersonate">
 <summary>
 Lancer un processus sans perdre l'emprunt d'identité lors d'appel distant.
 </summary>
 <remarks>
 Ce module a été ajouté afin de permettre de faire de l'impersonalisation de processus powershell sur serveur distant. Il facilite l'appel 
 à certains APIs de Windows afin de répondre à ce besoin.
 </remarks>
</member>
<member name="T:RAMQ.Diagnostics.ProcessImpersonate.STARTUPINFO">
 <summary>
 Structure représentant les informations de démarrage.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Diagnostics.ProcessImpersonate.PROCESS_INFORMATION">
 <summary>
 Structure représentant les informations d'un traitement.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Diagnostics.ProcessImpersonate.SECURITY_ATTRIBUTES">
 <summary>
 Structure représentant les attributs de sécurité.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.GetCurrentProcess">
 <summary>
 API pour obtenir l'adresse du "handle" du traitement courant.
 </summary>
 <returns>Adresse du "handle" du traitement courant.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.GetExitCodeProcess(System.IntPtr,System.UInt32@)">
 <summary>
 API pour obtenir le code de sortie d'un traitement.
 </summary>
 <param name="_objProcess">Adresse du traitement dont on désire le code de sortie.</param>
 <param name="_objExitCode">Code de sortie du traitement <code>ByRef</code>.</param>
 <returns><code>False</code> = une erreur est survenue. <code>True</code> = le code de sortie a été obtenu avec succès.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.CloseHandle(System.IntPtr)">
 <summary>
 API pour femer un handle.
 </summary>
 <param name="_objHandle">Handle à fermer.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.CreatePipe(System.IntPtr@,System.IntPtr@,RAMQ.Diagnostics.ProcessImpersonate.SECURITY_ATTRIBUTES@,System.Int64)">
 <summary>
 API pour créer un canal de communication entre le processus enfant et parent.
 </summary>
 <param name="_objReadPipe">Canal de lecture <code>ByRef</code>.</param>
 <param name="_objWritePipe">Canal d'écriture <code>ByRef</code>.</param>
 <param name="_objPipeAttributes">Attributs du canal <code>ByRef</code>.</param>
 <param name="_lngSize">Taille.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.WaitForSingleObject(System.UInt32,System.Int64)">
 <summary>
 API pour attendre jusqu'à une durée déterminée pour que le traitement enfant soit terminé.
 </summary>
 <param name="_objHandle">"Handle" du traitement à attendre.</param>
 <param name="_lngMilliseconds">Temps d'attente maximal en millisecondes.</param>
 <returns>128 = <code>WAIT_ABANDONED</code> (n'a pu être libéré), 0 = <code>WAIT_OBJECT_0</code> (traitement terminé), 258 = <code>WAIT_TIMEOUT</code> (délai écoulé), -1 = <code>WAIT_FAILED</code> (échec).</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.DuplicateHandle(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32,System.Boolean,System.Int32)">
 <summary>
 API pour reproduire un "handle".
 </summary>
 <param name="_objSourceProcess">Adresse du traitement d'origine.</param>
 <param name="_objSourceHandle">Adresse du "handle" d'origine.</param>
 <param name="_objTargetProcess">Adresse du traitement cible.</param>
 <param name="_objTargetHandle">Adresse du "handler" cible <code>ByRef</code>.</param>
 <param name="_intDesiredAccess">Accès désiré.</param>
 <param name="_blnHeritage">Indicateur d'héritage.</param>
 <param name="_intOption">Option,</param>
 <returns><code>False</code> = une erreur est survenue. <code>True</code> = le code de sortie a été obtenu avec succès.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.GetStdHandle(System.Int32)">
 <summary>
 API pour obtenir le "handle" d'un périphérique standard.
 </summary>
 <param name="_intStdHandle">Code du périphérique standard à obtenir.</param>
 <returns>Adresse du "handle" du périphérique standard. <code>-1</code> s'il y a une erreur. <code>Nothing</code> si l'application n'a pas de périphérique associé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.CreateProcess(System.String@,System.String@,RAMQ.Diagnostics.ProcessImpersonate.SECURITY_ATTRIBUTES@,RAMQ.Diagnostics.ProcessImpersonate.SECURITY_ATTRIBUTES@,System.Boolean,System.Int32,System.IntPtr,System.IntPtr,RAMQ.Diagnostics.ProcessImpersonate.STARTUPINFO@,RAMQ.Diagnostics.ProcessImpersonate.PROCESS_INFORMATION@)">
 <summary>
 API pour lancer un traitement.
 </summary>
 <param name="_strAppName">Nom de l'application.</param>
 <param name="_strCommandLine">Ligne de commande.</param>
 <param name="_objProcessAttributes">Attributs du processus <code>ByRef</code>.</param>
 <param name="_objThreadAttributes">Attributs de la tâche <code>ByRef</code>.</param>
 <param name="_blnInheritHandles">Indicateur de "handle" hérité.</param>
 <param name="_intCreationFlags">Indicateur de création.</param>
 <param name="_objEnvironment">Adresse d'environnement.</param>
 <param name="_objCurrentDirectory">Adresse de dossier courant.</param>
 <param name="_objStartupInfo">Informations de démarrage <code>ByRef</code>.</param>
 <param name="_objProcessInformation">Informations du traitement <code>ByRef</code>.</param>
 <returns><code>False</code> = une erreur est survenue. <code>True</code> = le code de sortie a été obtenu avec succès.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.CreateProcessAsUser(System.IntPtr,System.String@,System.String@,RAMQ.Diagnostics.ProcessImpersonate.SECURITY_ATTRIBUTES@,RAMQ.Diagnostics.ProcessImpersonate.SECURITY_ATTRIBUTES@,System.Boolean,System.Int32,System.IntPtr,System.String@,RAMQ.Diagnostics.ProcessImpersonate.STARTUPINFO@,RAMQ.Diagnostics.ProcessImpersonate.PROCESS_INFORMATION@)">
 <summary>
 API pour lancer un traitement impersonifié.
 </summary>
 <param name="_objToken">Adresse de jeton.</param>
 <param name="_strApplicationName">Nom de l'application.</param>
 <param name="_strCommandLine">Ligne de commande.</param>
 <param name="_objProcessAttributes">Attributs du traitement <code>ByRef</code>.</param>
 <param name="_objThreadAttributes">Attributs de la tâche <code>ByRef</code>.</param>
 <param name="_blnInheritHandles">Indicateur de "handle" hérité.</param>
 <param name="_intCreationFlags">Indicateur de création.</param>
 <param name="_objEnvironment">Adresse d'environnement.</param>
 <param name="_strCurrentDriectory">Dossier courant.</param>
 <param name="_objStartupInfo">Informations de démarrage <code>ByRef</code>.</param>
 <param name="_objProcessInformation">Informations du traitement <code>ByRef</code>.</param>
 <returns><code>False</code> = une erreur est survenue. <code>True</code> = le code de sortie a été obtenu avec succès.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.DuplicateTokenEx(System.IntPtr,System.Int32,RAMQ.Diagnostics.ProcessImpersonate.SECURITY_ATTRIBUTES@,System.Int32,System.Int32,System.IntPtr@)">
 <summary>
 API pour reproduire un jeton. 
 </summary>
 <param name="_objExistingTokenHandle">Adresse du jeton existant.</param>
 <param name="_intDesiredAccess">Accèss désiré.</param>
 <param name="_objThreadAttributes">Attributs de la tâche <code>ByRef</code>.</param>
 <param name="_intImpersonationLevel">Niveau d'impersonnalisation.</param>
 <param name="_intTokenType">Type de jeton.</param>
 <param name="_objDuplicateTokenHandle">Adresse du "handle" du jeton de reproduction <code>ByRef</code>.</param>
 <returns><code>False</code> = une erreur est survenue. <code>True</code> = le code de sortie a été obtenu avec succès.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.LogonUser(System.String@,System.String@,System.String@,RAMQ.Diagnostics.ProcessImpersonate.LogonType,RAMQ.Diagnostics.ProcessImpersonate.LogonProvider,System.IntPtr@)">
 <summary>
 API authentifie un utilisateur.
 </summary>
 <param name="_strLpszUsername">Compte à authentifier.</param>
 <param name="_strLpszDomain">Domaine à utiliser pour l'autentification.</param>
 <param name="_strLpszPassword">Mot de passe.</param>
 <param name="_objLogonType">Type d'authentification.</param>
 <param name="_objLogonProvider">Fournisseur d'authentification.</param>
 <param name="_objToken">Adresse de jeton créé <code>ByRef</code>.</param>
 <returns><code>0</code> = une erreur est survenue. Sinon succès.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Diagnostics.ProcessImpersonate.LogonType">
 <summary>
 Types d'authentification.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Diagnostics.ProcessImpersonate.LogonProvider">
 <summary>
 Fournisseur d'authentification.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.Start(System.String,System.String,System.Text.Encoding)">
 <summary>
 Lance le traitement avec les arguments voulus.
 </summary>
 <param name="_strProcessName">Nom complet du traitement.</param>
 <param name="_strArg">Paramètre passé au traitement.</param>
 <param name="_objEncoding">Encodage.</param>
 <returns>Retour de traitement.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ProcessImpersonate.vb" region="Start"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ProcessImpersonate.cs" region="Start"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.LectureRetour(System.IntPtr,System.Text.Encoding)">
 <summary>
 Lit un canal de lecture et retour son contenu sous forme de chaîne de caractères.
 </summary>
 <param name="_objPipeRead">Adresse canal de lecture.</param>
 <param name="_objEncoding">Encodage.</param>
 <returns>Contenu sous forme de chaîne de caracteères.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.ObtenirCmd(System.String,System.String)">
 <summary>
 Permet d'obtenir la chaine d'appel du processus
 </summary>
 <param name="_strApp">Nom de l'application</param>
 <param name="_strArgs">Arguments à envoyer</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.LancerProcess(System.IntPtr,System.IntPtr,System.IntPtr,System.String,System.String)">
 <summary>
 Lance un traitement.
 </summary>
 <param name="_objChildStdOut">Adresse du périphérique de sortie enfant standard.</param>
 <param name="_objChildStdIn">Adresse du périphérique d'entrée enfant standard.</param>
 <param name="_objChildStdErr">Adresse du périphérique d'erreur enfant standard.</param>
 <param name="_strApp">Chemin du traitement.</param>
 <param name="_strArg">Paramètres du traitement.</param>
 <returns>Informations du traitement.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Diagnostics.ProcessImpersonate.ThrowApiException">
 <summary>
 Lance une exception Win32 à partir de la dernière erreur Win32.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Diagnostics.RetourProcess">
 <summary>
 Classe de retour utiliser la méthode ProcessImpersonate.Start afin 
 de retourner l'information sur l'exécution d'un processus
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Diagnostics.RetourProcess.SortieStandard">
 <summary>
 Sortie standard du process (StandardOutput)
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Diagnostics.RetourProcess.SortieErreur">
 <summary>
 Sortie d'erreur du process (StandardError)
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Diagnostics.RetourProcess.CodeSortie">
 <summary>
  Code de sortie (ExitCode)
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Enumeration.DNSField.EnumQType">
<summary>
    Valeur QType et Type pour le champ DNS QType.
</summary>
<remarks>
Voir https://www.ietf.org/rfc/rfc1035.txt pour les valeurs possibles.
</remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumNomInfra">
 <summary> 
 Définition de l'énumération des infrastructures de la RAMQ.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis <br/>
  Date   : 2012-02-16
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumRestrValidDepd">
 <summary> 
     Définition de l'énumération des restrictions à appliquer sur la validation des dépendances.
 </summary>
 <remarks>
  Auteur : Simon Labrecque <br/>
  Date   : 2011-11-30
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumTypesAuthn">
 <summary> 
     Définition de l'énumération des différents types d'authentification
 </summary>
 <remarks>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumTypTranfFtp">
 <summary> 
     Définition de l'énumération des types de transfert Ftp.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumDomVal">
 <summary> 
     Définition de l'énumération des domaines de valeurs.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumCodSeverLettr">
 <summary> 
     Définition de l'énumération des codes de sévérité sous forme de lettre.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumNomSysExptnErr">
 <summary> 
     Définition de l'énumération des noms des systèmes d'exploitation.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumNivInter">
 <summary> 
     Définition de l'énumération des niveaux d'intervention.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumCodSever">
 <summary> 
     Définition de l'énumération des codes de sévérité.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumFormatMessage">
 <summary> 
     Définition de l'énumération des formats de messages.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumEncodMsgCourl">
 <summary> 
     Définition de l'énumération des types d'encodage de messages.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumImportanceCourl">
 <summary> 
     Définition de l'énumération de l'importance d'un message.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumEncodFichAtch">
 <summary> 
     Définition de l'énumération des types d'encodage de fichier.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumLigneFichLog">
 <summary> 
     Définition de l'énumération des types de lignes dans un fichier de log.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Enumeration.EnumLangue">
 <summary> 
     Définition de l'énumération des langues.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Environnement">
 <summary> 
     Définition de la classe qui contient les propriétes qui retourne
     le mnémonique de chacun des environnements RAMQ.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Environnement.Techno">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement techno.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.PreDev">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement pré-dev.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Unitaire">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement unitaire.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Fonctionnel">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement fonctionnel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Integration">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement intégration.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Acceptation">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement acceptation.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Formation">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement formation.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Partenaire">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement partenaire.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Urgence">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement urgence.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Environnement.Production">
 <summary>
     Propriété qui retourne le mnémonique de l'environnement production.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Etat.Cookie">
 <summary> 
     Définition de la classe qui permet la manipulation des cookies.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.#ctor(System.Web.HttpContextBase)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objHttpContxBase">Le contexte HTTP.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.EnregistrerContxWebApp(System.String,System.String,System.Boolean,System.Boolean)">
 <summary>
     Cette méthode permet d'ajouter ou modifier le contenu d'une variable de cookie de
     l'application Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à ajouter ou modifier.</param>
 <param name="_strVal">Valeur à ajouter ou modifier.</param>
 <param name="_blnHttp">Indique si le cookie sera accessible par un script côté client.</param>
 <param name="_blnSecure">Indique s'il faut transmettre le cookie en utilisant SSL et HTTPS uniquement.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="EnregistrerContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="EnregistrerContxWebApp"></code>
 </example>
 <remarks>Si l'on modifie le contenu d'une variable de cookie, la sécurité originale demeurre.</remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.EnregistrerContxWebAppScurs(System.String,System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'ajouter ou modifier le contenu d'une variable de cookie sécurisé de
     l'application Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à ajouter ou modifier.</param>
 <param name="_strVal">Valeur à ajouter ou modifier.</param>
 <param name="_blnHttp">Indique si le cookie sera accessible par un script côté client.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="EnregistrerContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="EnregistrerContxWebApp"></code>
 </example>
 <remarks>Si l'on modifie le contenu d'une variable de cookie, la sécurité originale demeurre.</remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.SupprimerContxWebApp(System.String)">
 <summary>
     Cette méthode permet de supprimer le contenu d'une variable de cookie de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à supprimer.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="SupprimerContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="SupprimerContxWebApp"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.ObtenirContxWebApp(System.String)">
 <summary>
     Cette méthode permet d'obtenir le contenu d'une variable de cookie de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à obtenir.</param>
 <returns>Valeur de la variable pour la clé demandée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="ObtenirContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="ObtenirContxWebApp"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.ObtenirIDSession">
 <summary>
     Cette méthode permet d'obtenir l'ID de session de l'application Web appelante.
 </summary>
 <returns>ID de session de l'application Web appelante.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="ObtenirIDSession"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="ObtenirIDSession"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.CreerCookieValid(System.String,System.Guid)">
 <summary>
     Cette méthode pour créer le cookie du prochain "POST" et l'ajouter dans la 
     collection des cookies.
 </summary>
 <param name="_strCle">Nom du cookie.</param>
 <param name="_guiNextPost">Guid du "POST" à valider lors du prochain postback.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="CreerCookieValid"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="CreerCookieValid"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.CreerCookieValid(System.String,System.Guid,System.Boolean)">
 <summary>
     Cette méthode pour créer le cookie du prochain "POST" et l'ajouter dans la 
     collection des cookies.
 </summary>
 <param name="_strCle">Nom du cookie.</param>
 <param name="_guiNextPost">Guid du "POST" à valider lors du prochain postback.</param>
 <param name="_blnSecure">Indique s'il faut transmettre le cookie en utilisant SSL et HTTPS uniquement.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="CreerCookieValidSecure"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="CreerCookieValidSecure"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.CreerCookieValidScurs(System.String,System.Guid)">
 <summary>
     Cette méthode pour créer le cookie sécurisé du prochain "POST" et l'ajouter dans la 
     collection des cookies.
 </summary>
 <param name="_strCle">Nom du cookie.</param>
 <param name="_guiNextPost">Guid du "POST" à valider lors du prochain postback.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="CreerCookieValidScurs"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="CreerCookieValidScurs"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.SupprimerCookiesValid">
 <summary>
     Cette méthode permettant de supprimer les cookies de validations "Post" présents.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="SupprimerCookiesValid"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="SupprimerCookiesValid"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Cookie.ValiderPostCourant(System.String,System.Guid)">
 <summary>
     Cette méthode permettant de valider que le "POST" courrant est valide. 
     I.E. : S'assurer que le GUID présent dans le cookie correspond bien à celui
     attendu dans le ViewState.
 </summary>
 <param name="_strCle">Nom du Cookie.</param>
 <param name="_guiCurPostBack">Guid du "POST" présent dans le ViewState.</param>
 <returns>Indique la validité du "POST" courrant.</returns>
 <exception cref="T:System.ApplicationException">Le cookie nécessaire pour la validation du 'POST' n'a pas été trouvé.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="ValiderPostCourant"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="ValiderPostCourant"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Etat.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans les composantes <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> et <b>RAMQ.COM.COD2_V4GestCache_cpo</b> 
 offrant des classes permettant de persister de l'information pertinente pour un utilisateur.
 </summary>
 <remarks>
 <para>
 <b>ATTENTION :</b> Les classes de cet espace de nom ne peuvent être qu'utilisées que dans un contexte d'application web.
 </para>
 <para>
 Cet espace de nom offre des facilités afin d'utiliser les fichiers témoins et les variables de session propre à un usager. De plus un artifice
 est ajouté à la variable de session afin de faire en sorte que cette dernière soit toujours unique à l'usager sur les serveurs, ceci permet
 de pallier au problème des postes qui peuvent être utilisés par différents utilisateurs.
 </para>
 <para>
 C'est également dans cet espace de nom que l'on retrouve les classes permettant d'utiliser AppFabric (serveur d'état).
 </para>
 <para>
 Si vous avez à manipuler les sessions et les fichiers témoins, nous vous incitons fortement à utiliser ces objets.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Etat.Session">
 <summary> 
     Définition de la classe qui permet la manipulation des variables de sessions.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Etat.Session.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Session.#ctor(System.Web.HttpContextBase)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objHttpContxBase">Le contexte HTTP.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Session.EnregistrerContxWeb``1(System.String,``0)">
 <summary>
     Cette méthode permet d'ajouter ou modifier le contenu d'une variable de session de
     l'application Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à ajouter ou modifier.</param>
 <param name="_objVal">Valeur à ajouter ou modifier.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="EnregistrerContxWeb"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="EnregistrerContxWeb"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Session.SupprimerContxWeb(System.String)">
 <summary>
     Cette méthode permet de supprimer le contenu d'une variable de session de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à supprimer.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="SupprimerContxWeb"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="SupprimerContxWeb"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Session.ObtenirContxWeb``1(System.String)">
 <summary>
     Cette méthode permet d'obtenir le contenu d'une variable de session de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à obtenir.</param>
 <returns>Valeur de la variable pour la clé demandée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="ObtenirContxWebOfT"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="ObtenirContxWebOfT"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.Session.ObtenirIDSession">
 <summary>
     Cette méthode permet d'obtenir l'ID de session de l'application Web appelante.
 </summary>
 <returns>ID de session de l'application Web appelante.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="ObtenirIDSession"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="ObtenirIDSession"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Etat.ISession">
 <summary> 
     Définition de l'interface qui permet la manipulation des variables de sessions.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Etat.ISession.EnregistrerContxWeb``1(System.String,``0)">
 <summary>
     Cette méthode permet d'ajouter ou modifier le contenu d'une variable de session de
     l'application Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à ajouter ou modifier.</param>
 <param name="_objVal">Valeur à ajouter ou modifier.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="EnregistrerContxWebOfT"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="EnregistrerContxWebOfT"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ISession.SupprimerContxWeb(System.String)">
 <summary>
     Cette méthode permet de supprimer le contenu d'une variable de session de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à supprimer.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="SupprimerContxWeb"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="SupprimerContxWeb"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ISession.ObtenirContxWeb``1(System.String)">
 <summary>
     Cette méthode permet d'obtenir le contenu d'une variable de session de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à obtenir.</param>
 <returns>Valeur de la variable pour la clé demandée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="ObtenirContxWebOfT"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="ObtenirContxWebOfT"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ISession.ObtenirIDSession">
 <summary>
     Cette méthode permet d'obtenir l'ID de session de l'application Web appelante.
 </summary>
 <returns>ID de session de l'application Web appelante.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.vb" region="ObtenirIDSession"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Session.cs" region="ObtenirIDSession"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Etat.ICookie">
 <summary> 
     Définition de l'interface qui permet la manipulation des cookies.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.EnregistrerContxWebApp(System.String,System.String,System.Boolean,System.Boolean)">
 <summary>
     Cette méthode permet d'ajouter ou modifier le contenu d'une variable de cookie de
     l'application Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à ajouter ou modifier.</param>
 <param name="_strVal">Valeur à ajouter ou modifier.</param>
 <param name="_blnHttp">Indique si le cookie sera accessible par un script côté client.</param>
 <param name="_blnSecure">Indique s'il faut transmettre le cookie en utilisant SSL et HTTPS uniquement.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="EnregistrerContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="EnregistrerContxWebApp"></code>
 </example>
 <remarks>Si l'on modifie le contenu d'une variable de cookie, la sécurité originale demeure.</remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.EnregistrerContxWebAppScurs(System.String,System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'ajouter ou modifier le contenu d'une variable de cookie sécurisé de
     l'application Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à ajouter ou modifier.</param>
 <param name="_strVal">Valeur à ajouter ou modifier.</param>
 <param name="_blnHttp">Indique si le cookie sera accessible par un script côté client.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="EnregistrerContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="EnregistrerContxWebApp"></code>
 </example>
 <remarks>Si l'on modifie le contenu d'une variable de cookie, la sécurité originale demeure.</remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.SupprimerContxWebApp(System.String)">
 <summary>
     Cette méthode permet de supprimer le contenu d'une variable de cookie de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à supprimer.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="SupprimerContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="SupprimerContxWebApp"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.ObtenirContxWebApp(System.String)">
 <summary>
     Cette méthode permet d'obtenir le contenu d'une variable de cookie de l'application 
     Web appelante.
 </summary>
 <param name="_strCle">Clé de la valeur à obtenir.</param>
 <returns>Valeur de la variable pour la clé demandée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="ObtenirContxWebApp"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="ObtenirContxWebApp"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.ObtenirIDSession">
 <summary>
     Cette méthode permet d'obtenir l'ID de session de l'application Web appelante.
 </summary>
 <returns>ID de session de l'application Web appelante.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="ObtenirIDSession"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="ObtenirIDSession"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.CreerCookieValid(System.String,System.Guid)">
 <summary>
     Cette méthode pour créer le cookie du prochain "POST" et l'ajouter dans la 
     collection des cookies.
 </summary>
 <param name="_strCle">Nom du cookie.</param>
 <param name="_objGuiNextPost">Guid du "POST" à valider lors du prochain postback.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="CreerCookieValid"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="CreerCookieValid"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.CreerCookieValid(System.String,System.Guid,System.Boolean)">
 <summary>
     Cette méthode pour créer le cookie du prochain "POST" et l'ajouter dans la 
     collection des cookies.
 </summary>
 <param name="_strCle">Nom du cookie.</param>
 <param name="_objGuiNextPost">Guid du "POST" à valider lors du prochain postback.</param>
 <param name="_blnSecure">Indique s'il faut transmettre le cookie en utilisant SSL et HTTPS uniquement.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="CreerCookieValidSecure"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="CreerCookieValidSecure"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.CreerCookieValidScurs(System.String,System.Guid)">
 <summary>
     Cette méthode pour créer le cookie sécurisé du prochain "POST" et l'ajouter dans la 
     collection des cookies.
 </summary>
 <param name="_strCle">Nom du cookie.</param>
 <param name="_objGuiNextPost">Guid du "POST" à valider lors du prochain postback.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="CreerCookieValidScurs"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="CreerCookieValidScurs"></code>
 </example>
 <remarks>Si l'on modifie le contenu d'une variable de cookie, la sécurité originale demeure.</remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.SupprimerCookiesValid">
 <summary>
     Cette méthode permettant de supprimer les cookies de validations "Post" présents.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="SupprimerCookiesValid"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="SupprimerCookiesValid"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Etat.ICookie.ValiderPostCourant(System.String,System.Guid)">
 <summary>
     Cette méthode permettant de valider que le "POST" courrant est valide. 
     I.E. : S'assurer que le GUID présent dans le cookie correspond bien à celui
     attendu dans le ViewState.
 </summary>
 <param name="_strCle">Nom du Cookie.</param>
 <param name="_objGuiCurPostBack">Guid du "POST" présent dans le ViewState.</param>
 <returns>Indique la validité du "POST" courrant.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.vb" region="ValiderPostCourant"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Cookie.cs" region="ValiderPostCourant"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.AssemblyExtn">
 <summary>
 Définition du module qui ajoute des méthodes d'extensions à la classe <see cref="T:System.Reflection.Assembly" /> du Framework .NET.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.AssemblyExtn.ObtenirGuid(System.Reflection.Assembly)">
 <summary>
 Obtient le Guid identifiant un assembly.
 </summary>
 <param name="_objAssembly">Assembly pour lequel obtenir le Guid</param>
 <returns>Guid de l'assembly</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AssemblyExtn.vb" region="ObtenirGuid"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AssemblyExtn.cs" region="ObtenirGuid"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.AssemblyExtn.ObtenirGuid(System.Reflection.Assembly,System.Guid@)">
 <summary>
 Obtient le Guid identifiant un assembly.
 </summary>
 <param name="_objAssembly">Assembly pour lequel obtenir le Guid</param>
 <param name="_objGuid">Guid de l'assembly</param>
 <returns>Vrai lorsque le Guid a été récupéré; faux si le Guid ne peut pas être récupéré.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.AssemblyExtn.AppSettings(System.Reflection.Assembly,System.String)">
 <summary>
 Obtient la valeur associée à une clé de configuration.
 </summary>
 <param name="_objAssembly">Assembly relié au fichier de configuration</param>
 <param name="_strCle">Clé de configuration à rechercher</param>
 <returns>Valeur de la configuration demandée.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.ClientBaseExtn">
 <summary> 
     Définition du module qui ajoute des méthodes d'extensions à la classe <see cref="T:System.ServiceModel.ClientBase`1" /> du Framework .NET.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Extensions.ClientBaseExtn.RemplacerUrl``1(System.ServiceModel.ClientBase{``0},System.String)">
 <summary>
     Cette méthode permet de remplacer l'url du "proxy" du service WCF.
 </summary>
 <typeparam name="T">Type du service WCF.</typeparam>
 <param name="_objClientBase">Instance du "proxy" du service WCF.</param>
 <param name="_strUrl">Nouvelle url.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.vb" region="RemplacerUrl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.cs" region="RemplacerUrl"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ClientBaseExtn.SecuriserEnveloppe``1(System.ServiceModel.ClientBase{``0})">
 <summary> 
     Cette méthode permet de sécuriser une référence de service avec une authentification
     de type "Basic".
 </summary>
 <typeparam name="T">Type de la référence du service.</typeparam>
 <param name="_objClientBase">Instance du "proxy" de la référence du service.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.vb" region="SecuriserEnveloppe"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.cs" region="SecuriserEnveloppe"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ClientBaseExtn.SecuriserEnveloppeIntegreWCF``1(System.ServiceModel.ClientBase{``0})">
 <summary> 
     Cette méthode permet de sécuriser un service WCF avec une authentification
     de type "Integrated".
 </summary>
 <typeparam name="T">Type du service WCF.</typeparam>
 <param name="_objClientBase">Instance du "proxy" du service WCF.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.vb" region="SecuriserEnveloppeIntegreWCF"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.cs" region="SecuriserEnveloppeIntegreWCF"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ClientBaseExtn.SecuriserEnveloppeIntegre``1(System.ServiceModel.ClientBase{``0})">
 <summary> 
     Cette méthode permet de sécuriser une référence de service avec une authentification
     de type "Integrated".
 </summary>
 <typeparam name="T">Type de la référence du service.</typeparam>
 <param name="_objClientBase">Instance du "proxy" de la référence de service.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.vb" region="SecuriserEnveloppeIntegre"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.cs" region="SecuriserEnveloppeIntegre"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ClientBaseExtn.FermerConxn``1(System.ServiceModel.ClientBase{``0})">
 <summary> 
     Cette méthode permet fermer le connexion avec un service WCF.
 </summary>
 <typeparam name="T">Type du service WCF.</typeparam>
 <param name="_objClientBase">Instance du "proxy" du service WCF.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.vb" region="FermerConxn"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ClientBaseExtn.cs" region="FermerConxn"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.ClientScriptManagerExtn">
 <summary>
 Définition du module qui ajoute des méthodes d'extensions à la classe <see cref="T:System.Web.UI.ClientScriptManager" /> du Framework .NET.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ClientScriptManagerExtn.ObtenirRessUrl(System.Web.UI.ClientScriptManager,System.Type,System.String)">
 <summary>
 Obtient un Url à partir d'une ressource incorporée dans un type.
 </summary>
 <param name="_objScriptManager">Gestionnaire de script client ASP.Net</param>
 <param name="_objType">Type de l'objet contenant la ressource incorporé</param>
 <param name="_strNom">Nom de la ressource incorporé</param>
 <returns>Url de la ressource incorporée</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ClientScriptManagerExtn.EnregistrerRessUrl(System.Web.UI.ClientScriptManager,System.Type,System.String)">
 <summary>
 Enregistre un Url à partir d'une ressource incorporée dans un type.
 </summary>
 <param name="_objScriptManager">Gestionnaire de script client ASP.Net</param>
 <param name="_objType">Type de l'objet contenant la ressource incorporé</param>
 <param name="_strNom">Nom de la ressource incorporé</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.ControlExtn">
 <summary> 
 Définition du module qui ajoute des méthodes d'extensions à certaines classes du Framework .NET manipulant des controls.
 </summary>
 <remarks>
  Auteur : Jean-Philippe Bégin <br/>
  Date   : 2012-10-24
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Extensions.ControlExtn.FindControl(System.Web.UI.Control,System.Func{System.Web.UI.Control,System.Boolean},System.Boolean)">
 <summary>
 Cherche un contrôle à l'intérieur d'un contrôle parent.
 </summary>
 <param name="_objParent">Contrôle parent à rechercher.</param>
 <param name="_fctCondition">Fonction de condition.</param>
 <param name="_blnRecurse">Indicateur de recherche en profondeur.</param>
 <returns>Contrôle trouvé ou <code>Nothing</code>.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ControlExtn.vb" region="FindControl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ControlExtn.cs" region="FindControl"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ControlExtn.SetVal(System.Web.UI.Control@,System.Web.UI.Control)">
 <summary>
 Remplace un contrôle par un autre.
 </summary>
 <param name="_objFounded">Contrôle à remplacer.</param>
 <param name="_objControle">Contrôle servant à l'affectation.</param>
 <returns><code>False</code> = Le contrôle à remplacer est <code>Nothing</code>. <code>True</code> = Le contrôle à remplacer n'est pas <code>Nothing</code>.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.SerialiseurExtn.SerialiserJson``1(``0)">
 <summary>
     Méthode d'extension qui permet de sérialiser un objet de type T en
     une chaîne de caractère JSON.
 </summary>
 <typeparam name="T">Type de l'objet à désérialiser.</typeparam>
 <param name="_objDonne">Objet à sérialiser</param>
 <returns>Représentation Json de l'objet reçu en paramètre, dans une chaîne de caractères</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurExtn.vb" region="SerialiserJson"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurExtn.cs" region="SerialiserJson"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.SerialiseurExtn.DeserialiserJson``1(System.String)">
 <summary>
     Méthode d'extension qui permet de générer un objet de type T à
     partir d'une chaîne de caractère JSON.
 </summary>
 <typeparam name="T">Type de l'objet à désérialiser.</typeparam>
 <param name="_strJson">JSON</param>
 <returns>Instance de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurExtn.vb" region="DeserialiserJson"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurExtn.cs" region="DeserialiserJson"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.HttpContextExtn">
 <summary> 
     Définition du module qui ajoute des méthodes d'extensions à la classe <see cref="T:System.Web.HttpContext" /> du Framework .NET.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis <br/>
  Date   : 2011-11-29
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/> 
 </remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtnNouvContxPrincipal(System.Web.HttpContext)">
 <summary>
 Cette méthode permet d'obtenir un nouveau context d'impersonification
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContext"/> courant</param>
 <returns>context d'impersonification</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ObtnNouvContxPrincipal"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ObtnNouvContxPrincipal"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtnNouvContxPrincipal(System.Web.HttpContext,System.String)">
 <summary>
 Cette méthode permet d'obtenir un nouveau context d'impersonification
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContext"/> courant</param>
 <param name="_strNomInfra">Le nom de l'infrastructure à contacter. La 
 valeur de l'infrastructure possible est "CISEL" ou "INFRA2011"</param>
 <returns>context d'impersonification</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ObtnNouvContxPrincipalNom"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ObtnNouvContxPrincipalNom"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.SauvegarderTokenUtilCourant(System.Web.HttpContext)">
 <summary>
 Permet de sauvegarder le Token de l'utilisateur Courant dans le contexte
 </summary>
 <param name="_objHttpContx">Contexte Http</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="SauvegarderTokenUtilCourant"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="SauvegarderTokenUtilCourant"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtenirTokenUtilCourant(System.Web.HttpContext)">
 <summary>
 Permet d'obtenir le Token de l'utilisateur Courant dans le contexte
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContext" /> courant</param>
 <returns>L'utilisateur impersonnifié <see cref="T:System.Security.Principal.WindowsImpersonationContext"/></returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ObtenirTokenUtilCourant"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ObtenirTokenUtilCourant"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.UsagerDansGroupe(System.Web.HttpContext,System.String)">
 <summary>
 Cette méthode permet de vérifier si un usager fait parti d'un rôle
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContext"/> courant</param>
 <param name="_strGroupe">Groupe a vérifier</param>
 <returns>Boolean si l'usager est dans le groupe</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="UsagerDansGroupe"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="UsagerDansGroupe"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtnIdentUtil(System.Web.HttpContextBase)">
 <summary>
 Cette méthode permet de retourner le nom de utilisateur original/courant du contexte actuel
 </summary>
 <param name="_objContxBase"><see cref="T:System.Web.HttpContextBase"/> courant</param>
 <returns>Le nom d'utilisateur actuel/courant du contexte actuel.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ObtnIdentUtil"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ObtnIdentUtil"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtnUtil(System.Web.HttpContextBase)">
 <summary>
 Retourner le nom de utilisateur original/courant du contexte actuel.
 Fonctionne aussi en mode Form Based Authentication.
 </summary>
 <param name="_objContxBase"></param>
 <returns>Le nom de l'identifiant courant sous le format "Utilisateur" OU
 Le numéro d'individu (lorsqu'en mode Form Based Authentication) sous le format "IndNoSeq"</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ObtnUtil"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ObtnUtil"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtenirTitreSiteDynmq(System.Web.HttpContextBase)">
 <summary>
 Retourne le titre du site qui a été modifié à l'aide de la méthode
 <see cref="M:RAMQ.Extensions.HttpContextExtn.ModifierTitreSiteDynmq(System.Web.HttpContextBase,System.String)" >ModifierTitreSiteDynmq</see> avant le render de la page.
 Si le titre n'a pas été affiché, la description du site courant est utilisée.
 </summary>
 <param name="_objContxBase">Le contexte http courant</param>
 <returns>Le titre du site.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ObtenirTitreSiteDynmq"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ObtenirTitreSiteDynmq"></code>
 </example>
 <remarks>Cette fonction est utilisée lors du render de la page maître.</remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ModifierTitreSiteDynmq(System.Web.HttpContextBase,System.String)">
 <summary>
 Permet de modifier le titre du site.
 </summary>
 <param name="_objContxBase">Le contexte http courant</param>
 <param name="_strTitre">Le titre du site à afficher</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ModifierTitreSiteDynmq"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ModifierTitreSiteDynmq"></code>
 </example>
 <remarks>Doit être appelé avant le render.</remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtenirTitrePageDynmq(System.Web.HttpContextBase)">
 <summary>
 Retourne le titre de la page qui a été modifié à l'aide de la méthode
 <see cref="M:RAMQ.Extensions.HttpContextExtn.ModifierTitreSiteDynmq(System.Web.HttpContextBase,System.String)" >ModifierTitrePageDynmq</see> avant le render de la page.
 Si le titre n'a pas été affiché, le titre de la page courante est utilisée.
 </summary>
 <param name="_objContxBase">Le contexte http courant</param>
 <returns>Le titre de la page.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ObtenirTitrePageDynmq"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ObtenirTitrePageDynmq"></code>
 </example>
 <remarks>Cette fonction est utilisée lors du render de la page maître ou de la page de base.</remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ModifierTitrePageDynmq(System.Web.HttpContextBase,System.String)">
 <summary>
 Permet de modifier le titre de la page.
 </summary>
 <param name="_objContxBase">Le contexte http courant</param>
 <param name="_strTitre">Le titre de la page à afficher</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.vb" region="ModifierTitrePageDynmq"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HttpContextExtn.cs" region="ModifierTitrePageDynmq"></code>
 </example>
 <remarks>Doit être appelé avant le render.</remarks>
</member>
<member name="M:RAMQ.Extensions.HttpContextExtn.ObtnIdSecur(System.String)">
 <summary>
 Méthode privée retournant l'identification de sécurité
 </summary>
 <param name="_strNom">String, nom a vérifier</param>
 <returns>L'identification de sécurité</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.ExpressionExtn">
 <summary> 
 Définition du module qui ajoute des méthodes d'extensions à certaines classes du Framework .NET manipulant des expressions.
 </summary>
 <remarks>
  Auteur : Jean-Philippe Bégin <br/>
  Date   : 2012-10-24
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.VerifierChampsParametreRequis``2(System.Linq.Expressions.Expression{System.Func{``0}},System.Linq.Expressions.Expression{System.Func{``1}})">
 <summary>
 Lance un <see cref="T:System.ArgumentNullException" /> si une expression retourne une valeur vide.
 </summary>
 <typeparam name="T1">Type de la fonction de l'expression parente.</typeparam>
 <typeparam name="T2">Type de la fonction de l'expression à vérifier.</typeparam>
 <param name="_fctExpressionParent">Expression parente.</param>
 <param name="_fctExpression">Expression à vérifier.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.vb" region="VerifierChampParametreRequis"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.cs" region="VerifierChampParametreRequis"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.VerifierParametreRequis``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Lance un <see cref="T:System.ArgumentNullException" /> si une expression retourne une valeur vide.
 </summary>
 <typeparam name="T">Type de la fonction de l'expression.</typeparam>
 <param name="_fctExpression">Expresssion à vérifier.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.vb" region="VerifierParametreRequis"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.cs" region="VerifierParametreRequis"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.ObtenirNomMembre``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Obtient le nom de l'expression.
 </summary>
 <typeparam name="T">Type de la fonction de l'expression.</typeparam>
 <param name="_fctExpression">Expression dont on désire obtenir le nom.</param>
 <returns>Nom de l'expression.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.vb" region="ObtenirNomMembre"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.cs" region="ObtenirNomMembre"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.ObtenirNomAffichageMembre``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Obtient le nom d'affichage de l'expression.
 </summary>
 <typeparam name="T">Type de la fonction de l'expression.</typeparam>
 <param name="_fctExpression">Expression dont on veut le nom.</param>
 <returns>Le nom d'affichage de l'expression.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.vb" region="ObtenirNomAffichageMembre"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.cs" region="ObtenirNomAffichageMembre"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.ObtenirMembre``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Obtient les attributs et métadonnées de l'expression.
 </summary>
 <typeparam name="T">Type de la fonction de l'expression.</typeparam>
 <param name="_fctExpression">Expression de laquelle on désire obtenir les attributs et les métadonnées</param>
 <returns>MemberInfo contenant les attributs et métadonnées de l'expression.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.vb" region="ObtenirMembre"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExpressionExtn.cs" region="ObtenirMembre"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.VerifierMembreRequis``1(System.String,System.Linq.Expressions.Expression{System.Func{``0}},System.Action{System.String})">
 <summary>
 Concatène le nom du parent à celui de l'expression, si cette dernière est vide.
 </summary>
 <typeparam name="T">Type de la fonction de l'expression à vérifier.</typeparam>
 <param name="_strNomParent">Nom du parent.</param>
 <param name="_fctExpression">Expression à vérifier.</param>
 <param name="_actErreur">Action ayant le nom du membre parent et celui de l'expression concaténé.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.VerifierChampsParametreRequis``1(System.String,System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Lance un <see cref="T:System.ArgumentNullException" /> si l'expression retourne une valeur vide.
 </summary>
 <typeparam name="T">Type de la fonction de l'expression à vérifier.</typeparam>
 <param name="_strNomParent">Nom du membre parent.</param>
 <param name="_fctExpression">Expression à vérifier.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.ExpressionExtn.ObtenirSiChampsVide``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Détermine si une expression retourne une valeur vide selon son type.
 </summary>
 <typeparam name="T">Type de fonction l'expression à vérifier.</typeparam>
 <param name="_fctExpression">Expression à vérifier.</param>
 <returns><code>False</code> = Le champs n'est pas vide. <code>True</code> = Le champs est vide.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.SoapHttpClientExtn.SecuriserEnveloppe(System.Web.Services.Protocols.SoapHttpClientProtocol@)">
 <summary> 
     Cette méthode permet de sécuriser une référence web (soap) avec une authentification
     de type "Basic".
 </summary>
 <param name="_objSoapClient">Instance du "proxy" de la référence web.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SoapHttpClientExtn.vb" region="SecuriserEnveloppe"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SoapHttpClientExtn.cs" region="SecuriserEnveloppe"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.SoapHttpClientExtn.SecuriserEnveloppeIntegre(System.Web.Services.Protocols.SoapHttpClientProtocol@)">
 <summary> 
     Cette méthode permet de sécuriser une référence web (soap) avec une authentification
     de type "Integrated".
 </summary>
 <param name="_objSoapClient">Instance du "proxy" de la référence web.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SoapHttpClientExtn.vb" region="SecuriserEnveloppeIntegre"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SoapHttpClientExtn.cs" region="SecuriserEnveloppeIntegre"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.XmlExtn">
 <summary> 
     Définition du module qui ajoute des méthodes d'extensions à certaines classes du Framework .NET manipulant du XML.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Extensions.XmlExtn.ToXmlDocument(System.Xml.Linq.XDocument)">
 <summary>
     Cette méthode permet de transformer une instance d'objet de type <see cref="T:System.Xml.Linq.XDocument" /> en
     instance d'objet de type <see cref="T:System.Xml.XmlDocument" />.
 </summary>
 <param name="_objXDoc">Instance de la classe <see cref="T:System.Xml.Linq.XDocument" /></param>
 <returns>Instance de la classe <see cref="T:System.Xml.XmlDocument" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.vb" region="ToXmlDocument"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.cs" region="ToXmlDocument"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.XmlExtn.ToXDocument(System.Xml.XmlDocument)">
 <summary>
     Cette méthode permet de transformer une instance d'objet de type <see cref="T:System.Xml.XmlDocument" /> en
     instance d'objet de type <see cref="T:System.Xml.Linq.XDocument" />.
 </summary>
 <param name="_objXmlDoc">Instance de la classe <see cref="T:System.Xml.XmlDocument" /></param>
 <returns>Instance de la classe <see cref="T:System.Xml.Linq.XDocument" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.vb" region="ToXDocument"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.cs" region="ToXDocument"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.XmlExtn.ToXmlElement(System.Xml.Linq.XElement)">
 <summary>
     Cette méthode permet de transformer une instance d'objet de type <see cref="T:System.Xml.Linq.XElement" /> en
     instance d'objet de type <see cref="T:System.Xml.XmlElement" />.
 </summary>
 <param name="_objXElm">Instance de la classe <see cref="T:System.Xml.Linq.XElement" /></param>
 <returns>Instance de la classe <see cref="T:System.Xml.XmlElement" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.vb" region="ToXmlElement"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.cs" region="ToXmlElement"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.XmlExtn.ToXElement(System.Xml.XmlElement)">
 <summary>
     Cette méthode permet de transformer une instance d'objet de type <see cref="T:System.Xml.XmlElement" /> en
     instance d'objet de type <see cref="T:System.Xml.Linq.XElement" />.
 </summary>
 <param name="_objXmlElm">Instance de la classe <see cref="T:System.Xml.XmlElement" /></param>
 <returns>Instance de la classe <see cref="T:System.Xml.Linq.XElement" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.vb" region="ToXElement"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\XmlExtn.cs" region="ToXElement"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.FileInfoExtn">
 <summary> 
     Définition du module qui ajoute des méthodes d'extensions à la classe <see cref="T:System.IO.FileInfo" /> du Framework .NET.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Extensions.FileInfoExtn.Permissions(System.IO.FileInfo)">
 <summary>
     Cette méthode permet d'obtenir les permissions d'un fichier.
 </summary>
 <param name="_objFichier">Instance de la classe <see cref="T:System.IO.FileInfo" />.</param>
 <returns>Les permissions d'un fichier.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FileInfoExtn.vb" region="Permissions"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FileInfoExtn.cs" region="Permissions"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.FileInfoExtn.Contient(System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.FileSystemRights)">
 <summary>
     Cette méthode permet de vérifier si une permission en contient une autre.
 </summary>
 <param name="_enuPermissions">Énumération de la permission.</param>
 <param name="_enuPermissionsVerif">Énumération à vérifier.</param>
 <returns>Indique si la permission à vérifier est incluse dans l'autre.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FileInfoExtn.vb" region="Contient"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FileInfoExtn.cs" region="Contient"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.FileInfoExtn.ObtenirListeSid">
 <summary>
     Cette méthode permet d'obtenir la liste des SID l'identité de l'utilisateur actuel.
 </summary>
 <returns>Liste des SID</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Extensions.StringExtn">
 <summary> 
     Définition du module qui ajoute des méthodes d'extensions à la classe <see cref="T:System.String" /> du Framework .NET.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.RemplacerVariablesConfg(System.String,System.String,System.String)">
 <summary>
     Cette méthode permet d'ajouter une méthode d'extension à la classe String
     du framework qui permet de remplacer des variables défini
     par un délimiteur ouvrant et un délimiteur de fermeture 
     par les valeurs corresspondante dans AppSettings du configuration manager.
 </summary>
 <param name="_strValeur">Valeur à modifier.</param>
 <param name="_strDelmOuver">Délimiteur d'ouverture.</param>
 <param name="_strDelmFerme">Délimiteur de fermeture.</param>
 <returns>Valeur modifiée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="RemplacerVariablesConfg" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="RemplacerVariablesConfg" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.UrlWebService(System.String)">
 <summary>
     Cette méthode retourne une adresse URL pour un service Web. 
     Elle concatène le nom de l'url du serveur si l'adresse URL ne contient pas
     l'adresse du serveur.
 </summary>
 <param name="_strValeur">Url du service web.</param>
 <exception cref="T:System.ApplicationException">La clé est inexistante dans le fichier de configuration.</exception>
 <returns>Url du service web complété avec l'Url serveur du "Machine.Config".</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="UrlWebService" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="UrlWebService" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.UrlWebService(System.String,System.String)">
 <summary>
     Cette méthode retourne une adresse URL pour un service Web. 
     Elle concatène le nom de l'url du serveur (selon le 2ième param) 
     si l'adresse URL ne contient pas l'adresse du serveur.
 </summary>
 <param name="_strValeur">Url du service web.</param>
 <param name="_strCle">Clé "AppSetting" contenant l'URL Serveur.</param>
 <exception cref="T:System.ApplicationException">La clé est inexistante dans le fichier de configuration.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="UrlWebServiceAvecParam" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="UrlWebServiceAvecParam" />
 </example>
 <returns>Url du service web complété avec l'Url serveur du fichier de configuration.</returns>
</member>
<member name="M:RAMQ.Extensions.StringExtn.Valider(System.String,System.Text.RegularExpressions.Regex)">
 <summary>
     Cette méthode permet de valider la valeur d'entrée en fonction de l'expression régulière fournie.
 </summary>
 <param name="_strValeur">Valeur d'entrée à valider.</param>
 <param name="_objExprRegul">Expression régulière pour valider la valeur.</param>
 <returns>Indicateur (true, false) pour la validité de la valeur d'entrée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="ValiderRegex" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="ValiderRegex" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.Valider(System.String,System.String)">
 <summary>
   Cette méthode permet de valider la valeur d'entrée en fonction de l'expression régulière fournie
   sous forme de chaîne de caractères.
 </summary>
 <param name="_strValeur">Valeur d'entrée à valider.</param>
 <param name="_strExprRegul">Chaîne de caractère représentant l'expression régulière pour valider la valeur.</param>
 <returns>Indicateur (true, false) pour la validité de la valeur d'entrée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="ValiderString" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="ValiderString" />
 </example>
 <remarks></remarks>    
</member>
<member name="M:RAMQ.Extensions.StringExtn.ObtenirHtmlScurs(System.String)">
 <summary>
     Cette méthode permet de retourner une version sécurisée d'une page HTML soit par 
     désinfection ou suppression de tous les scripts malveillants.
 </summary>
 <param name="_strHtml">Chaîne de caractères contenant une page HTML.</param>
 <returns>Version sécurisée de la page HTML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="ObtenirHtmlScurs" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="ObtenirHtmlScurs" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.ObtenirFragmHtmlScurs(System.String)">
 <summary>
     Cette méthode permet de retourner une version sécurisée d'un fragment HTML soit par 
     désinfection ou suppression de tous les scripts malveillants.
 </summary>
 <param name="_strHtml">Chaîne de caractères contenant une page HTML.</param>
 <returns>Version sécurisée du fragment HTML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="ObtenirFragmHtmlScurs" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="ObtenirFragmHtmlScurs" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderCss(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une feuille de style.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderCss" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderCss" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderAttriHtml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un attribut HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderAttriHtml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderAttriHtml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderHtml(System.String)">
 <summary>
     Cette méthode qui permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une page HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderHtml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderHtml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderHtml(System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     avec les noms des entités HTML 4.01 pour utilisation dans une page HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_blnNomEnt">Indique si l'on doit encoder avec les entités du HTML 4.01.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderHtmlBoolean"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderHtmlBoolean"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderLdap(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une requête LDAP.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderLdap"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderLdap"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderJavaScript(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code Javascript.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderJavaScript"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderJavaScript"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderJavaScript(System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code Javascript.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_blnEmtrGuil">Indique si l'on doit retourner des guillemets.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderJavaScriptBoolean"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderJavaScriptBoolean"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderUrl(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderUrl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderUrl"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderUrl(System.String,System.Int32)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_intCodPage">Code de page de la chaîne de caractères.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderUrlInteger"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderUrlInteger"></code>é
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderUrl(System.String,System.Text.Encoding)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_objEncoding">Type d'encodage à utiliser.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderUrlEncoding"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderUrlEncoding"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderFormHtml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderFormHtml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderFormHtml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderFormHtml(System.String,System.Int32)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_intCodPage">Code de page de la chaîne de caractères.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderFormHtmlInteger"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderFormHtmlInteger"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderFormHtml(System.String,System.Text.Encoding)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_objEncoding">Type d'encodage à utiliser.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderFormHtmlEncoding"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderFormHtmlEncoding"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderVisualBasicScript(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code VB script.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderVisualBasicScript"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderVisualBasicScript"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderAttriXml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un attribut XML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderAttriXml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderAttriXml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.EncoderXml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un fichier XML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.vb" region="EncoderXml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\StringExtn.cs" region="EncoderXml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.ObtnChaineNonSecur(System.Security.SecureString)">
 <summary>
 Permet d'obtenir une chaîne non-sécurisée à partir
 d'une chaîne sécurisée.
 </summary>
 <param name="_objSecureString">Chaîne sécurisée à convertir</param>
 <returns>Une chaîne de caractère non-sécurisée.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Extensions.StringExtn.ObtnChaineSecur(System.String)">
 <summary>
 Permet d'obtenir une chaîne sécurisée à partir d'une chaîne 
 non-sécurisée.
 </summary>
 <param name="_strChaine">Chaîne non-sécurisée à convertir.</param>
 <returns>Chaîne sécurisée.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Ftp.BaseFtp">
 <summary> 
     Définition de la classe de base des opérations de ftp.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Ftp.BaseFtp.NomServrFtp">
 <summary>
     Propriété qui retourne le nom du serveur ftp à connecter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Ftp.BaseFtp.NoPort">
 <summary>
     Propriété qui retourne le numéro de port du serveur ftp à connecter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Ftp.BaseFtp.IdUtil">
 <summary>
     Propriété qui retourne l'identifiant de l'utilisateur servant à l'authentification.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Ftp.BaseFtp.MotDePasse">
 <summary>
     Propriété qui retourne le mot de passe de l'utilisateur servant à l'authentification.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Ftp.BaseFtp.RpertBase">
 <summary>
     Propriété qui retourne le nom du répertoire de base.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.#ctor(System.String,System.Int32,System.String,System.String)">
 <summary>
     Constructeur primaire.
 </summary>
 <param name="_strNomServrFtp">Nom du serveur.</param>
 <param name="_intNoPort">Numéro du port.</param>
 <param name="_strIdUtil">Identifiant de l'utilisateur.</param>
 <param name="_strMotDePasse">Mot de passe.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.OuvrirConxnFtp">
 <summary>
     Cette méthode est appelée pour établir la connexion ftp à un serveur
     et pour procéder à l'authentification de l'usager.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.TerminerConxnFtp">
 <summary>
     Cette méthode est utilisée pour terminer la connexion ftp.
     La connexion données est aussi fermée en même temps.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.ObtenirListeFichFtp(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
 <summary>
     Cette méthode retourne tous les fichiers contenus dans un répertoire 
     reçu en paramètre sur le serveur ftp .
 </summary>
 <param name="_strNomRpertSrce">Le nom du répertoire source des fichiers à tranférer.</param>
 <param name="_colctFich">Liste de fichiers retournée ( en référence ).</param>
 <param name="_colctRpert">Liste des sous-répertoire retournée ( en référence ).</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.ObtenirFichFtp(System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour transférer un fichier du serveur ftp vers
     Windows.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.EcrireFichFtp(System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour transférer un fichier de Windows vers
     le serveur ftp.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.RenommerFichFtp(System.String,System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour transférer un fichier du serveur ftp vers
     Windows.
 </summary>
 <param name="_strNomRpert">Nom du répertoire.</param>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.DetruireFichFtp(System.String)">
 <summary>
     Cette méthode est utilisée pour détruire un fichier sur un serveur Ftp.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier à détruire.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="DetruireFichWin" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="DetruireFichWin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.OuvrirRpertFtp(System.String)">
 <summary>
     Cette méthode est utilisée pour ouvrir un répertoire du côté du serveur ftp.
 </summary>
 <param name="_strNomRpertCible">Nom du répertoire à ouvrir</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.LireRepFtp(System.String@)">
 <summary>
     Cette méthode est utilisée pour lire le résultat d'une commande
     qui a été envoyée à Ftp.
 </summary>
 <param name="_strLigneRetou">
     En référence, le texte complet retourné suite à la commande passée à ftp.
 </param>
 <returns>Le code de retour. ( chiffre à 3 positions )</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.EnvoyComndFtp(System.String,System.String@)">
 <summary>
     Cette méthode est utilisée pour envoyer une commande au serveur
     ftp.  Le résultat de la commande est retourné.
 </summary>
 <param name="_strComnd">La ligne de commande envoyée à Ftp.</param>
 <param name="_strLigneRetou">Le réponse complète de Ftp.</param>
 <returns>Seulement le code de retour ( chiffre à 3 positions ).</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.TypeTransfert">
 <summary>
     Cette méthode est utilisée pour initialiser le type de transfert
     qui doit se produire.  ( Ascii ou image )
     Par défaut, le type est I ( image )
 </summary>
 <returns>Le type de transfert.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.SeparRpert">
 <summary>
     Cette méthode permetde retourner le type de séparateur de répertoire utilisé.
 </summary>
 <returns>Le séparateur de répertoire.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.AuthnUtilFtp">
 <summary>
     Cette méthode sert à compléter l'authentification de l'usager sur
     le serveur ftp suite à la connexion.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.ObtenirConxnDonne">
 <summary>
     Cette méthode permet l'ouverture de la connexion de type "Données" pour 
     transfert d'informations.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.ExecuterGetFichFtp">
 <summary>
     Cette méthode est utilisée pour obtenir des données provenant
     de la connexion de type "données".  On peut y recevoir des fichiers,
     ou encore de l'information comme le contenu d'un répertoire sur
     le serveur ftp par exemple.
     En fait, réalise un get ftp.
 </summary>
 <returns>Flux contenant les données demandées.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.ExecuterGetFichFtp(System.String)">
 <summary>
     Cette méthode est utilisée pour obtenir des données provenant
     de la connexion de type "données".  On peut y recevoir des fichiers,
     ou encore de l'information comme le contenu d'un répertoire sur
     le serveur ftp par exemple.
     En fait, réalise un get ftp.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.BaseFtp.ExecuterPutFichFtp(System.String)">
 <summary>
     Cette méthode est utilisée pour tranférer des données 
     sur la connexion de type "données".  On y envoit des fichiers.
     En fait, réalise un put ftp.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier à transférer vers serveur ftp.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Ftp.FtpWin">
 <summary> 
     Définition de la classe permettant, via l’utilisation d’une connexion ftp, 
     de transférer des fichiers entre une plateforme Windows et 
     une plateforme Windows, ou encore de faire de la gestion de 
     répertoires du côté Windows.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.ConxnWinEtablie">
 <summary>
     Cet événement indique que la connexion a été établie correctement.
 </summary>
 <param name="_strNomServr">Nom du serveur à connecter.</param>
 <param name="_strIdUtil">Identifiant de l'utilisateur.</param>
 <param name="_blnSucces">Indique le succès de la connexion.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.ConxnWinTermn">
 <summary>
     Cet événement indique la fin de la connexion ftp.
 </summary>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.FichWinDetr">
 <summary>
     Cet événement indique qu'un fichier a été détruit du côté Windows.
 </summary>
 <param name="_strNomFich">Nom du fichier à détruire.</param>
 <param name="_blnSucces">Indique le succès de la destruction.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.RpertWinCree">
 <summary>
     Cet événement est lancé suite à la création d'un nouveau répertoire du
     côté Windows.
 </summary>
 <param name="_strNomRpert">Nom du répertoire à créer.</param>
 <param name="_blnSucces">Indique le succès de la création.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.RpertWinDetr">
 <summary>
     Cet événement est lancé suite à la destruction d'un répertoire du
     côté Windows.
 </summary>
 <param name="_strNomRpert">Nom du répertoire à détruire.</param>
 <param name="_blnSucces">Indique le succès de la destruction.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.FichWinTranm">
 <summary>
     Cet événement est lancé lorsque un fichier Windows est transféré vers Windows.
     ( méthode put de ftp )
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <param name="_blnSucces">Indique le succès de la transmission.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.FichWinRecu">
 <summary>
     Cet événement est lancé lorsque un fichier Windows est transféré vers Windows.
     ( méthode get de ftp )
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom de la cible.</param>
 <param name="_blnSucces">>Indique le succès de la réception.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.FtpWin.FichWinRename">
 <summary>
     Cet événement est lancé lorsque un fichier est renommé du côté ftp.
 </summary>
 <param name="_strNomRpert">Nom du répertoire.</param>
 <param name="_strNomFichSrce">Nom du fichier source</param>
 <param name="_strNomFichCible">Nom de la cible</param>
 <param name="_blnSucces">Indique le succès de l'opération.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.#ctor(System.String,System.Int32,System.String,System.String)">
 <summary>
     Constructeur primaire.
 </summary>
 <param name="_strNomServrFtp">Nom du serveur.</param>
 <param name="_intNoPort">Numéro du port.</param>
 <param name="_strIdUtil">Identifiant de l'utilisateur.</param>
 <param name="_strMotDePasse">Mot de passe.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="Constructeur" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="Constructeur" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.OuvrirConxnFtpWin">
 <summary>
     Cette méthode est appelée pour établir la connexion ftp à un serveur Windows
     et pour procéder à l'authentification de l'utilisateur.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="OuvrirConxnFtpWin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="OuvrirConxnFtpWin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.ObtenirListeFichWin(System.String)">
 <summary>
     Cette méthode est utilisée pour obtenir la liste des fichiers contenus dans un répertoire.
 </summary>
 <param name="_strNomRpertSrce">Nom du répertoire.</param>
 <returns>Collection de nom de fichier.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="ObtenirListeFichWin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="ObtenirListeFichWin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.ObtenirFichWin(System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour transférer un fichier de Windows vers
     Windows.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="ObtenirFichWin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="ObtenirFichWin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.EcrireFichWin(System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour transférer un fichier de Windows vers
     Windows.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="EcrireFichWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="EcrireFichWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.RenommerFichWin(System.String,System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour renommer un fichier.
 </summary>
 <param name="_strNomRpert">Nom du répertoire.</param>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="RenommerFichWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="RenommerFichWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.DetruireFichWin(System.String)">
 <summary>
     Cette méthode est utilisée pour détruire un fichier sur un serveur Windows.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier à détruire.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="DetruireFichWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="DetruireFichWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.ObtenirRpertWin(System.String,System.String)">
 <summary>
     Cette méthode transfert le contenu d'un répertoire Windows vers un
     répertoire Windows.
 </summary>
 <param name="_strNomRpertSrce">Nom du répertoire Windows source.</param>
 <param name="_strNomRpertCible">Nom du répertoire Windows pour recevoir les fichiers.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="ObtenirRpertWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="ObtenirRpertWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.EcrireRpertWin(System.String,System.String)">
 <summary>
     Cette méthode transfert le contenu d'un répertoire Windows vers un
     répertoire Windows.
 </summary>
 <param name="_strNomRpertSrce">Nom du répertoire Windows source.</param>
 <param name="_strNomRpertCible">Nom du répertoire Windows pour recevoir les fichiers.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="EcrireRpertWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="EcrireRpertWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.CreerRpertWin(System.String)">
 <summary>
     Cette méthode sert à créer un nouveau répertoire sous Windows.  Si une
     arborescence de répertoire est passée en paramètre, alors chaque répertoire 
     de la liste sera créé, ex : niveau1/niveau2 -> le répertoire niveau1 sera
     créé et ensuite un sous-répertoire niveau2 lui sera ajouté.
 </summary>
 <param name="_strNomRpert">Nom du (des) répertoire(s) à créer.</param>
 <example> Créer un répertoire.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="CreerRpertWinUnNiveau"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="CreerRpertWinUnNiveau"></code>
 </example>
 <example> Créer plusieurs répertoires.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="CreerRpertWinDeuxNiveaux"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="CreerRpertWinDeuxNiveaux"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.DetruireRpertWin(System.String,System.Boolean)">
 <summary>
     Cette méthode est utilisée pour détruire un répertoire situé du côté
     Windows.
 </summary>
 <param name="_strNomRpert">Nom du répertoire à détruire.</param>
 <param name="_blnViderRpert">
     Indique si on doit détruire les fichiers et sous-répertoire
     contenus dans le répertoire à détruire.
 </param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="DetruireRpertWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="DetruireRpertWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.TerminerConxnFtpWin">
 <summary>
     Cette méthode est utilisée pour terminer la connexion ftp.
     La connexion données est aussi fermée en même temps.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="TerminerConxnFtpWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="TerminerConxnFtpWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.FtpWin.SeparRpert">
 <summary>
     Cette méthode permetde retourner le type de séparateur de répertoire utilisé.
 </summary>
 <returns>Le séparateur de répertoire.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Ftp.IFtpWin">
 <summary> 
     Définition de l'interface permettant, via l’utilisation d’une connexion ftp, 
     de transférer des fichiers entre une plateforme Windows et 
     une plateforme Windows, ou encore de faire de la gestion de 
     répertoires du côté Windows.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.ConxnWinEtablie">
 <summary>
     Cet événement indique que la connexion a été établie correctement.
 </summary>
 <param name="_strNomServr">Nom du serveur à connecter.</param>
 <param name="_strIdUtil">Identifiant de l'utilisateur.</param>
 <param name="_blnSucces">Indique le succès de la connexion.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.ConxnWinTermn">
 <summary>
     Cet événement indique la fin de la connexion ftp.
 </summary>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.FichWinDetr">
 <summary>
     Cet événement indique qu'un fichier a été détruit du côté Windows.
 </summary>
 <param name="_strNomFich">Nom du fichier à détruire.</param>
 <param name="_blnSucces">Indique le succès de la destruction.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.RpertWinCree">
 <summary>
     Cet événement est lancé suite à la création d'un nouveau répertoire du
     côté Windows.
 </summary>
 <param name="_strNomRpert">Nom du répertoire à créer.</param>
 <param name="_blnSucces">Indique le succès de la création.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.RpertWinDetr">
 <summary>
     Cet événement est lancé suite à la destruction d'un répertoire du
     côté Windows.
 </summary>
 <param name="_strNomRpert">Nom du répertoire à détruire.</param>
 <param name="_blnSucces">Indique le succès de la destruction.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.FichWinTranm">
 <summary>
     Cet événement est lancé lorsque un fichier Windows est transféré vers Windows.
     ( méthode put de ftp )
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <param name="_blnSucces">Indique le succès de la transmission.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.FichWinRecu">
 <summary>
     Cet événement est lancé lorsque un fichier Windows est transféré vers Windows.
     ( méthode get de ftp )
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom de la cible.</param>
 <param name="_blnSucces">>Indique le succès de la réception.</param>
 <remarks></remarks>
</member>
<member name="E:RAMQ.Ftp.IFtpWin.FichWinRename">
 <summary>
     Cet événement est lancé lorsque un fichier est renommé du côté ftp.
 </summary>
 <param name="_strNomRpert">Nom du répertoire.</param>
 <param name="_strNomFichSrce">Nom du fichier source</param>
 <param name="_strNomFichCible">Nom de la cible</param>
 <param name="_blnSucces">Indique le succès de l'opération.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.OuvrirConxnFtpWin">
 <summary>
     Cette méthode est appelée pour établir la connexion ftp à un serveur Windows
     et pour procéder à l'authentification de l'utilisateur.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="OuvrirConxnFtpWin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="OuvrirConxnFtpWin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.ObtenirListeFichWin(System.String)">
 <summary>
     Cette méthode est utilisée pour obtenir la liste des fichiers contenus dans un répertoire.
 </summary>
 <param name="_strNomRpertSrce">Nom du répertoire.</param>
 <returns>Collection de nom de fichier.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="ObtenirListeFichWin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="ObtenirListeFichWin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.ObtenirFichWin(System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour transférer un fichier de Windows vers
     Windows.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="ObtenirFichWin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="ObtenirFichWin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.EcrireFichWin(System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour transférer un fichier de Windows vers
     Windows.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="EcrireFichWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="EcrireFichWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.RenommerFichWin(System.String,System.String,System.String)">
 <summary>
     Cette méthode est utilisée pour renommer un fichier.
 </summary>
 <param name="_strNomRpert">Nom du répertoire.</param>
 <param name="_strNomFichSrce">Nom du fichier source.</param>
 <param name="_strNomFichCible">Nom du fichier cible.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="RenommerFichWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="RenommerFichWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.DetruireFichWin(System.String)">
 <summary>
     Cette méthode est utilisée pour détruire un fichier sur un serveur Windows.
 </summary>
 <param name="_strNomFichSrce">Nom du fichier à détruire.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="DetruireFichWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="DetruireFichWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.ObtenirRpertWin(System.String,System.String)">
 <summary>
     Cette méthode transfert le contenu d'un répertoire Windows vers un
     répertoire Windows.
 </summary>
 <param name="_strNomRpertSrce">Nom du répertoire Windows source.</param>
 <param name="_strNomRpertCible">Nom du répertoire Windows pour recevoir les fichiers.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="ObtenirRpertWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="ObtenirRpertWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.EcrireRpertWin(System.String,System.String)">
 <summary>
     Cette méthode transfert le contenu d'un répertoire Windows vers un
     répertoire Windows.
 </summary>
 <param name="_strNomRpertSrce">Nom du répertoire Windows source.</param>
 <param name="_strNomRpertCible">Nom du répertoire Windows pour recevoir les fichiers.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="EcrireRpertWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="EcrireRpertWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.CreerRpertWin(System.String)">
 <summary>
     Cette méthode sert à créer un nouveau répertoire sous Windows.  Si une
     arborescence de répertoire est passée en paramètre, alors chaque répertoire 
     de la liste sera créé, ex : niveau1/niveau2 -> le répertoire niveau1 sera
     créé et ensuite un sous-répertoire niveau2 lui sera ajouté.
 </summary>
 <param name="_strNomRpert">Nom du (des) répertoire(s) à créer.</param>
 <example> Créer un répertoire.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="CreerRpertWinUnNiveau"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="CreerRpertWinUnNiveau"></code>
 </example>
 <example> Créer plusieurs répertoires.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="CreerRpertWinDeuxNiveaux"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="CreerRpertWinDeuxNiveaux"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.DetruireRpertWin(System.String,System.Boolean)">
 <summary>
     Cette méthode est utilisée pour détruire un répertoire situé du côté
     Windows.
 </summary>
 <param name="_strNomRpert">Nom du répertoire à détruire.</param>
 <param name="_blnViderRpert">
     Indique si on doit détruire les fichiers et sous-répertoire
     contenus dans le répertoire à détruire.
 </param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="DetruireRpertWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="DetruireRpertWin" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Ftp.IFtpWin.TerminerConxnFtpWin">
 <summary>
     Cette méthode est utilisée pour terminer la connexion ftp.
     La connexion données est aussi fermée en même temps.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.vb" region="TerminerConxnFtpWin" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FtpWin.cs" region="TerminerConxnFtpWin" />
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.HeureSysteme">
 <summary> 
     Définition de la classe qui permet des manipulations avec l'heure du système.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.HeureSysteme.#ctor">
 <summary>
     Ce constructeur est privé afin d'empêcher son instanciation.
 </summary>
 <remarks></remarks>
</member>
<member name="F:RAMQ.HeureSysteme.Now">
 <summary>
     Cette méthode permet d'obtenir la date du système.
 </summary>
 <example>Obtenir l'heure du système.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.vb" region="ObtenirNow" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.cs" region="ObtenirNow" ></code>
 </example>
 <example>Changer l'heure du système lors d'essais unitaires.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.vb" region="ChangerNow"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.cs" region="ChangerNow"></code>
 </example>
 <remarks></remarks>
</member>
<member name="F:RAMQ.HeureSysteme.UtcNow">
 <summary>
     Cette méthode permet d'obtenir la date universelle du système.
 </summary>
 <example>Obtenir l'heure UTC du système.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.vb" region="ObtenirUtcNow"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.cs" region="ObtenirUtcNow"></code>
 </example>
 <example>Changer l'heure UTC du système lors d'essais unitaires.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.vb" region="ChangerUtcNow" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\HeureSysteme.cs" region="ChangerUtcNow" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.IParamEntreeJournETW">
 <summary> 
     Définition de l'interface représentant un évènement ETW à journaliser.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.IDUnique">
 <summary>
     Propriété qui retourne l'identifiant unique.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.IDFonctionnel">
 <summary>
     Propriété qui retourne l'identifiant fonctionnel.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.CodeUsager">
 <summary>
     Propriété qui retourne le code de l'utilisateur.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.NomComposante">
 <summary>
     Propriété qui retourne le nom de la composante.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.CodAppli">
 <summary>
     Propriété qui retourne le code d'application.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.NomUnitTach">
 <summary>
     Propriété qui retourne le nom de l'unité de tâches.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.NomServeur">
 <summary>
     Propriété qui retourne le nom du serveur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.NivInter">
 <summary>
     Propriété qui retourne le niveau d'intervention.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.DhJourn">
 <summary>
     Propriété qui retourne la date et heure de l'erreur.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.Etat">
 <summary>
     Propriété qui retourne l'état de la transaction.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.Version">
 <summary>
     Propriété qui retourne la version de l'évènement.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournETW.EstNominatif">
 <summary>
     Propriété qui détermine si l'évènements actuelle contient de donées nominatives.
 </summary>
 <remarks>La propriété sert à une post-validation lorsque un service SLAB "SINK" les événements.</remarks>
</member>
<member name="T:RAMQ.Journalisation.IParamEntreeJournErrTech">
 <summary> 
     Définition de l'interface représentant un évènement à journaliser.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.CodAppli">
 <summary>
     Propriété qui retourne le code d'application.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.NomUnitTach">
 <summary>
     Propriété qui retourne le nom de l'unité de tâches.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.IDUtil">
 <summary>
     Propriété qui retourne l'identifiant de l'utilisateur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.CodSeverErr">
 <summary>
     Propriété qui retourne le code de sévérité de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.NoMsgErr">
 <summary>
     Propriété qui retourne le numéro de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.LibelMsgErr">
 <summary>
     Propriété qui retourne le libellé du message de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.DetlErr">
 <summary>
     Propriété qui retourne le détail de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.DhErr">
 <summary>
     Propriété qui retourne la date et heure de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.InfoCompl">
 <summary>
     Propriété qui retourne des informations complémentaires.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.PileAppel">
 <summary>
     Propriété qui retourne la pile d'appel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.NomServrErr">
 <summary>
     Propriété qui retourne le nom du serveur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.NomSysExptnErr">
 <summary>
     Propriété qui retourne le nom du système d'exploitation.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.NivInter">
 <summary>
     Propriété qui retourne le niveau d'intervention.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.AdrGrpSuppo">
 <summary>
     Propriété qui retourne l'adresse de courriel de support.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.IParamEntreeJournErrTech.DonneJourn">
 <summary>
     Propriété qui retourne des données à journaliser.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.JournErrTech">
 <summary> 
     Définition de la classe permettant la journalisation.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Journalisation.JournErrTech.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.JournErrTech.#ctor(RAMQ.svcIServJournErrTech.IServJournErrTech,System.String,System.Boolean)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objIServJournErrTech">Objet qui implémente l'interface <see cref="T:RAMQ.svcIServJournErrTech.IServJournErrTech" />.</param>
 <param name="_strNomSrceTrace">Nom de la source de la trace.</param>
 <param name="_blnAppelSvc">Indique si l'on doit appeller le service web.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.JournErrTech.#ctor(RAMQ.svcIServJournErrTech.IServJournErrTech,System.String,System.Boolean,System.String)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objIServJournErrTech">Objet qui implémente l'interface <see cref="T:RAMQ.svcIServJournErrTech.IServJournErrTech" />.</param>
 <param name="_strNomSrceTrace">Nom de la source de la trace.</param>
 <param name="_blnAppelSvc">Indique si l'on doit appeller le service web.</param>
 <param name="_strZoneExec">Détermine la zone d'exécution</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.JournErrTech.JournaliserErrTech(RAMQ.Journalisation.IParamEntreeJournErrTech)">
 <summary>
     Cette méthode permet la journalisation des erreurs techniques.
 </summary>
 <param name="_objIParamEntreeJournErrTech">Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Journalisation.IParamEntreeJournErrTech" />.</param>
 <exception cref="T:System.ApplicationException">La source de donnée est inexistante. Impossible d'inscrire l'erreur dans le journal des évènements.</exception>
 <example> Journalisation d'une erreur avec un code de sévérité «Avertissement».
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.vb" region="JournaliserErrTechAvert"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.cs" region="JournaliserErrTechAvert"></code>
 </example>
 <example>Journalisation d'une erreur avec un code de sévérité «Information».
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.vb" region="JournaliserErrTechInfo" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.cs" region="JournaliserErrTechInfo" ></code>
 </example>
 <example>Journalisation d'une erreur avec un code de sévérité «Severe».
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.vb" region="JournaliserErrTechSevere"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.cs" region="JournaliserErrTechSevere"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.JournErrTech.ObtenirDescEvene(RAMQ.Journalisation.IParamEntreeJournErrTech)">
 <summary>
     Cette méthode permet d'obtenir la description de l'évènement sous forme de chaînes de caractères.
 </summary>
 <param name="_objIParamEntreeJournErrTech">Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Journalisation.IParamEntreeJournErrTech" />.</param>
 <returns>Chaînes de caractères représentant l'évènemement.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.JournErrTech.AjouterInfoObservtEvene(System.Text.StringBuilder@,System.String,System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'ajouter une information dans la chaîne de
     caractères de l'évènement.
 </summary>
 <param name="_sbDescEvene">Instance de la classe <see cref="T:System.Text.StringBuilder" />.</param>
 <param name="_strValeur">Valeur à inscrire.</param>
 <param name="_strValDefaut">Valeur par défaut.</param>
 <param name="_blnRemplace">Indique si l'on doit remplacer les espaces.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.JournErrTech.FermerConxnServJournErrTech">
 <summary>
     Cette méthode permet de fermer la connexion avec le service WCF.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.IJournErrTech">
 <summary> 
     Définition de l'interface permettant la journalisation.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Journalisation.IJournErrTech.JournaliserErrTech(RAMQ.Journalisation.IParamEntreeJournErrTech)">
 <summary>
     Cette méthode permet la journalisation des erreurs techniques.
 </summary>
 <param name="_objIParamEntreeJournErrTech">Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Journalisation.IParamEntreeJournErrTech" />.</param>
 <example> Journalisation d'une erreur avec un code de sévérité «Avertissement».
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.vb" region="JournaliserErrTechAvert"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.cs" region="JournaliserErrTechAvert"></code>
 </example>
 <example>Journalisation d'une erreur avec un code de sévérité «Information».
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.vb" region="JournaliserErrTechInfo" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.cs" region="JournaliserErrTechInfo" ></code>
 </example>
 <example>Journalisation d'une erreur avec un code de sévérité «Severe».
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.vb" region="JournaliserErrTechSevere"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\JournErrTech.cs" region="JournaliserErrTechSevere"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.Lot.IFichLog">
 <summary> 
     Définition de l'interface permettant de gérer les fichiers de log.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.IFichLog.LireFichLog">
 <summary>
     Cette méthode permet d'avoir le contenu d'un fichier de log sous
     forme de chaînes de caractères.
 </summary>
 <returns>Chaînes de caractères représentant le contenu du fichier de log.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="LireFichLog"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="LireFichLog"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.IFichLog.EcrireFichLog(RAMQ.Enumeration.EnumLigneFichLog,System.String)">
 <summary>
     Cette méthode permet d'écrire une ligne dans un fichier de log.
 </summary>
 <param name="_enuLigneFichLog">Numéro de la ligne à écrire.</param>
 <param name="_strLigneMsg">Ligne à écrire.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogIEnumerable" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogIEnumerable" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.IFichLog.EcrireFichLog(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
     Cette méthode permet d'écrire une collection de ligne dans un fichier de log.
 </summary>
 <param name="_colctLigne">Collection de ligne à écrire.</param>
 <example>Écrire un ligne de début.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogEnumStringDebut"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogEnumStringDebut"></code>
 </example>
 <example>Écrire un ligne de traitement.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogEnumStringTrait"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogEnumStringTrait"></code>
 </example>
 <example>Écrire un ligne de fin.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogEnumStringFin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogEnumStringFin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.Lot.IFichLog.FichierLog">
 <summary>
     Propriété qui retourne le nom du fichier de log.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.Lot.FichLog">
 <summary> 
     Définition de la classe permettant de gérer les fichiers de log.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.#ctor(System.String,System.Boolean)">
 <summary>
     Constructeur pour la création d'un fichier de log avec ou sans ajout.
 </summary>
 <param name="_strFichLog">Nom du fichier de log.</param>
 <param name="_blnAjouteAExistant">Indique si l'on doit ajouter au fichier existant.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="ConstructeurSansCodAppli" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="ConstructeurSansCodAppli" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.#ctor(System.String,System.String,System.String)">
 <summary>
     Constructeur pour la création d'un journal dans un répertoire.
     Le nom du fichier sera créer selon le code d'application.
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strUnitTach">Unité de tâches.</param>
 <param name="_strRpertFichLog">Répertoire du fichier log.</param>
 <exception cref="T:System.ApplicationException">Le code d'application est invalide.</exception>
 <exception cref="T:System.ApplicationException">L'unité de tâche est invalide.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="ConstructeurAvecCodAppli" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="ConstructeurAvecCodAppli" />
 </example>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.Lot.FichLog.FichierLog">
 <summary>
     Propriété qui retourne le nom du fichier de log.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.EcrireFichLog(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
     Cette méthode permet d'écrire une collection de ligne dans un fichier de log.
 </summary>
 <param name="_colctLigne">Collection de ligne à écrire.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogIEnumerable" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogIEnumerable" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.EcrireFichLog(RAMQ.Enumeration.EnumLigneFichLog,System.String)">
 <summary>
     Cette méthode permet d'écrire une ligne dans un fichier de log.
 </summary>
 <param name="_enuLigneFichLog">Numéro de la ligne à écrire.</param>
 <param name="_strLigneMsg">Ligne à écrire.</param>
 <example>Écrire un ligne de début.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogEnumStringDebut"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogEnumStringDebut"></code>
 </example>
 <example>Écrire un ligne de traitement.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogEnumStringTrait"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogEnumStringTrait"></code>
 </example>
 <example>Écrire un ligne de fin.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="EcrireFichLogEnumStringFin"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="EcrireFichLogEnumStringFin"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.LireFichLog">
 <summary>
     Cette méthode permet d'avoir le contenu d'un fichier de log sous
     forme de chaînes de caractères.
 </summary>
 <returns>Chaînes de caractères représentant le contenu du fichier de log.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.vb" region="LireFichLog"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\FichLog.cs" region="LireFichLog"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.RemplacerMasqueDateHeure(System.String)">
 <summary>
     Cette méthode permet de remplacer un masque avec la date du jour 
     dans une chaîne de caractères.
 </summary>
 <param name="_strChaine">Chaîne incluant le masque.</param>
 <returns>Chaîne résultante.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.CreerFichLog(System.Boolean@)">
 <summary>
     Cette fonction permet de créer un fichier de log.
 </summary>
 <param name="_blnAjouteAExistant">Indique si l'on doit ajouter au fichier existant.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.EcrireLigne(System.String)">
 <summary>
     Cette méthode permet d'écrire une chaîne de caractères dans le fichier de log.
 </summary>
 <param name="_strLigne">Chaîne de caractères à écrire.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.Lot.FichLog.NomFichLot(System.String,System.String)">
 <summary>
     Cette méthode permet de générer un nom de fichier de log.
 </summary>
 <param name="_strNomRpert">Nom du répertoire.</param>
 <param name="_strUnitTach">Unité de tâches.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> et qui offre des classes permettant de faciliter la 
 journalisation des erreurs dans l'environnement de la RAMQ.
 </summary>
 <remarks>
 <para>
 <b>ATTENTION : </b>Toute application à la RAMQ doit utiliser le module commun de journalisation, si vous n'utilisez pas ce module commun, 
 il y a de fortes chances que votre PPP échappe aux différents processus permettant de détecter les problèmes dans les applications.
 </para>
 <h3>Travaux en lot</h3>
 <para>
 Généralement pour les travaux en lot il est important de produire un fichier de journalisation détaillée du travail en lot, consulter la classe
 <see cref="T:RAMQ.Journalisation.Lot.FichLog">FichLog</see> qui vous offre des facilités ainsi qu'une manière standard de produire ce fichier 
 de journalisation.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Journalisation.ParamEntreeJournETW">
 <summary> 
     Définition de l'interface représentant un évènement ETW à journaliser.
 </summary>
</member>
<member name="M:RAMQ.Journalisation.ParamEntreeJournETW.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.IDUnique">
 <summary>
     Propriété qui retourne l'identifiant unique.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.IDFonctionnel">
 <summary>
     Propriété qui retourne l'identifiant fonctionnel.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.CodeUsager">
 <summary>
     Propriété qui retourne le code de l'utilisateur.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.NomComposante">
 <summary>
     Propriété qui retourne le nom de la composante.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.CodAppli">
 <summary>
     Propriété qui retourne le code d'application.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.NomUnitTach">
 <summary>
     Propriété qui retourne le nom de l'unité de tâches.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.NomServeur">
 <summary>
     Propriété qui retourne le nom du serveur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.NivInter">
 <summary>
     Propriété qui retourne le niveau d'intervention.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.DhJourn">
 <summary>
     Propriété qui retourne la date et heure de l'erreur.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.Etat">
 <summary>
     Propriété qui retourne l'état de la transaction.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.Version">
 <summary>
     Propriété qui retourne la version de l'évènement.
 </summary>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournETW.EstNominatif">
 <summary>
     Propriété qui détermine si l'évènements actuelle contient de donées nominatives.
 </summary>
</member>
<member name="M:RAMQ.Journalisation.ParamEntreeJournETW.SerialiserJson(RAMQ.Journalisation.ParamEntreeJournETW)">
 <summary>
     Méthode qui permet de sérialiser un objet de type <see cref="T:RAMQ.Journalisation.ParamEntreeJournETW" /> en
     une chaîne de caractère JSON.
 </summary>
 <param name="_objParamEntreeJournETW">Objet à sérialiser</param>
 <returns>Représentation une chaîne de caractères Json de l'objet de type 
 <see cref="T:RAMQ.Journalisation.ParamEntreeJournETW" /> reçu en paramètre</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.ParamEntreeJournErrTech">
 <summary> 
     Définition de la classe représentant un évènement à journaliser.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Journalisation.ParamEntreeJournErrTech.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.CodAppli">
 <summary>
     Propriété qui retourne le code d'application.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.NomUnitTach">
 <summary>
     Propriété qui retourne le nom de l'unité de tâches.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.IDUtil">
 <summary>
     Propriété qui retourne l'identifiant de l'utilisateur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.CodSeverErr">
 <summary>
     Propriété qui retourne le code de sévérité de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.NoMsgErr">
 <summary>
     Propriété qui retourne le numéro de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.LibelMsgErr">
 <summary>
     Propriété qui retourne le libellé du message de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.DetlErr">
 <summary>
     Propriété qui retourne le détail de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.DhErr">
 <summary>
     Propriété qui retourne la date et heure de l'erreur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.InfoCompl">
 <summary>
     Propriété qui retourne des informations complémentaires.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.PileAppel">
 <summary>
     Propriété qui retourne la pile d'appel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.NomServrErr">
 <summary>
     Propriété qui retourne le nom du serveur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.NomSysExptnErr">
 <summary>
     Propriété qui retourne le nom du système d'exploitation.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.NivInter">
 <summary>
     Propriété qui retourne le niveau d'intervention.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.AdrGrpSuppo">
 <summary>
     Propriété qui retourne l'adresse de courriel de support.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.ParamEntreeJournErrTech.DonneJourn">
 <summary>
     Propriété qui retourne des données à journaliser.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.RAMQEventLogTraceListener">
 <summary> 
 Définition de la classe représentant une personnalisation de la classe <see cref="T:System.Diagnostics.TraceListener" />afin de pouvoir écrire dans l'event log avec des 
 sévérités différentes.
 </summary>
</member>
<member name="M:RAMQ.Journalisation.RAMQEventLogTraceListener.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.RAMQEventLogTraceListener.Source">
 <summary>
     Propriété qui retourne la source de l'évènement.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Journalisation.RAMQEventLogTraceListener.Type">
 <summary>
     Propriété qui retourne le type de l'évènement.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.RAMQEventLogTraceListener.Write(System.String)">
 <summary>
     Cette méthode permet d'écrire sans retour de chariot.
 </summary>
 <param name="_strMsg">Message à écrire.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RAMQEventLogTraceListener.vb" region="Write"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RAMQEventLogTraceListener.cs" region="Write"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.RAMQEventLogTraceListener.WriteLine(System.String)">
 <summary>
     Cette méthode permet d'écrire avec retour de chariot.
 </summary>
 <param name="_strMsg">Message à écrire.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RAMQEventLogTraceListener.vb" region="WriteLine"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\RAMQEventLogTraceListener.cs" region="WriteLine"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Journalisation.SrceEvenementETW`1">
 <summary> 
     Permet de créer des événements pour le suivi d'événements pour Windows (ETW).
 </summary>
</member>
<member name="P:RAMQ.Journalisation.SrceEvenementETW`1.Journal">
 <summary> 
    Propriété qui retourne une instatance initialisée de façon tardive.
 </summary>
</member>
<member name="M:RAMQ.Journalisation.SrceEvenementETW`1.EcrireEvenement(System.Int32,System.String)">
 <summary>
  Permet d'écrire un événement dans le suivi d'événements ETW.
 </summary>
 <param name="_intIdEvenement">Identificateur de l'événement. </param>
 <param name="_strJsonParamEntree">Une chaîne de caractère JSON de l'objet de 
 type <see cref="T:RAMQ.Journalisation.ParamEntreeJournETW" />.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SrceEvenenemtETW.vb" region="EcrireEveneDonneesGeneriques" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SrceEvenenemtETW.cs" region="EcrireEveneDonneesGeneriques" />
 </example> 
 <remarks></remarks>
</member>
<member name="M:RAMQ.Journalisation.SrceEvenementETW`1.EcrireEvenement(System.Int32,System.String,System.String,System.String)">
 <summary>
  Écrit un événement dans le suivi d'événements ETW.
 </summary>
 <param name="_intIdEvenement">Identificateur de l'événement.</param>
 <param name="_strJsonParamEntree">Une chaîne de caractère JSON de l'objet de type 
 <see cref="T:RAMQ.Journalisation.ParamEntreeJournETW" />. </param>
 <param name="_strDonneesNominatives">Une chaîne de caractère JSON d'un objet ou un paramètre contenant 
 de données nominatives.</param>
 <param name="_strAutreDonnees">Autres données à journaliser. </param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SrceEvenenemtETW.vb" region="EcrireEveneDonneesNominatives" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SrceEvenenemtETW.cs" region="EcrireEveneDonneesNominatives" />
 </example> 
 <remarks></remarks>
</member>
<member name="T:RAMQ.Message.IInfoMessage">
 <summary> 
     Définition de l'interface représentant le texte français et anglais d'un message.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Message.IInfoMessage.CodSever">
 <summary>
     Propriété qui retourne le code de sévérité.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.IInfoMessage.TxtMsgFran">
 <summary>
     Propriété qui retourne le texte d'un message en français.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.IInfoMessage.TxtMsgAngl">
 <summary>
     Propriété qui retourne le texte d'un message en anglais.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Message.IMsgTrait">
 <summary> 
     Définition de l'interface représentant un message de traitement.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Message.IMsgTrait.CodAppli">
 <summary>
     Propriété qui retourne le code d'application.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.IMsgTrait.IdMsg">
 <summary>
     Propriété qui retourne le numéro de message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.IMsgTrait.CodSever">
 <summary>
     Propriété qui retourne le code de sévérité.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.IMsgTrait.TxtMsgFran">
 <summary>
     Propriété qui retourne le texte d'un message en français.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.IMsgTrait.TxtMsgAngl">
 <summary>
     Propriété qui retourne le texte d'un message en anglais.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Message.InfoMessage">
 <summary> 
     Définition de la classe représentant le texte français et anglais d'un message.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Message.InfoMessage.CodSever">
 <summary>
     Propriété qui retourne le code de sévérité.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.InfoMessage.TxtMsgFran">
 <summary>
     Propriété qui retourne le texte d'un message en français.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.InfoMessage.TxtMsgAngl">
 <summary>
     Propriété qui retourne le texte d'un message en anglais.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Message.IResolutionMessage">
 <summary> 
     Définition de l'interface permettant de gérer la résolution des messages
     de traitement.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Message.IResolutionMessage.ResoudreMessage(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},RAMQ.Enumeration.EnumLangue)">
 <summary>
     Cette méthode permet de résoudre un message dans un fichier XML.
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <param name="_colctStrPartiesVariables">Parties variables du message.</param>
 <param name="_enuLang">Langue du message.</param>
 <returns>Texte complet du message avec les parties variables remplacées.</returns>
 <example>Résoudre un message en français. 
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ResoudreMessageFran"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ResoudreMessageFran"></code>
 </example>
 <example>Résoudre un message en anglais.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ResoudreMessageAngl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ResoudreMessageAngl"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.IResolutionMessage.ResoudrePartiesVariables(System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
     Cette méthode permet de trouver et remplacer les parties variables.
 </summary>
 <param name="_strMsg">Message où remplacer les variables.</param>
 <param name="_colctStrPartiesVariables">Parties variables à remplacer.</param>
 <returns>Message avec les parties variable remplacées.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ResoudrePartiesVariables"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ResoudrePartiesVariables"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.IResolutionMessage.ObtenirFichierXml(System.String)">
 <summary>
     Cette méthode permet de retourner le fichier XML contenant les
     messages d'une application en particulier. 
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <returns>Contenu du fichier XML des messages de traitement sous forme d'instance de la classe <see cref="T:System.Xml.Linq.XDocument" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ObtenirFichierXml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ObtenirFichierXml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.IResolutionMessage.ObtenirDonneesFichierXml(System.String,System.String)">
 <summary>
     Cette méthode permet d'extraire un message dans un fichier XML.
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <returns>Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Message.IInfoMessage" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ObtenirDonneesFichierXml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ObtenirDonneesFichierXml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Message.MsgTrait">
 <summary> 
     Définition de la classe représentant un message de traitement.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Message.MsgTrait.CodAppli">
 <summary>
     Propriété qui retourne le code d'application.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.MsgTrait.IdMsg">
 <summary>
     Propriété qui retourne le numéro de message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.MsgTrait.CodSever">
 <summary>
     Propriété qui retourne le code de sévérité.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.MsgTrait.TxtMsgFran">
 <summary>
     Propriété qui retourne le texte d'un message en français.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Message.MsgTrait.TxtMsgAngl">
 <summary>
     Propriété qui retourne le texte d'un message en anglais.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.MsgTrait.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.MsgTrait.#ctor(System.String,System.String)">
 <summary>
     Constructeur pour créer un message de traitement pour le code 
     d'application et l'identifiant de message passés en
     paramètre. 
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MsgTrait.vb" region="ConstructeurCodAppliIdMsg" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MsgTrait.cs" region="ConstructeurCodAppliIdMsg" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.MsgTrait.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
     Constructeur pour créer un message de traitement pour le code 
     d'application et l'identifiant de message passés en
     paramètre. 
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <param name="_strPartiesVariables">Parties variables du message.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MsgTrait.vb" region="ConstructeurCodAppliIdMsgPartVar" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\MsgTrait.cs" region="ConstructeurCodAppliIdMsgPartVar" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.MsgTrait.#ctor(RAMQ.Message.IResolutionMessage,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
     Constructeur servant aux tests unitaires.
 </summary>
 <param name="_objIResolMsg">Objet qui implémente l'interface <see cref="T:RAMQ.Message.IResolutionMessage" />.</param>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <param name="_strPartiesVariables">Parties variables du message.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.MsgTrait.ObtenirMsgTraitResolu(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
     Cette méthode permet la résolution d'un message.
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <param name="_colctStrPartiesVariables">Parties variables du message.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Message.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> et <b>RAMQ.CO.COC1_V4DonneComne_cpo</b> 
 qui offre des classes permettant d'extraire les messages fonctionnels utilisés par les PPP.
 </summary>
 <remarks>
 <para>
 Les messages fonctionnels à la RAMQ sont conservés dans une base de données Oracle (dans le schéma COM) et sont créés via l'utilitaire
 commun « Outils Commun Oracle ». Ils sont ensuite déposés dans un fichier XML pour le PPP (généralement à l'emplacement suivant : 
 R:\[Envir]\PPP\PPP_LIVXX\Bin ou D:\Appli\[Envir]\PPP\Bin des serveurs applicatif).
 </para>
 <para>
 Il n'est pas obligatoire d'utiliser ce module commun pour exploiter l'information contenue dans ce fichier, cependant ce dernier a été conçu
 dans le but de vous faciliter la vie, entre autres en conservant en cache l'ensemble des messages de votre PPP.
 </para>
 <h3>Processus de création et de modification des messages.</h3>
 <para>
 Dans un premier temps l'analyste (ou parfois le développeur) du système utilise l'utilitaire commun « Outils communs Oracle » afin d'inscrire
 ses messages dans la base de données. Une fois cette tâche effectuée il doit choisir les messages à exporter vers le fichier XML et en fait 
 l'exportation. Un guide explique ce processus plus en détail : P700U_GuideOutilCommunOracle.
 </para>
 <h3>Message conservé en cache</h3>
 La composante conserve en mémoire cache (HttpCache sur les serveurs web, dans une variable Shared (statique) dans un contexte d'application
 Window) l'ensemble des messages du PPP après qu'un premier message ait été demandé par le PPP, ainsi les accès subséquents sont très rapides.
 Utiliser la classe <see cref="T:RAMQ.Message.ResolutionMessage"/> afin de bénéficier de cette fonctionnalité.
 </remarks>
</member>
<member name="T:RAMQ.Message.ResolutionMessage">
 <summary> 
 Définition de la classe permettant de gérer la résolution des messages de traitement.
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.#ctor(RAMQ.svcIServRecupMsg.IServRecupMsg)">
 <summary>
     Constructeur servant aux tests unitaires.
 </summary>
 <param name="_objIServRecupMsg">Objet qui implémente l'interface <see cref="T:RAMQ.svcIServRecupMsg.IServRecupMsg" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.ResoudreMessage(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},RAMQ.Enumeration.EnumLangue)">
 <summary>
 Cette méthode permet de résoudre un message dans un fichier XML.
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <param name="_strPartiesVariables">Parties variables du message.</param>
 <param name="_enuLang">Langue du message.</param>
 <exception cref="T:System.ApplicationException">Le code d'application est invalide.</exception>
 <returns>Texte complet du message avec les parties variables remplacées.</returns>
 <example>Résoudre un message en français. 
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ResoudreMessageFran"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ResoudreMessageFran"></code>
 </example>
 <example>Résoudre un message en anglais.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ResoudreMessageAngl"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ResoudreMessageAngl"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.ResoudrePartiesVariables(System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Cette méthode permet de trouver et remplacer les parties variables.
 </summary>
 <param name="_strMsg">Message où remplacer les variables.</param>
 <param name="_strPartiesVariables">Parties variables à remplacer.</param>
 <returns>Message avec les parties variable remplacées.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ResoudrePartiesVariables"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ResoudrePartiesVariables"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.ObtenirFichierXml(System.String)">
 <summary>
 Cette méthode permet de retourner le fichier XML contenant les messages d'une application en particulier. 
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <returns>Contenu du fichier XML des messages de traitement sous forme d'instance de la classe <see cref="T:System.Xml.Linq.XDocument" />.</returns>
 <exception cref="T:System.ApplicationException">Le code d'application est invalide.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ObtenirFichierXml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ObtenirFichierXml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.ObtenirDonneesFichierXml(System.String,System.String)">
 <summary>
 Cette méthode permet d'extraire un message dans un fichier XML.
 </summary>
 <param name="_strCodAppli">Code d'application.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <exception cref="T:System.ApplicationException">Le code d'application est invalide.</exception>
 <returns>Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Message.IInfoMessage" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.vb" region="ObtenirDonneesFichierXml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ResolutionMessage.cs" region="ObtenirDonneesFichierXml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.FermerConxnServRecupMsg">
 <summary>
 Cette méthode permet de fermer la connexion avec le service WCF.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.ObtenirMessages(System.String)">
 <summary>
 Obtenir le dictionnaire de message disponible pour le PPP
 </summary>
 <param name="_strCodAppli">Code de l'application</param>
 <returns>Dictionnaire de message pour le PPP concerné</returns>
 <remarks>
 </remarks>
</member>
<member name="M:RAMQ.Message.ResolutionMessage.SelectionnerMsg(System.Xml.Linq.XDocument,System.String)">
 <summary>
 Cette méthode permet de sélectionner un noeud représentant un message de traitement.
 </summary>
 <param name="_objXDocMsg">Instance de la classe <see cref="T:System.Xml.Linq.XDocument" /> contenant les messages.</param>
 <param name="_strIdMsg">Identifiant (Numéro) du message.</param>
 <exception cref="T:System.ApplicationException">Aucune description trouvée pour le message.</exception>
 <returns>Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Message.IInfoMessage" />.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.My.Resources.Resources">
<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ResourceManager">
<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.Culture">
<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.AdrDomCourlInval">
<summary>
  Recherche une chaîne localisée semblable à Le domaine &apos;{0}&apos; n&apos;existe pas..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.AdrDomDnsCorpoInval">
<summary>
  Recherche une chaîne localisée semblable à Le nom du serveur DNS corporatif &apos;{0}&apos; est invalide..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.AdrExpedMulti">
<summary>
  Recherche une chaîne localisée semblable à Une seule adresse expéditeur est autorisée..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.AdrFormeInvalErr">
<summary>
  Recherche une chaîne localisée semblable à L&apos;adresse &apos;{0}&apos; est invalide..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CarSeparClaims">
<summary>
  Recherche une chaîne localisée semblable à |.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CarSeparDom">
<summary>
  Recherche une chaîne localisée semblable à \.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleAppelModComneSvc">
<summary>
  Recherche une chaîne localisée semblable à AppelModComneSvc.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleDCEnvir">
<summary>
  Recherche une chaîne localisée semblable à DCEnvir.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleDomAdrCourlDns">
<summary>
  Recherche une chaîne localisée semblable à DomAdrCourlDns.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleEnvir">
<summary>
  Recherche une chaîne localisée semblable à Envir.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleIdAuthnServWCF">
<summary>
  Recherche une chaîne localisée semblable à IdAuthnServWCF.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleIndConsGest">
<summary>
  Recherche une chaîne localisée semblable à IndConsGest.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleInvalide">
<summary>
  Recherche une chaîne localisée semblable à La clé &apos;{0}&apos; est inexistante dans le fichier de configuration..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleModeExec">
<summary>
  Recherche une chaîne localisée semblable à ModeExec.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleNomAppliSecureStore">
<summary>
  Recherche une chaîne localisée semblable à NomAppliSecureStore.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleNomServr">
<summary>
  Recherche une chaîne localisée semblable à NomServeur.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleRegistreCOM">
<summary>
  Recherche une chaîne localisée semblable à SOFTWARE\RAMQ\COM.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleServrSMTP">
<summary>
  Recherche une chaîne localisée semblable à ServrSMTP.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleUrlRdrctErrTech">
<summary>
  Recherche une chaîne localisée semblable à UrlRdrctErrTech.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleUrlServGestDoc">
<summary>
  Recherche une chaîne localisée semblable à UrlServGestDoc.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleUrlServJournErrTech">
<summary>
  Recherche une chaîne localisée semblable à UrlServJournErrTech2.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleUrlServMessage">
<summary>
  Recherche une chaîne localisée semblable à UrlServMessage2.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleUrlServRecupConfgAppli">
<summary>
  Recherche une chaîne localisée semblable à UrlServRecupConfgAppli2.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleUrlServRecupMsg">
<summary>
  Recherche une chaîne localisée semblable à UrlServRecupMsg2.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleVarRegistreInexistante">
<summary>
  Recherche une chaîne localisée semblable à La clé &apos;{0}&apos; ou la variable &apos;{1}&apos; n&apos;existe pas dans le registre..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CleZoneExec">
<summary>
  Recherche une chaîne localisée semblable à ZoneExec.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CodAppli">
<summary>
  Recherche une chaîne localisée semblable à COM.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CodAppliInval">
<summary>
  Recherche une chaîne localisée semblable à Le code d&apos;application &apos;{0}&apos; est invalide..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CodeAppliFinalCOM">
<summary>
  Recherche une chaîne localisée semblable à COM .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CodeAppliOrigCOM">
<summary>
  Recherche une chaîne localisée semblable à COM.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.Confg7Envir">
<summary>
  Recherche une chaîne localisée semblable à Env7.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ContructeurClasseErreurInvalide">
<summary>
  Recherche une chaîne localisée semblable à La classe d&apos;erreur &apos;{0}&apos; provenant de l&apos;assembly &apos;{1}&apos; ne possède aucun constructeur vide &quot;sub new()&quot;..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.CookieValidPostAbsnt">
<summary>
  Recherche une chaîne localisée semblable à Le cookie nécessaire pour la validation du &apos;POST&apos; n&apos;a pas été trouvé..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.DescMsgInexistante">
<summary>
  Recherche une chaîne localisée semblable à Aucune description trouvée pour le message {0}..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirAcptn">
<summary>
  Recherche une chaîne localisée semblable à ACPTN.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirFonct">
<summary>
  Recherche une chaîne localisée semblable à FONCT.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirForma">
<summary>
  Recherche une chaîne localisée semblable à FORMA.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirInteg">
<summary>
  Recherche une chaîne localisée semblable à INTEG.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirInvalide">
<summary>
  Recherche une chaîne localisée semblable à L&apos;environnement spécifié est invalide..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirParte">
<summary>
  Recherche une chaîne localisée semblable à PARTE.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirPreDev">
<summary>
  Recherche une chaîne localisée semblable à PRDEV.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirProd">
<summary>
  Recherche une chaîne localisée semblable à PROD.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirTechno">
<summary>
  Recherche une chaîne localisée semblable à TECNO.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirUnit">
<summary>
  Recherche une chaîne localisée semblable à UNIT.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvirUrg">
<summary>
  Recherche une chaîne localisée semblable à URG.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.EnvoieTypeMsgNonSupporte">
<summary>
  Recherche une chaîne localisée semblable à L&apos;envoie du type de message reçu en paramètre n&apos;est pas supporté..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrAjoutDonneXmlASigna">
<summary>
  Recherche une chaîne localisée semblable à Une erreur est survenue en tentant d&apos;ajouter les données XML à la signature..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrAppliBrouillerDisp">
<summary>
  Recherche une chaîne localisée semblable à Exception dans BrouillerNoDispensateur .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrAppliBrouillerIndividu">
<summary>
  Recherche une chaîne localisée semblable à Exception dans BrouillerNoIndividu .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrAppliBrouillerNam">
<summary>
  Recherche une chaîne localisée semblable à Exception dans BrouillerNAM .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrAppliBrouillerPharmacie">
<summary>
  Recherche une chaîne localisée semblable à Exception dans BrouillerNoPharmacie .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrCertClePrivVide">
<summary>
  Recherche une chaîne localisée semblable à La clé privée du certificat est vide..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrCertObtnClePriv">
<summary>
  Recherche une chaîne localisée semblable à Impossible d&apos;obtenir la clé privée du certificat..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrCertSansChifm">
<summary>
  Recherche une chaîne localisée semblable à La clé du certificat ne peut pas être utilisée pour le chiffrement à clé..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrCertSansClePriv">
<summary>
  Recherche une chaîne localisée semblable à Le certificat ne contient pas une clé privée..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrCleAppSettings">
<summary>
  Recherche une chaîne localisée semblable à La clé de configuration AppSettings &apos;{0}&apos; est absente et aucune valeur par défaut n&apos;est disponible..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrCreerSigna">
<summary>
  Recherche une chaîne localisée semblable à Une erreur est survenue en tentant de créer la signature..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrDelaiExpir">
<summary>
  Recherche une chaîne localisée semblable à Le délai est expiré..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrNbMaxCaraDepasse">
<summary>
  Recherche une chaîne localisée semblable à Le nombre de caractères maximum pour &apos;{0}&apos; est {1} ..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrOuvertStoreCert">
<summary>
  Recherche une chaîne localisée semblable à Erreur lors de l&apos;ouverture du store de certificat, pour le nom &apos;{0}&apos; et l&apos;emplacement &apos;{1}&apos;. Détails : &apos;{2}&apos;..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrParamFormat">
<summary>
  Recherche une chaîne localisée semblable à Le format du paramètre est incorrect.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrParamOutOfRange">
<summary>
  Recherche une chaîne localisée semblable à La valeur du paramètre est hors limites.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrRechrCert">
<summary>
  Recherche une chaîne localisée semblable à Erreur en tentant de retrouver le certificat &apos;{0}&apos; avec le store &apos;{1}&apos; et l&apos;emplacement &apos;{2}&apos;. Détails : &apos;{3}&apos;..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrRechrGuil">
<summary>
  Recherche une chaîne localisée semblable à Impossible de rechercher un wsu:id contenant à la fois des guillemets simples et doubles..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrRechrNonUniq">
<summary>
  Recherche une chaîne localisée semblable à Impossible de rechercher un wsu:id non unique..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrResulRechrCertVide">
<summary>
  Recherche une chaîne localisée semblable à Le certificat &apos;{0}&apos; n&apos;a pas été retrouvé dans le store &apos;{1}&apos; et l&apos;emplacement &apos;{2}&apos;..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrSigna">
<summary>
  Recherche une chaîne localisée semblable à Impossible de signer les données avec le certificat spécifié..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ErrSrceDonne">
<summary>
  Recherche une chaîne localisée semblable à La source de donnée est inexistante.  Impossible d&apos;inscrire l&apos;erreur dans le journal des évènements..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ExpedRAMQ">
<summary>
  Recherche une chaîne localisée semblable à &lt;ramq@ramq.gouv.qc.ca&gt;.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.Expiration">
<summary>
  Recherche une chaîne localisée semblable à -30.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FichConfigIntrouvable">
<summary>
  Recherche une chaîne localisée semblable à Fichier de configuration introuvable ou innacessible :.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FichierConfgInexistant">
<summary>
  Recherche une chaîne localisée semblable à Le fichier de configuration est inexistant..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FichierConfgInvalide">
<summary>
  Recherche une chaîne localisée semblable à Le fichier de configuration est invalide. ({0}).
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FichierUdlInexistant">
<summary>
  Recherche une chaîne localisée semblable à Le fichier UDL est inexistant..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FichierUdlInvalide">
<summary>
  Recherche une chaîne localisée semblable à Le fichier UDL est invalide. ({0}).
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FormeChnDh">
<summary>
  Recherche une chaîne localisée semblable à yyyy-MM-dd HH:mm:ss.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdChangerDir">
<summary>
  Recherche une chaîne localisée semblable à CWD .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdChangerType">
<summary>
  Recherche une chaîne localisée semblable à TYPE I.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdCreerDir">
<summary>
  Recherche une chaîne localisée semblable à MKD .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdDelDir">
<summary>
  Recherche une chaîne localisée semblable à RMD .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdDelFichier">
<summary>
  Recherche une chaîne localisée semblable à DELE .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdGetFichier">
<summary>
  Recherche une chaîne localisée semblable à RETR .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdList">
<summary>
  Recherche une chaîne localisée semblable à LIST ./.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdModePassif">
<summary>
  Recherche une chaîne localisée semblable à PASV.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdMotDePasse">
<summary>
  Recherche une chaîne localisée semblable à PASS .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdNomUtil">
<summary>
  Recherche une chaîne localisée semblable à USER .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdPutFichier">
<summary>
  Recherche une chaîne localisée semblable à STOR .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdQuitter">
<summary>
  Recherche une chaîne localisée semblable à QUIT.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdRenameFrom">
<summary>
  Recherche une chaîne localisée semblable à RNFR .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdRenameTo">
<summary>
  Recherche une chaîne localisée semblable à RNTO .
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCmdRepCourant">
<summary>
  Recherche une chaîne localisée semblable à PWD.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeAuthentifie">
<summary>
  Recherche une chaîne localisée semblable à 230.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeBesoinPwd">
<summary>
  Recherche une chaîne localisée semblable à 331.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeConnected">
<summary>
  Recherche une chaîne localisée semblable à 220.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeFicheExiste">
<summary>
  Recherche une chaîne localisée semblable à 350.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeMakeDirOk">
<summary>
  Recherche une chaîne localisée semblable à 257.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeRetourOk">
<summary>
  Recherche une chaîne localisée semblable à 250.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeSendingData">
<summary>
  Recherche une chaîne localisée semblable à 150.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeSendingDataCntl">
<summary>
  Recherche une chaîne localisée semblable à 125.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.FtpCodeTransfertComplet">
<summary>
  Recherche une chaîne localisée semblable à 226.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.HeadSec">
<summary>
  Recherche une chaîne localisée semblable à Security.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.IntvnEmetr">
<summary>
  Recherche une chaîne localisée semblable à IntervenantEmetteur.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.IntvnOrig">
<summary>
  Recherche une chaîne localisée semblable à IntervenantOrigine.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ListeIMessageHybride">
<summary>
  Recherche une chaîne localisée semblable à La liste de message reçue ne peut contenir des courriels et des télécopies. Elle doit contenir qu&apos;un seul type de message..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.LongMaxDescEvene">
<summary>
  Recherche une chaîne localisée semblable à 4000.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MaxArrayLength">
<summary>
  Recherche une chaîne localisée semblable à 1024000.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MaxBufferSize">
<summary>
  Recherche une chaîne localisée semblable à 1024000.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MaxReceivedMessageSize">
<summary>
  Recherche une chaîne localisée semblable à 1024000.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MaxStringContentLength">
<summary>
  Recherche une chaîne localisée semblable à 1024000.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ModeExecLot">
<summary>
  Recherche une chaîne localisée semblable à lot.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ModeExecPoste">
<summary>
  Recherche une chaîne localisée semblable à poste.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ModeExecServeur">
<summary>
  Recherche une chaîne localisée semblable à serveur.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MsgErrChargAssembly">
<summary>
  Recherche une chaîne localisée semblable à Une erreur est survenue lors du chargement de l&apos;assembly {0}..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MsgErrEx">
<summary>
  Recherche une chaîne localisée semblable à Erreur imprévue..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MsgErrFault">
<summary>
  Recherche une chaîne localisée semblable à Erreur imprévue.  Voir le détail de la FaultException pour plus de détail..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MsgErrFichIntrouvable">
<summary>
  Recherche une chaîne localisée semblable à Impossible de charger l&apos;assembly - le fichier {0} est introuvable..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MsgErrFichNonNet">
<summary>
  Recherche une chaîne localisée semblable à Le fichier {0} n&apos;est pas une Assembly .NET.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.MsgSourceInexistante">
<summary>
  Recherche une chaîne localisée semblable à Impossible de créer une entrée pour la source &apos;{0}&apos; car elle n&apos;existe pas sur ce serveur. (Utilisateur: {1}\{2}) {3}.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NamespaceEnteteMsgIdent">
<summary>
  Recherche une chaîne localisée semblable à http://COD1_V4OutilBase_cpo/2.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NbrOctetHeadMax">
<summary>
  Recherche une chaîne localisée semblable à 500000.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NoErrOk">
<summary>
  Recherche une chaîne localisée semblable à 0.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomCleCookie">
<summary>
  Recherche une chaîne localisée semblable à ValidPost_{0}.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomCleQueryString">
<summary>
  Recherche une chaîne localisée semblable à param.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomDebCleCookie">
<summary>
  Recherche une chaîne localisée semblable à ValidPost_.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomDNSCorpoInacces">
<summary>
  Recherche une chaîne localisée semblable à Les serveurs DNS corporatifs sont inaccessibles..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomElmTitrePageDynmq">
<summary>
  Recherche une chaîne localisée semblable à __TitrePageDynmq.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomElmTitreSiteDynmq">
<summary>
  Recherche une chaîne localisée semblable à __TitreSiteDynmq.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomEnteteMsgGrp">
<summary>
  Recherche une chaîne localisée semblable à EnteteSoapRAMQ.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomEnteteMsgIdent">
<summary>
  Recherche une chaîne localisée semblable à IdentiteRAMQ.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomEnteteMsgRoles">
<summary>
  Recherche une chaîne localisée semblable à RolesRAMQ.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomEnteteMsgTypeAuth">
<summary>
  Recherche une chaîne localisée semblable à TypeAuthRAMQ.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomFichConfigEnvir">
<summary>
  Recherche une chaîne localisée semblable à C:\PROGRAM FILES\RAMQ\RAMQ.CO.COD1_V4OutilBase_cpo.cfg.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomFichRQEnvir">
<summary>
  Recherche une chaîne localisée semblable à Z:\RQ_ENVIR.XML.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomJournApplication">
<summary>
  Recherche une chaîne localisée semblable à Application.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NomPropDetl">
<summary>
  Recherche une chaîne localisée semblable à Detail.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NSAuthn">
<summary>
  Recherche une chaîne localisée semblable à http://cais-icp.org/v1.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.NSXmlSigna">
<summary>
  Recherche une chaîne localisée semblable à http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ParamAdrServInexistant">
<summary>
  Recherche une chaîne localisée semblable à Le paramètre indiquant l&apos;adresse du service WCF &apos;{0}&apos; est inexistant dans le fichier configuration..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ParamInvalide">
<summary>
  Recherche une chaîne localisée semblable à Le paramètre est invalide..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ParamObligatoire">
<summary>
  Recherche une chaîne localisée semblable à Le paramètre est obligatoire..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.PPPInexistant">
<summary>
  Recherche une chaîne localisée semblable à Le PPP est inexistant dans le fichier de configuration. ({0}).
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.PrefiEspaceNomWsu">
<summary>
  Recherche une chaîne localisée semblable à wsu.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.RegexAdrCourl">
<summary>
  Recherche une chaîne localisée semblable à ^[a-zA-Z\d]([a-zA-Z\d]|[-_.&apos;’][a-zA-Z\d])*[-_]?@[a-zA-Z\d]([a-zA-Z\d]|[-_.][a-zA-Z\d])*[.][a-zA-Z]{2,};{0,1}$.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.RegexClaimFormBased">
<summary>
  Recherche une chaîne localisée semblable à ^[0-9]+#\.f\|.+$.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.RegexCodAppli">
<summary>
  Recherche une chaîne localisée semblable à ^[A-Z]{3}$.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.RegexEnteteSoapRAMQ">
<summary>
  Recherche une chaîne localisée semblable à ^.*?Header&gt;.*?(?&lt;reqsoap&gt;&lt;EnteteSoapRAMQ xmlns=&quot;(?&lt;namespace&gt;http://COD1_V4OutilBase_cpo/\d+)&quot;&gt;.*?&lt;/EnteteSoapRAMQ&gt;).
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.RegExNAM">
<summary>
  Recherche une chaîne localisée semblable à ^([a-zA-Z]{3}[a-zA-Z*]{1}) ?(\d{4}) ?(\d{2})([zmZM0-9]{1})(\d{1})$.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.RegexUnitTach">
<summary>
  Recherche une chaîne localisée semblable à ^[A-Z]{3}([A-Z]{1}|\d{1,2})$.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.RegexUrlServrAppInfra2011">
<summary>
  Recherche une chaîne localisée semblable à ^https?://(nlb-(fonct|integ|acptn|forma|parte|prdev|prod|urg)-app4(.ramq.gov)?)/.*$.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.SeparateurChamp">
<summary>
  Recherche une chaîne localisée semblable à ,.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.SeparateurLigne">
<summary>
  Recherche une chaîne localisée semblable à ~.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.SeparRpertDefau">
<summary>
  Recherche une chaîne localisée semblable à /.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.SeparRpertWin">
<summary>
  Recherche une chaîne localisée semblable à \.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ServrSMTPInval">
<summary>
  Recherche une chaîne localisée semblable à Le nom du serveur SMTP {0} pourrait être invalide ou {1}..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.SourceTrace">
<summary>
  Recherche une chaîne localisée semblable à SourceTraceRAMQ2.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrChiffreCar">
<summary>
  Recherche une chaîne localisée semblable à R M H U S G P.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrConvDispensateur">
<summary>
  Recherche une chaîne localisée semblable à 7 2 9 4 8 1 0 3 5 6 5 9 4 7 6 8 1 0 3 2 9 4 3 6 1 0 2 5 7 8 1 7 5 2 0 9 4 8 6 3 8 5 1 0 3 2 9 6 4 7.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrConvIndividu">
<summary>
  Recherche une chaîne localisée semblable à 7 2 9 4 8 1 0 3 5 6 5 9 4 7 6 8 1 0 3 2 9 4 3 6 1 0 2 5 7 8 1 7 5 2 0 9 4 8 6 3 8 5 1 0 3 2 9 6 4 7 7 2 9 4 8 1 0 3 5 6 5 9 4 7 6 8 1 0 3 2 9 4 3 6 1 0 2 5 7 8 1 7 5 2 0 9 4 8 6 3.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrConvPharmacie">
<summary>
  Recherche une chaîne localisée semblable à 6 5 1 7 3 8 9 0 4 2 7 6 9 8 2 0 4 3 5 1 5 4 6 2 1 7 3 8 9 0 4 0 3 9 6 2 8 1 7 5 3 2 5 4 8 1 7 9 0 6.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrLettreNAM">
<summary>
  Recherche une chaîne localisée semblable à A B C D E F G H I J K L M N O P Q R S T U V W X Y Z *.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrLettreNAMCorr">
<summary>
  Recherche une chaîne localisée semblable à E G M P I R U Z X V A C D H N Y S W F B J L Q T O K *.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrUpnUtil">
<summary>
  Recherche une chaîne localisée semblable à {0}@{1}.ramq.gov.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrUpnUtilGenrq">
<summary>
  Recherche une chaîne localisée semblable à EDL{0}_{1}@{2}.ramq.gov.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrUpnUtilGenrqInvite">
<summary>
  Recherche une chaîne localisée semblable à EDL{0}_Guest_{1}@{2}.ramq.gov.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrUpnUtilGenrqNtrnt">
<summary>
  Recherche une chaîne localisée semblable à EDL{0}_Int_{1}@{2}.ramq.gov.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.StrUpnUtilGenrqXtrnt">
<summary>
  Recherche une chaîne localisée semblable à EDL{0}_Ext_{1}@{2}.ramq.gov.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.TypeClasseErreurInvalide">
<summary>
  Recherche une chaîne localisée semblable à La classe d&apos;erreur &apos;{0}&apos; provenant de l&apos;assembly &apos;{1}&apos; n&apos;hérite pas de l&apos;interface &apos;{2}&apos; de l&apos;assembly &apos;{3}&apos;..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.TypeSimple">
<summary>
  Recherche une chaîne localisée semblable à Cette surcharge de méthode n&apos;accepte que les types simple (String, Boolean, Char, Date, Byte, Short, Integer, Long, Single, Double, Decimal)..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.UnitTachInval">
<summary>
  Recherche une chaîne localisée semblable à L&apos;unité de tâche &apos;{0}&apos; est invalide..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ValIdAuthnServWCFDefaut">
<summary>
  Recherche une chaîne localisée semblable à DSIISIntgrtd_Prod@ADPROD.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ValModeExecDefaut">
<summary>
  Recherche une chaîne localisée semblable à Poste.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ValPropDefau">
<summary>
  Recherche une chaîne localisée semblable à ?.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ValZoneExecDefaut">
<summary>
  Recherche une chaîne localisée semblable à Trait.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.VariableInexistante">
<summary>
  Recherche une chaîne localisée semblable à La variable est inexistante..
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.VarReqIdentEnteteHTTP">
<summary>
  Recherche une chaîne localisée semblable à X-RAMQ-Nom-Ident.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.VarReqServr">
<summary>
  Recherche une chaîne localisée semblable à HTTP_SOAPACTION.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.VarTokenUtil">
<summary>
  Recherche une chaîne localisée semblable à RAMQ_COM_TokenUtil.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ZoneExecNtrnt">
<summary>
  Recherche une chaîne localisée semblable à PrsenNtrnt.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ZoneExecSPNtrnt">
<summary>
  Recherche une chaîne localisée semblable à SharepointNtrnt.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ZoneExecSPXtrnt">
<summary>
  Recherche une chaîne localisée semblable à SharepointXtrnt.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ZoneExecTrait">
<summary>
  Recherche une chaîne localisée semblable à Trait.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ZoneExecTraitVB6">
<summary>
  Recherche une chaîne localisée semblable à TraitVB6.
</summary>
</member>
<member name="P:RAMQ.My.Resources.Resources.ZoneExecXtrnt">
<summary>
  Recherche une chaîne localisée semblable à PrsenXtrnt.
</summary>
</member>
<member name="T:RAMQ.Racine">
 <summary> 
     Définition de la classe qui permet de retourner l'espace de nom
     principal des modules communs.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Racine.EspaceNom">
 <summary>
     Propriété qui retourne l'espace de nom principal des modules communs.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Racine.vb" region="EspaceNom" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Racine.cs" region="EspaceNom" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Registre.IRegistre">
 <summary> 
     Définition de l'interface permettant de gérer les registres.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Registre.IRegistre.ObtenirValeur(System.String,System.String)">
 <summary>
     Cette méthode permet d'obtenir la valeur d'une variable
     dans une clé de registre.
 </summary>
 <param name="_strCle">Clé de registre.</param>
 <param name="_strVar">Nom de la variable.</param>
 <returns>Valeur de la variable.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Registre.vb" region="ObtenirValeur" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Registre.cs" region="ObtenirValeur" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Registre.Registre">
 <summary> 
     Définition de la classe permettant de gérer les registres.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Registre.Registre.ObtenirValeur(System.String,System.String)">
 <summary>
     Cette méthode permet d'obtenir la valeur d'une variable
     dans une clé de registre.
 </summary>
 <param name="_strCle">Clé de registre.</param>
 <param name="_strVar">Nom de la variable.</param>
 <returns>Valeur de la variable.</returns>
 <exception cref="T:System.ApplicationException">Clé de registre inexistante.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Registre.vb" region="ObtenirValeur" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Registre.cs" region="ObtenirValeur" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Authentification.Basic.Constantes">
 <summary>
 ///////////////////////////////////////////////////////////////////////////////////
 /// Auteur : Marc-Donald Gagné 
 /// Date   : 2011-12-12
 ///    Définition des constantes pour la composante UIK2_GestAuthn_cpo
 ///
 ///////////////////////////////////////////////////////////////////////////////////
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.Base16">
 <summary>
 Valeur pour les conversions en base 16.
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.MasqueUsagInt">
 <summary>
 Valeur de la variable AppSetting du masque des usagers internes
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.DateDebutExpiration">
 <summary>
 Date du début de l'expiration 1 janvier 1970.
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.ValeurVrai">
 <summary>
 Constante d'une valeur Vrai
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.ValeurFaux">
 <summary>
 Constante d'une valeur Faux
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.FournisseurEncryption">
 <summary>
 Constante du fournisseur de service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.ConteneurEncryption">
 <summary>
 Constante du conteneur du service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.PROV_RSA_FULL">
 <summary>
 Constante du flag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.CALG_SHA">
 <summary>
 Constante des dwFlag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.CALG_RC2">
 <summary>
 Constante des dwFlag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.AlgorithmeHashSHA1">
 <summary>
 Constante des dwFlag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.HashSHA1">
 <summary>
 Constante des dwFlag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.AlgorithmeRC2">
 <summary>
 Constante des dwFlag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.CRYPT_MACHINE_KEYSET">
 <summary>
 Constante des dwFlag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.CRYPT_NEWKEYSET">
 <summary>
 Constante des dwFlag pour service d'encryption
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.CookieAuth">
 <summary>
 Constante pour le cookie d'authentification
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.CookieLang">
 <summary>
 Constante pour la définition de la langue dans le cookie d'authentification
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.TagUsr">
 <summary>
 Constante pour le tag utilisateur
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.TagDom">
 <summary>
 Constante pour le tag domaine
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.TagPwd">
 <summary>
 Constante pour le tag du mot de passe
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Constantes.TagLang">
 <summary>
 Constante pour le tag Langue
 </summary>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Constantes.#ctor">
 <summary>
 Constructeur privé pour rendre la classe non instanciabl
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Authentification.Basic.Cryptographie">
 <summary>
 ///////////////////////////////////////////////////////////////////////////////////
 /// Auteur : Marc-Donald Gagné 
 /// Date   : 2011-12-12
 ///    Classe qui permet de décrypter le cookie géré par le filtre ISAPI (RMQ4400A.DLL)
 ///
 ///////////////////////////////////////////////////////////////////////////////////
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptAcquireContext(System.IntPtr@,System.String@,System.String@,System.Int32,System.Int32)">
 <summary>
 API pour acquérir le contexte de la décryption ou de l'encryption
 </summary>
 <param name="_objPhProv"></param>
 <param name="_strpszContainer"></param>
 <param name="_strPszProvider"></param>
 <param name="_intProvType"></param>
 <param name="_intFlags"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptCreateHash(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr@)">
 <summary>
 API pour créer le Hash du contexte de la décryption ou de l'encryption
 </summary>
 <param name="_objProv"></param>
 <param name="_intAlgId"></param>
 <param name="_objKey"></param>
 <param name="_intFlags"></param>
 <param name="_objHash"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptHashData(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
 <summary>
 API pour encrypter le Data avec le Hash du contexte
 </summary>
 <param name="_objHash"></param>
 <param name="_bytData"></param>
 <param name="_intDataLen"></param>
 <param name="_intFlags"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptDeriveKey(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr@)">
 <summary>
 Créer la clé dérivée d.encryption ou de décryption
 </summary>
 <param name="_objProv"></param>
 <param name="_intAlgid"></param>
 <param name="_objBaseData"></param>
 <param name="_intFlags"></param>
 <param name="_objKey"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptEncrypt(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Byte[],System.Int32@,System.Int32)">
 <summary>
 API - Fonction d'encryption
 </summary>
 <param name="_objKey"></param>
 <param name="_objHash"></param>
 <param name="_intFinal"></param>
 <param name="_intFlags"></param>
 <param name="_bytData"></param>
 <param name="_intDataLen"></param>
 <param name="_intBufLen"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptDecryptStr(System.Int32,System.Int32,System.Int32,System.Int32,System.String@,System.Int32)">
 <summary>
 API - Décryption de chaîne de caractères
 </summary>
 <param name="_intHKey"></param>
 <param name="_intHHash"></param>
 <param name="_intFinal"></param>
 <param name="_intDwFlags"></param>
 <param name="_strPbData"></param>
 <param name="_intPdwDataLen"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptDecrypt(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Byte[],System.Int32@)">
 <summary>
 API - Fonction de Décryption 
 </summary>
 <param name="_objKey"></param>
 <param name="_objhHash"></param>
 <param name="_intFinal"></param>
 <param name="_intFlags"></param>
 <param name="_bytData"></param>
 <param name="_intDwDataLen"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptDestroyKey(System.IntPtr)">
 <summary>
 Destruction de la clé dérivée
 </summary>
 <param name="_objKey"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.GetLastError">
 <summary>
 Retourne l'erreur
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptDestroyHash(System.IntPtr)">
 <summary>
 Destruction du hash d'encryption dou de décryption
 </summary>
 <param name="_objHash"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.CryptReleaseContext(System.IntPtr,System.Int32)">
 <summary>
 Libère le contexte du Cryptographic Service Provider (CSP)
 </summary>
 <param name="_objProv"></param>
 <param name="_intFlags"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.DecrpAPI(System.String,System.Byte[])">
 <summary>
 Encryption d'une chaine
 </summary>
 <param name="_strCle">Clé d'encryption </param>
 <param name="_bytEncr">tableau d'une Chaine à décrypter </param>
 <returns>Chaîne de caractères décryptée</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.ConvtStrHexaAChaine(System.String@)">
 <summary>
 Converti la chaine de caracteres ASCII HEXA en chaine de caractère.
 </summary>
 <param name="_strValeur">Chaine ? convertir. </param>
 <returns>String : Chaine de caractere en format HEX.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.Cryptographie.Decrypter(System.String,System.String,System.Boolean)">
 <summary>
 Foncton de décryption qui lock l'utilisation des API (non thread safe)
 </summary>
 <param name="_strCleEncrp">Clé de décryption</param>
 <param name="_strValeur">Chaîne de caractères à décrypter</param>
 <param name="_blnDateExpir">La date est espirée (True | False) - Optionnelle et pas utilisé</param>
 <returns>Chaîne de caractères décryptée</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Authentification.Basic.FichierIni">
 <summary>
 ///////////////////////////////////////////////////////////////////////////////////
 /// Auteur : Marc-Donald Gagné 
 /// Date   : 2011-12-12
 ///    Classe de gesstion du fichier RMQ4400A.ini
 ///
 ///////////////////////////////////////////////////////////////////////////////////
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.FichierIni.Sections">
 <summary>
 Tableau de sections
 </summary>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.FichierIni.LireSectionsATraiter">
 <summary>
 Lire les sections qui vont servir à paramêtrer le traitment de la décryption, de l'authentification, etc. 
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.FichierIni.IsSection(System.String)">
 <summary>
 Recherche si c'est le début d'une section
 </summary>
 <param name="_strLine">Contenu de la ligne lu dans le fichier RAMQ4400A.ini</param>
 <returns>Retourne True si c'est une section</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.FichierIni.LireSection(System.String,System.IO.StreamReader,System.String@)">
 <summary>
 Retourne un objet section complet à partir de son nom
 </summary>
 <param name="_strNomSection">Nom de la section à retourne</param>
 <param name="_srLign">Pointeur sur le fichier RMQ4400A.ini</param>
 <param name="_strLign">Contenu de la ligne qui doit contenir le nom de la section</param>
 <returns>Objet Section relatif au nom de la section</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.FichierIni.VerifSections(System.String[])">
 <summary>
 Vérifie si c'est une section qui doit être vérifiée
 </summary>
 <param name="_strListSection">Liste de sections à vérifier</param>
 <returns>True, si la section est dans la liste à vérifier</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Authentification.Basic.Section">
 <summary>
 ///////////////////////////////////////////////////////////////////////////////////
 /// Auteur : Marc-Donald Gagné 
 /// Date   : 2011-12-12
 ///    Classe de définition d'une section
 ///
 ///////////////////////////////////////////////////////////////////////////////////
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Section.InfoSection">
 <summary>
 Information sur la section
 </summary>
</member>
<member name="P:RAMQ.Securite.Authentification.Basic.Section.strNom">
 <summary>
 Information sur le nom de la section
 </summary>
</member>
<member name="M:RAMQ.Securite.Authentification.Basic.UtilisateurRamq.AsignUtilRAMQ(System.String,System.String,System.String)">
 <summary>
 Assigne un utilisateur RAMQ.
 </summary>
 <param name="_strIdent">Identifiant de l'utilisateur.</param>
 <param name="_strDom">Domaine.</param>
 <param name="_strMotps">Mot de passe.</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Erreur.ExceptionRolesInvalides.RolesInvalides">
 <summary>
 Liste des rôles invalides
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Erreur.ExceptionRolesInvalides.CodeServ">
 <summary>
 Code de service demandé
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Erreur.ExceptionRolesInvalides.#ctor(System.String)">
 <summary>
 Constructeur
 </summary>
 <param name="_strMsg">Message de l'exception</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Erreur.ExceptionRolesInvalides.Message">
 <summary>
 Message de l'exception.
 Le code de service ainsi que la liste des 
 rôles invalides seront inclus dans le 
 message.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.EnveloppeParamEntre">
 <summary>
 Classe enveloppe de paramètre d'entrée.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.EnveloppeParamEntre.JsonParams">
 <summary>
 Obtient ou défini les paramètres JSON.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.EnveloppeParamEntre.Signature">
 <summary>
 Obtient ou défini la signature.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.UID">
 <summary>
 Obtient ou défini l'identifiant unique.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.TimeStamp">
 <summary>
 Obtient ou défini l'horodatage.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.UrlRef">
 <summary>
 Obtient ou défini l'URL référenceur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.NomUtil">
 <summary>
 Obtient ou défini le nom d'utilisateur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.NomFamille">
 <summary>
 Obtient ou défini le nom de famille.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.Prenom">
 <summary>
 Obtient ou défini le prénom.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.IdTrx">
 <summary>
 Obtient ou défini l'identifiant de transaction.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.CodeServ">
 <summary>
 Obtient ou défini le code de service.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.RoleAuthn">
 <summary>
 Obtient ou défini le rôle authentifié.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.#ctor">
 <summary>
 Authentification anonyme.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Authentification.Fournisseurs.FormBased.AuthnIndiv.ParamEntre.#ctor(System.String)">
 <summary>
 Authentification avec utilisateur.
 </summary>
 <param name="_strNomUtil">Nom d'utilisateur.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Certificat.CertificatX509">
 <summary> 
     Définition de la classe permettant de gérer les certificats X509.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Certificat.CertificatX509.ObtenirCertParNoSerie(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
 <summary>
     Cette méthode permet d'obtenir un certificat à partir de son no de série.
 </summary>
 <param name="_enuNomStore">Nom du magasin de certificats à utiliser.</param>
 <param name="_enuEmplaStore">Emplacement du magasin de certificats.</param>
 <param name="_strNoSerieCert">Numéro de série du certificat à rechercher.</param>
 <exception cref="T:System.ApplicationException">Erreur lors de l'ouverture du store de certificat, pour le nom '{0}' et l'emplacement '{1}'. Détails : '{2}'.</exception>
 <exception cref="T:System.ApplicationException">Erreur en tentant de retrouver le certificat '{0}' avec le store '{1}' et l'emplacement '{2}'. Détails : '{3}'.</exception>
 <exception cref="T:System.ApplicationException">Le certificat '{0}' n'a pas été retrouvé dans le store '{1}' et l'emplacement '{2}'.</exception>
 <returns>Le certificat recherché.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.vb" region="ObtenirCertParNoSerie"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.cs" region="ObtenirCertParNoSerie"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Certificat.CertificatX509.ObtenirCertParNom(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
 <summary>
     Cette méthode permet d'obtenir un certificat à partir de son nom.
 </summary>
 <param name="_enuNomStore">Nom du magasin de certificats à utiliser.</param>
 <param name="_enuEmplaStore">Emplacement du magasin de certificats.</param>
 <param name="_strNomCert">Nom du certificat à rechercher.</param>
 <exception cref="T:System.ApplicationException">Erreur lors de l'ouverture du store de certificat, pour le nom '{0}' et l'emplacement '{1}'. Détails : '{2}'.</exception>
 <exception cref="T:System.ApplicationException">Erreur en tentant de retrouver le certificat '{0}' avec le store '{1}' et l'emplacement '{2}'. Détails : '{3}'.</exception>
 <exception cref="T:System.ApplicationException">Le certificat '{0}' n'a pas été retrouvé dans le store '{1}' et l'emplacement '{2}'.</exception>
 <returns>Le certificat recherché.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.vb" region="ObtenirCertParNom"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.cs" region="ObtenirCertParNom"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Certificat.CertificatX509.ObtenirCert(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String,System.Security.Cryptography.X509Certificates.X509FindType)">
 <summary>
     Cette méthode permet de rechercher un certificat.
 </summary>
 <param name="_enuNomStore">Nom du magasin de certificats à utiliser.</param>
 <param name="_enuEmplaStore">Emplacement du magasin de certificats.</param>
 <param name="_strValRechr">Valeur à rechercher.</param>
 <param name="_enuTypRechr">Type de recherche à effectuer.</param>
 <exception cref="T:System.ApplicationException">Erreur lors de l'ouverture du store de certificat, pour le nom '{0}' et l'emplacement '{1}'. Détails : '{2}'.</exception>
 <exception cref="T:System.ApplicationException">Erreur en tentant de retrouver le certificat '{0}' avec le store '{1}' et l'emplacement '{2}'. Détails : '{3}'.</exception>
 <exception cref="T:System.ApplicationException">Le certificat '{0}' n'a pas été retrouvé dans le store '{1}' et l'emplacement '{2}'.</exception>
 <returns>Le certificat recherché.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Certificat.ICertificatX509">
 <summary> 
     Définition de l'interface permettant de gérer les certificats X509.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Certificat.ICertificatX509.ObtenirCertParNoSerie(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
 <summary>
     Cette méthode permet d'obtenir un certificat à partir de son no de série.
 </summary>
 <param name="_enuNomStore">Nom du magasin de certificats à utiliser.</param>
 <param name="_enuEmplaStore">Emplacement du magasin de certificats.</param>
 <param name="_strNoSerieCert">Numéro de série du certificat à rechercher.</param>
 <returns>Le certificat recherché.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.vb" region="ObtenirCertParNoSerie"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.cs" region="ObtenirCertParNoSerie"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Certificat.ICertificatX509.ObtenirCertParNom(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
 <summary>
     Cette méthode permet d'obtenir un certificat à partir de son nom.
 </summary>
 <param name="_enuNomStore">Nom du magasin de certificats à utiliser.</param>
 <param name="_enuEmplaStore">Emplacement du magasin de certificats.</param>
 <param name="_strNomCert">Nom du certificat à rechercher.</param>
 <returns>Le certificat recherché.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.vb" region="ObtenirCertParNom"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\CertificatX509.cs" region="ObtenirCertParNom"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Connexion">
 <summary> 
     Définition de la classe permettant d'obtenir les informations de connexion.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Connexion.ObtenirIdUtilMotDePasse(System.String)">
 <summary>
     Cette méthode permet d'obtenir les informations de connexion à partir d'un
     fichier UDL.
 </summary>
 <param name="_strNomFichUdl">Nom du fichier UDL.</param>
 <returns>Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Securite.IInfoConxn" />.</returns>
 <exception cref="T:System.IO.FileNotFoundException">Le fichier UDL est inexistant.</exception>
 <exception cref="T:System.ApplicationException">Le fichier UDL est invalide.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Connexion.vb" region="ObtenirIdUtilMotDePasse"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Connexion.cs" region="ObtenirIdUtilMotDePasse"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Connexion.ObtenirValeur(System.Collections.Generic.IEnumerable{System.String},System.String)">
 <summary>
     Cette méthode permet d'obtenir la valeur d'une clé dans une collection.
 </summary>
 <param name="_colctParam">Collection de clé et valeur.</param>
 <param name="_strCle">Clé à rechercher.</param>
 <returns>Valeur de clé recherchée.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Encoding.AntiXssEncoder">
 <summary> 
     Définition de la classe qui permet d'encoder par défaut de façon sécuritaire.
     Cette encodeur est spécifique au Framework .NET 4.0.
 </summary>
 <remarks>
  Afin d'utiliser cette classe, nous devons ajouter une ligne dans le web.config :<br/>
  &lt;system.web&gt;<br/>
     &lt;httpRuntime encoderType=&quot;RAMQ.Securite.Encoding.AntiXssEncoder, RAMQ.COM.COD1_V4OutilBase_cpo&quot;/&gt;<br/>
  &lt;/system.web&gt;<br/><br/>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)">
 <summary>
     Cette méthode permet d'encoder du HTML.
 </summary>
 <param name="_strVal">HTML à encoder.</param>
 <param name="_objTextWriter">Objet permettant l'écriture.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)">
 <summary>
     Cette méthode permet d'encoder des attributs HTML.
 </summary>
 <param name="_strVal">Attribut HTML à encoder.</param>
 <param name="_objTextWriter">Objet permettant l'écriture.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXssEncoder.HtmlDecode(System.String,System.IO.TextWriter)">
 <summary>
     Cette méthode permet de decoder du HTML.
 </summary>
 <param name="_strVal">HTML à decoder.</param>
 <param name="_objTextWriter">Objet permettant l'écriture.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)">
 <summary>
     Cette méthode permet d'encoder un url.
 </summary>
 <param name="_byt"></param>
 <param name="_intOffset"></param>
 <param name="_intCount"></param>
 <returns>Url encodé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXssEncoder.UrlPathEncode(System.String)">
 <summary>
     Cette méthode permet d'encoder le 'path' d'un url.
 </summary>
 <param name="_strVal">Valeur à encoder.</param>
 <returns>Valeur encodé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXssEncoder.IsUrlSafeChar(System.Char)">
 <summary>
     Cette méthode vérifie si le caractère est sécuritaire.
 </summary>
 <param name="_chrObj">Caractère à vérifier.</param>
 <returns>Indique si le caractère est sécuritaire.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXssEncoder.IntToHex(System.Int32)">
 <summary>
     Cette méthode permet de convertir un entier en hexadécimal.
 </summary>
 <param name="_intN">Entier à convertir.</param>
 <returns>Entier en Hexadécimal.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Encoding.Brouiller">
 <summary> 
     Définition de la classe permettant de brouiller des numéros.
 </summary>
 <remarks>
  Auteur : Simon Labrecque <br/>
  Date   : 2011-05-10
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.Brouiller.BrouillerNoDispensateur(System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro de dispensateur.
     Un numéro de dispensateur est composé de 5 chiffres.
 </summary>
 <param name="_strNoDispReel">Le numéro a brouiller.</param>
 <returns>Le numéro brouillé.</returns>
 <exception cref="T:System.ArgumentNullException">Argument NULL ou vide.</exception>
 <exception cref="T:System.ArgumentException">Format incorrect de l'argument, différent de 5 chiffres.</exception>
 <exception cref="T:System.ApplicationException">Exception lors du brouillage.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNoDispensateur" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNoDispensateur" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.Brouiller.BrouillerNoPharmacie(System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro de pharmacie.
     Un numéro de pharmacie est composé de 5 chiffres.
 </summary>
 <param name="_strNoPharmacieReel">Le numéro a brouiller.</param>
 <returns>Le numéro brouillé.</returns>
 <exception cref="T:System.ArgumentNullException">Argument NULL ou vide.</exception>
 <exception cref="T:System.ArgumentException">Format incorrect de l'argument, différent de 5 chiffres.</exception>
 <exception cref="T:System.ApplicationException">Exception lors du brouillage.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNoPharmacie" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNoPharmacie" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.Brouiller.BrouillerNoIndividu(System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro d'individu.
     Un numéro d'individu est composé de 9 chiffres.
 </summary>
 <param name="_strNoIndivReel">Le numéro a brouiller.</param>
 <returns>Le numéro brouillé.</returns>
 <exception cref="T:System.ArgumentNullException">Argument NULL ou vide.</exception>
 <exception cref="T:System.ArgumentException">Format incorrect de l'argument, différent de 9 chiffres.</exception>
 <exception cref="T:System.ApplicationException">Exception lors du brouillage.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNoIndividu" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNoIndividu" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.Brouiller.BrouillerNAM(System.String,System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro d'assurance maladie (NAM).
 </summary>
 <param name="_strNAMReel">Le NAM a brouiller.</param>
 <param name="_strBaseConversion">La base utilisée dans la conversion (entre 10 et 17).</param>
 <returns>Le NAM brouillé.</returns>
 <exception cref="T:System.ArgumentNullException">NAM NULL ou vide.</exception>
 <exception cref="T:System.ArgumentException">Format incorrect du NAM.</exception>
 <exception cref="T:System.ApplicationException">Exception lors du brouillage.</exception>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNAM"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNAM"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.Brouiller.BrouillerChiffre(System.String,System.String)">
 <summary>
     Cette méthode brouille des chiffres selon des bases. La valeur brouillée est retournée dans strChiffreBrouille.
 </summary>
 <param name="_strChiffreReel">Chiffre reel à brouiller.</param>
 <param name="_strBaseConversion">Base de la conversion du chiffre.</param>
 <return>Chiffre brouillé retourné.</return>
 <returns>La string contenant le Chiffre brouillé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.Brouiller.BrouillerNumero(System.String,System.String[])">
 <summary>
     Cette méthode permet de brouiller un numéro. Utilisée par certaines fonctions publiques.
 </summary>
 <param name="_strNoReel">Numéro a brouiller.</param>
 <param name="_strTblConv">Table de conversion.</param>
 <return>Numéro brouillé.</return>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Encoding.IBrouiller">
 <summary> 
     Définition de l'interface permettant de brouiller des numéros.
 </summary>
 <remarks>
  Auteur : Simon Labrecque <br/>
  Date   : 2011-05-10
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IBrouiller.BrouillerNoDispensateur(System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro de dispensateur
     Un numéro de dispensateur est composé de 5 chiffres.
 </summary>
 <param name="_strNoDispReel">Le numéro a brouiller.</param>
 <returns>Le numéro brouillé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNoDispensateur" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNoDispensateur" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IBrouiller.BrouillerNoPharmacie(System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro de pharmacie
     Un numéro de pharmacie est composé de 5 chiffres.
 </summary>
 <param name="_strNoPharmacieReel">Le numéro a brouiller.</param>
 <returns>Le numéro brouillé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNoPharmacie" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNoPharmacie" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IBrouiller.BrouillerNoIndividu(System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro d'individu
     Un numéro d'individu est composé de 9 chiffres.
 </summary>
 <param name="_strNoIndivReel">Le numéro a brouiller.</param>
 <returns>Le numéro brouillé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNoIndividu" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNoIndividu" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IBrouiller.BrouillerNAM(System.String,System.String)">
 <summary>
     Cette méthode permet de brouiller un numéro d'assurance maladie (NAM).
 </summary>
 <param name="_strNAMReel">Le NAM a brouiller.</param>
 <param name="_strBaseConversion">La base utilisée dans la conversion (entre 10 et 17).</param>
 <returns>Le NAM brouillé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.vb" region="BrouillerNAM" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Brouiller.cs" region="BrouillerNAM" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Encoding.AntiXss">
 <summary> 
     Définition de la classe effectuant de l'encodage de chaînes de caractères
     afin d'offrir une protection contre une attaque XSS (Cross-Site Scripting).
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.ObtenirHtmlScurs(System.String)">
 <summary>
     Cette méthode permet de retourner une version sécurisée d'une page HTML soit par 
     désinfection ou suppression de tous les scripts malveillants.
 </summary>
 <param name="_strHtml">Chaîne de caractères contenant une page HTML.</param>
 <returns>Version sécurisée de la page HTML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="ObtenirHtmlScurs"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="ObtenirHtmlScurs"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.ObtenirFragmHtmlScurs(System.String)">
 <summary>
     Cette méthode permet de retourner une version sécurisée d'un fragment HTML soit par 
     désinfection ou suppression de tous les scripts malveillants.
 </summary>
 <param name="_strHtml">Chaîne de caractères contenant une page HTML.</param>
 <returns>Version sécurisée du fragment HTML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="ObtenirFragmHtmlScurs" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="ObtenirFragmHtmlScurs" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderCss(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une feuille de style.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderCss"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderCss"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderAttriHtml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un attribut HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderAttriHtml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderAttriHtml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderHtml(System.String)">
 <summary>
     Cette méthode qui permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une page HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderHtml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderHtml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderHtml(System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     avec les noms des entités HTML 4.01 pour utilisation dans une page HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_blnNomEnt">Indique si l'on doit encoder avec les entités du HTML 4.01.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderHtmlBoolean"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderHtmlBoolean"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderLdap(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une requête LDAP.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderLdap" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderLdap" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderJavaScript(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code Javascript.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderJavaScript" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderJavaScript" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderJavaScript(System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code Javascript.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_blnEmtrGuil">Indique si l'on doit retourner des guillemets.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderJavaScriptBoolean" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderJavaScriptBoolean" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderUrl(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderUrl" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderUrl" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderUrl(System.String,System.Int32)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_intCodPage">Code de page de la chaîne de caractères.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderUrlInteger" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderUrlInteger" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderUrl(System.String,System.Text.Encoding)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_objEncoding">Type d'encodage à utiliser.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderUrlEncoding" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderUrlEncoding" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderFormHtml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderFormHtml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderFormHtml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderFormHtml(System.String,System.Int32)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_intCodPage">Code de page de la chaîne de caractères.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderFormHtmlInteger" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderFormHtmlInteger" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderFormHtml(System.String,System.Text.Encoding)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_objEncoding">Type d'encodage à utiliser.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderFormHtmlEncoding" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderFormHtmlEncoding" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderVisualBasicScript(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code VB script.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderVisualBasicScript"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderVisualBasicScript"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderAttriXml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un attribut XML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderAttriXml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderAttriXml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.AntiXss.EncoderXml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un fichier XML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderXml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderXml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Encoding.IAntiXss">
 <summary> 
     Définition de l'interface effectuant de l'encodage de chaînes de caractères
     afin d'offrir une protection contre une attaque XSS (Cross-Site Scripting).
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.ObtenirHtmlScurs(System.String)">
 <summary>
     Cette méthode permet de retourner une version sécurisée d'une page HTML soit par 
     désinfection ou suppression de tous les scripts malveillants.
 </summary>
 <param name="_strHtml">Chaîne de caractères contenant une page HTML.</param>
 <returns>Version sécurisée de la page HTML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="ObtenirHtmlScurs"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="ObtenirHtmlScurs"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.ObtenirFragmHtmlScurs(System.String)">
 <summary>
     Cette méthode permet de retourner une version sécurisée d'un fragment HTML soit par 
     désinfection ou suppression de tous les scripts malveillants.
 </summary>
 <param name="_strHtml">Chaîne de caractères contenant une page HTML.</param>
 <returns>Version sécurisée du fragment HTML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="ObtenirFragmHtmlScurs" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="ObtenirFragmHtmlScurs" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderCss(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une feuille de style.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderCss"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderCss"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderAttriHtml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un attribut HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderAttriHtml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderAttriHtml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderHtml(System.String)">
 <summary>
     Cette méthode qui permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une page HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderHtml"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderHtml"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderHtml(System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     avec les noms des entités HTML 4.01 pour utilisation dans une page HTML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_blnNomEnt">Indique si l'on doit encoder avec les entités du HTML 4.01.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderHtmlBoolean" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderHtmlBoolean" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderLdap(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans une requête LDAP.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderLdap" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderLdap" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderJavaScript(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code Javascript.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderJavaScript" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderJavaScript" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderJavaScript(System.String,System.Boolean)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code Javascript.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_blnEmtrGuil">Indique si l'on doit retourner des guillemets.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderJavaScriptBoolean" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderJavaScriptBoolean" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderUrl(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderUrl" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderUrl" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderUrl(System.String,System.Int32)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_intCodPage">Code de page de la chaîne de caractères.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderUrlInteger" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderUrlInteger" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderUrl(System.String,System.Text.Encoding)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un URL.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_objEncoding">Type d'encodage à utiliser.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderUrlEncoding" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderUrlEncoding" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderFormHtml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderFormHtml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderFormHtml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderFormHtml(System.String,System.Int32)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_intCodPage">Code de page de la chaîne de caractères.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderFormHtmlInteger" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderFormHtmlInteger" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderFormHtml(System.String,System.Text.Encoding)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans le "POST" d'un formulaire HTML.  Cette méthode
     encode selon le type "MIME" « application/x-www-form-urlencoded » de la
     spécification du W3C.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <param name="_objEncoding">Type d'encodage à utiliser.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderFormHtmlEncoding" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderFormHtmlEncoding" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderVisualBasicScript(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans du code VB script.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderVisualBasicScript"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderVisualBasicScript"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderAttriXml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un attribut XML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderAttriXml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderAttriXml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IAntiXss.EncoderXml(System.String)">
 <summary>
     Cette méthode permet d'effectuer l'encodage sécurisé d'une chaîne de caractères
     qui sera utilisée dans un fichier XML.
 </summary>
 <param name="_strVal">Chaîne de caractères à encoder.</param>
 <returns>Version sécurisée de la chaîne de caractères.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.vb" region="EncoderXml" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\AntiXss.cs" region="EncoderXml" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Encoding.IQueryStringSecuritaire">
 <summary> 
     Définition de l'interface permettant de créer et lire un QueryString encrypté.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Securite.Encoding.IQueryStringSecuritaire.UrlRequete">
 <summary>
     Propriété qui retourne l'Url de la requête HTTP.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Encoding.IQueryStringSecuritaire.ChaineEncrypte">
 <summary>
     Propriété qui retourne la chaine des champs du querystring
     sous forme parm=valeurEncrypté
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Encoding.IQueryStringSecuritaire.DelaiExpiration">
 <summary>
     Propriété qui retourne le temps limite quant à la durée de vie des clés.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IQueryStringSecuritaire.UrlSansQueryString">
 <summary>
      Cette méthode permet de retourner l'url sans le QueryString.
 </summary>
 <returns>Url sans la QueryString encodé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="UrlSansQueryString"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="UrlSansQueryString"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IQueryStringSecuritaire.UrlAvecQueryString(System.String)">
 <summary>
      Cette méthode permet de retourner l'url avec le QueryString Encodé à partir de 
      l'URL de base.
 </summary>
 <param name="_strUrl">Url auquel on ajoute le querystring encodé.</param>
 <returns>Url avec la QueryString encodé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="UrlAvecQueryString"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="UrlAvecQueryString"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IQueryStringSecuritaire.CleEncrypte(System.String)">
 <summary>
     Cette méthode permet d'encrypter une chaine de caractère.
 </summary>
 <param name="_strQueryString">Chaine de caractère du QueryString.</param>
 <returns>Chaine encryptée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="CleEncrypte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="CleEncrypte"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.IQueryStringSecuritaire.CleDecrypte(System.String)">
 <summary>
     Cette méthode permet de décrypter une chaine encrypté.
 </summary>
 <param name="_strCle">Chaine encryptée.</param>
 <returns>Chaine décryptée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="CleDecrypte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="CleDecrypte"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Encoding.QueryStringSecuritaire">
 <summary> 
     Définition de la classe permettant de créer et lire un QueryString encrypté.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description: <br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.#ctor(System.String)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_strNomCertChifm">Nom du certificat de chiffrement de données.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.#ctor(System.Web.HttpRequestBase)">
 <summary>
     Constructeur à partir d'une requête HTTP.
 </summary>
 <param name="_objHttpReqBase">La requête HTTP.</param>
 <exception cref="T:System.ApplicationException">Le délai est expiré.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.#ctor(System.String,System.Web.HttpRequestBase)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_strNomCertChifm">Nom du certificat de chiffrement de données.</param>
 <param name="_objHttpReqBase">La requête HTTP.</param>
 <exception cref="T:System.ApplicationException">Le délai est expiré.</exception>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Encoding.QueryStringSecuritaire.UrlRequete">
 <summary>
     Propriété qui retourne l'Url de la requête HTTP.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Encoding.QueryStringSecuritaire.DelaiExpiration">
 <summary>
     Propriété qui retourne le temps limite quant à la durée de vie des clés.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Encoding.QueryStringSecuritaire.ChaineEncrypte">
 <summary>
     Propriété qui retourne la chaine des champs du querystring
     sous forme parm=valeurEncrypté
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.UrlSansQueryString">
 <summary>
      Cette méthode permet de retourner l'url sans le QueryString.
 </summary>
 <returns>Url sans la QueryString encodé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="UrlSansQueryString"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="UrlSansQueryString"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.UrlAvecQueryString(System.String)">
 <summary>
      Cette méthode permet de retourner l'url avec le QueryString Encodé à partir de 
      l'URL de base.
 </summary>
 <param name="_strUrl">Url auquel on ajoute le querystring encodé.</param>
 <returns>Url avec la QueryString encodé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="UrlAvecQueryString"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="UrlAvecQueryString"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.CleEncrypte(System.String)">
 <summary>
     Cette méthode permet d'encrypter une chaine de caractère.
 </summary>
 <param name="_strQueryString">Chaine de caractère du QueryString.</param>
 <returns>Chaine encryptée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="CleEncrypte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="CleEncrypte"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.CleDecrypte(System.String)">
 <summary>
     Cette méthode permet de décrypter une chaine encrypté.
 </summary>
 <param name="_strCle">Chaine encryptée.</param>
 <returns>Chaine décryptée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.vb" region="CleDecrypte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\QueryStringSecuritaire.cs" region="CleDecrypte"></code>
 </example>
 <exception cref="T:System.Security.Cryptography.CryptographicException">La clé d'encryption de décryption sont différentes.</exception>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.ObtenirCleEncrp">
 <summary>
     Cette méthode permet d'obtenir la clé privée pour les opérations de chiffrement.
 </summary>
 <returns>La clé d'encryption.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.ObtenirCleEncrpInterne">
 <summary>
     Permet d'obtenir la clé privée interne pour les opérations de chiffrement.
 </summary>
 <returns>La clé d'encryption.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.ObtenirCleEncrpCertificat(System.String)">
 <summary>
     Cette méthode permet d'obtenir la clé privée du certificat en utilisation pour les opérations de chiffrement.
 </summary>
 <param name="_strNomCertChifm">Nom du certificat de chiffrement de données.</param>
 <returns>La clé d'encryption.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.DeserialiseCle(System.String)">
 <summary>
     Cette méthode permet de désérialisé un ensemble de clé.
 </summary>
 <param name="_strCle">Clé à désérialiser.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.SerialiseCle">
 <summary>
     Cette méthode permet de sérialiser un ensemble de clé.
 </summary>
 <returns>Clé sérialisé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Encoding.QueryStringSecuritaire.EnvironnementDevl(System.String,System.String)">
 <summary>
     Méthode qui permet de déterminer si l'exécution se fait sur un poste de développement.
 </summary>
 <param name="_strEnvir">Environnement.</param>
 <param name="_strNomServr">Nom du poste ou serveur.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.InfoConxn">
 <summary> 
     Définition de la classe représentant l'information de connexion.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Securite.InfoConxn.IdUtil">
 <summary>
     Propriété qui retourne l'identifiant de l'utilisateur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.InfoConxn.MotDePasse">
 <summary>
     Propriété qui retourne le mot de passe.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.InfoConxn.SrceDonne">
 <summary>
     Propriété qui retourne la source de données.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.IInfoConxn">
 <summary> 
     Définition de l'interface représentant l'information de connexion.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Securite.IInfoConxn.IdUtil">
 <summary>
     Propriété qui retourne l'identifiant de l'utilisateur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.IInfoConxn.MotDePasse">
 <summary>
     Propriété qui retourne le mot de passe.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.IInfoConxn.SrceDonne">
 <summary>
     Propriété qui retourne la source de données.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.IConnexion">
 <summary> 
     Définition de l'interface permettant d'obtenir les informations de connexion.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.IConnexion.ObtenirIdUtilMotDePasse(System.String)">
 <summary>
     Cette méthode permet d'obtenir les informations de connexion à partir d'un
     fichier UDL.
 </summary>
 <param name="_strNomFichUdl">Nom du fichier UDL.</param>
 <returns>Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Securite.IInfoConxn" />.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Connexion.vb" region="ObtenirIdUtilMotDePasse"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Connexion.cs" region="ObtenirIdUtilMotDePasse"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> qui offre différents services liés à la sécurité.
 </summary>
 <remarks>
 <para>
 Voici une énumération des services offerts par les différentes classes définies dans cet espace de nom :
 <ul>
 <li>Obtention des chaînes de connexion</li>
 <li>Utiitaire de validation</li>
 <li>Utilitaires nécessaires à l'authentification (<see cref="N:RAMQ.Securite.Authentification"/>)</li>
 <li>Obtention des certificats (<see cref="N:RAMQ.Securite.Certificat"/>)</li>
 <li>Cryptage/décryptage et brouillage d'information (<see cref="N:RAMQ.Securite.Encoding"/>)</li>
 <li>Emprunt d'identité et informations sur les usagers (<see cref="N:RAMQ.Securite.Principal"/>)</li>
 <li>Implantation de la sécurité WCF à la RAMQ (<see cref="N:RAMQ.Securite.ServiceModel"/>)</li>
 <li>Signature de document (<see cref="N:RAMQ.Securite.Signature"/>)</li>
 <li>Sécurité applicative des applications web (<see cref="N:RAMQ.Securite.Web"/>)</li>
 </ul>
 </para>
 <para>
 Un document sur le portail de développement résume l'implantation de la sécurité à la RAMQ, vous trouverez ce document ici :
 <a href="http://infoint.prod.ramq.gov/ssd/documentsssd/zsansmetadonnees/images/infra2011_modelesecurite.vsd" target="_blank">
 http://infoint.prod.ramq.gov/ssd/documentsssd/zsansmetadonnees/images/infra2011_modelesecurite.vsd</a>.
 </para>
 <h3>Avant d'entreprendre le développement d'une nouvelle application</h3>
 <para>
 L'implantation d'un modèle de sécurité au sein d'une nouvelle application est une étape très importante. À la RAMQ, certaines manières de 
 faire sont déjà formalisées, consulter votre conseiller organique ou au besoin le SSD avant de vous lancer dans cet exercice.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Securite.Principal.Identite">
 <summary> 
 Définition de la classe permettant de faire de la gestion sur les identités
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis <br/>
  Date   : 2012-02-16
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.ObtnIdentUtil(System.Web.HttpContextBase)">
 <summary>
 Fonction permettant d'obtenir l'identifiant de l'utilisateur appelant
 </summary>
 <param name="_objContx">Contexte Web Base </param>
 <returns>Le nom de l'identifiant courant sous le format "DOMAINE\Utilisateur"</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.vb" region="ObtnIdentUtilContextBase"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.cs" region="ObtnIdentUtilContextBase"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.ObtnUtil(System.Web.HttpContextBase)">
 <summary>        
 Obtenir l'identifiant de l'utilisateur appelant.
 Fonctionne aussi en mode Form Based Authentication.
 </summary>
 <param name="_objContx">Contexte Web courant</param>
 <returns>Le nom de l'identifiant courant sous le format "Utilisateur" OU
 Le numéro d'individu (lorsqu'en mode Form Based Authentication) sous le format "IndNoSeq"</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.vb" region="ObtenirUtil"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.cs" region="ObtenirUtil"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.ObtenirTypeAuthn(System.String)">
 <summary>
 Permet d'obtenir le type d'authentification de l'usager (basé sur le user dans HttpContext si existe)
 </summary>
 <param name="_strUtil">L'usager sous form de string.</param>
 <returns>Le type d'authentification relié à l'usagé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.vb" region="ObtenirTypeAuthn"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.cs" region="ObtenirTypeAuthn"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.UsagerDansGroupe(System.Web.HttpContextBase,System.String)">
 <summary>
 Cette méthode permet de vérifier si un usager fait parti d'un des rôles
 </summary>
 <param name="_objContx"><see cref="T:System.Web.HttpContextBase"/> contenant le HttpContext courant</param>
 <param name="_strGrpSecur">Groupe(s) à vérifier</param>
 <returns>Boolean si l'usager est dans le groupe</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.vb" region="UsagerDansGroupe"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.cs" region="UsagerDansGroupe"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.UsagerDansGroupe(System.Web.HttpContextBase,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Cette méthode permet de vérifier si un usager fait parti d'un des rôles
 </summary>
 <param name="_objContx"><see cref="T:System.Web.HttpContextBase"/> contenant le HttpContext courant</param>
 <param name="_colctGrpSecur"><see cref="T:System.Collections.Generic.IEnumerable`1"/> Contenant les groupes à vérifier</param>
 <returns>Boolean si l'usager est dans le groupe</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.vb" region="UsagerDansColctGroupe"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Identite.cs" region="UsagerDansColctGroupe"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.ObtnIPrincipal(System.String)">
 <summary>
 Fonction permettant de retourner un IPrincipal basé sur l'utilisateur fourni en paramètre
 </summary>
 <param name="_strUtil">Utilisateur en paramètre</param>
 <returns><see cref="T:System.Security.Principal.IPrincipal"/> contenant l'identité correspondant à l'utilisateur</returns>
 <remarks>
 À noter : pour une éxécution en unitaire [simuler un serveur], et si contexte web le AppPool doit 
 s'exécuter en tant qu'un identifiant de l'AD cible
 </remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.ObtnUpn(System.String)">
 <summary>
 Fonction permettant de retourner l'UPN d'un utilisateur passé en paramètre
 </summary>
 <param name="_strUtil">Chaine de caractère contenant le nom de l'utilisateur</param>
 <returns>UPN d'un utilisateur</returns>
 <remarks>CODE_USAGER@DOMAINE.ramq.gov <example>"0#.w|ADPROD\U0989" -> "U0989@ADPROD.ramq.gov"</example></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.ObtnIdentUtilWCF">
 <summary>
 Fonction permettant d'obtenir l'identifiant de l'utilisateur appelant d'un service WCF
 </summary>
 <returns>Le nom de l'identifiant courant sous le format "DOMAINE\Utilisateur"</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.Identite.ObtnIdentUtilSOAP(System.Web.HttpContextBase)">
 <summary>
 Une fonction permettant d'obtenir l'identifiant de l'utilisateur appelant d'un service ASMX
 </summary>
 <returns>Le nom de l'identifiant courant sous le format "DOMAINE\Utilisateur"</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Principal.ContxImpersRAMQ">
 <summary> 
     Définition de l'interface permettant de faire des impersonification. Surtout utilisé par SharePoint
 </summary>
 <remarks>
  Auteur : Simon Labrecque / Alexandre Chaussé-Paradis <br/>
  Date   : 2011-11-22
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnNouvContxPrincipal(System.Web.HttpContextBase)">
 <summary>
 Méthode pour obtenir un nouveau context d'impersonification, utilisée pour les services appelés das l'INFRA2011
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase"/> courant</param>
 <returns>Nouveau context d'impersonification</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.vb" region="ObtnNouvContxPrincipalInfraContextBase"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.cs" region="ObtnNouvContxPrincipalInfraContextBase"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnNouvContxPrincipal(System.Web.HttpContextBase,System.String)">
 <summary>
 Méthode pour obtenir un nouveau context d'impersonification
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase"/> courant</param>
 <param name="_strNomInfra">Le nom de l'infrastructure à contacter. La 
 valeur de l'infrastructure possible est "CISEL" ou "INFRA2011"</param>
 <returns>Nouveau context d'impersonification</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.vb" region="ObtnNouvContxPrincipalInfraContextBaseString"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.cs" region="ObtnNouvContxPrincipalInfraContextBaseString"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnNouvContxPrincipal(System.Web.HttpContextBase,System.String,RAMQ.Journalisation.IJournErrTech,RAMQ.Journalisation.IParamEntreeJournErrTech)">
 <summary>
 Méthode pour obtenir un nouveau context d'impersonification et Injecter les dépendances pour Mocker en
 contexte de tests unitaires.
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase"/> courant</param>
 <param name="_strNomInfra">Le nom de l'infrastructure à contacter. La 
 valeur de l'infrastructure possible est "CISEL" ou "INFRA2011"</param>
 <param name="_objJournErrTech">Mock de objJournErrTech</param>
 <param name="_objParam">Mock de objParam</param>
 <returns>Nouveau context d'impersonification</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.vb" region="ObtnNouvContxPrincipalInfraContextStringJournParam"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.cs" region="ObtnNouvContxPrincipalInfraContextStringJournParam"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.SauvegarderTokenUtilCourant(System.Web.HttpContextBase)">
 <summary>
 Permet de sauvegarder l'identité de l'utilisateur Courant dans le contexte
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase"/> courant</param>
 <remarks>
 Pour les interfaces ASP.Net pour faire des appels asynchrones
 </remarks>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.vb" region="SauvegarderTokenUtilCourantContextBase"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.cs" region="SauvegarderTokenUtilCourantContextBase"></code>
 </example>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtenirTokenUtilCourant(System.Web.HttpContextBase)">
 <summary>
 Permet d'obtenir l'identité de l'utilisateur Courant dans le contexte
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase" /> courant</param>
 <returns>L'utilisateur impersonnifié <see cref="T:System.Security.Principal.WindowsImpersonationContext"/></returns>
 <remarks></remarks>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.vb" region="ObtenirTokenUtilCourantContextBase"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ContxImpersRAMQ.cs" region="ObtenirTokenUtilCourantContextBase"></code>
 </example>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnNouvContxPrincipalInfra(System.Web.HttpContextBase,RAMQ.Enumeration.EnumNomInfra)">
 <summary>
 Méthode pour obtenir un nouveau context d'impersonification en 
 fonction du choix de l'infrastructure à contacter
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase"/> courant</param>
 <param name="_enuInfra">choix de l'infrastruture qui sera appelée</param>
 <returns>Nouveau context d'impersonification</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.JournaliserErreur(System.Exception)">
 <summary>
 Journalisation des erreurs
 </summary>
 <param name="_exErr">Exception à journaliser</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.JournaliserErreur(System.Exception,RAMQ.Enumeration.EnumCodSever)">
 <summary>
 Journalisation des erreurs
 </summary>
 <param name="_exErr">Exception à journaliser</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnNomAppliSecureStore">
 <summary>
 Permet d'obtenir le nom de l'application à interroger dans le securestore
 qui est configuré sur le poste.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnNouvImpersSecureStore">
 <summary>
 Permet d'obtenir les credentials enregistrés dans le SecureStore de Sharepoint.
 L'application du SecureStore qui sera interrogée doit être configurée dans le ramq_machine.config.
 Aussi, le compte DSMOSS_U doit être mappé dans le SecureStore pour les credentials de cette application.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnNouvImpersContx(System.Web.HttpContextBase,System.String)">
 <summary>
 Méthode partagée pour obtenir un nouveau context d'impersonification
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase" /></param>
 <param name="_strUpnUtil">UPN de l'identifiant</param>
 <returns>context d'impersonification</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnUpnIdentGenrq(System.String)">
 <summary>
 Permet d'obtenir l'UPN de l'identifiant générique qui doit être impersonnifié
 </summary>
 <param name="_strCodAppli"> Code d'application du demandeur </param>
 <returns>L'UPN de l'identifiant</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnUpnIdentGenrqInvite(System.String)">
 <summary>
 Permet d'obtenir l'UPN de l'identifiant générique Guest qui doit être impersonnifié
 </summary>
 <param name="_strCodAppli"> Code d'application du demandeur </param>
 <returns>L'UPN de l'identifiant</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.ObtnUpnIdentClaim(System.Security.Principal.IIdentity)">
 <summary>
 Fonction retournant l'UPN d'un identifiant de type "Claim based" passé en paramètre
 </summary>
 <param name="_objIdent">Identifiant pour lequel on désire créer l'UPN</param>
 <returns>L'UPN de l'identifiant désiré</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.EstZoneSharePoint">
 <summary>
 Obtient la confirmation que la zone d'exécution est de type SP
 </summary>
 <returns>Vrai, si la zone d'exécution est de type SP</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.InitialiserDependances">
 <summary>
 Initialise les attributs privés lors de l'appel au constructeurs qui n'injecte pas de dépendances
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.CommunContxPrincipal(System.Web.HttpContextBase,System.String)">
 <summary>
 Méthode pour le code commun entre la méthode d'obtention d'un nouveau contexte d'impersonification et cette méthode en
 contexte d'injection des dépendances.
 </summary>
 <param name="_objHttpContx"><see cref="T:System.Web.HttpContextBase"/> courant</param>
 <param name="_strNomInfra">Le nom de l'infrastructure à contacter. La 
 valeur de l'infrastructure possible est "CISEL" ou "INFRA2011"</param>
 <returns>Nouveau context d'impersonification</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ContxImpersRAMQ.S4UClient_UpnLogon(System.String)">
 <summary>
 Méthode pour permettre de faire un Mock de la méthode S4UClient.UpnLogon sans profiler pour les essais
 unitaires.
 </summary>
 <param name="_strUpnUtil">UPN de l'identifiant</param>
 <returns>Identié windows.</returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Principal.ContxImpersRAMQ.MockS4UClient">
 <summary>
 Propriété qui détermine si S4UClient doit être un Mock pour les essais unitaires.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Principal.IdentiteClaim">
 <summary> 
 Définition de la classe permettant de faire de la gestion sur les claim
 </summary>
 <remarks>
  Auteur : [Auteur] <br/>
  Date   : [aaaa-mm-jj]
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.ObtnValClaim(System.String)">
 <summary>
 Fonction utilitaires permettant d'obtenir la valeur associée
 à un type de claim dans l'identité claim courante.
 </summary>
 <param name="_strTypeClaim">Le type de claim sous forme de string.</param>
 <returns>La valeur du claim obtenu.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.vb" region="ObtnValClaim"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.cs" region="ObtnValClaim"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.ObtnColctValClaims(System.String)">
 <summary>
 Fonction permettant d'obtenir la valeur de tous les claims
 du types reçu en paramètre sous forme de liste
 </summary>
 <param name="_strTypeClaim">Le tyoe de claim sous forme de string.</param>
 <returns>Une liste de valeur de claims.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.vb" region="ObtnColctValClaims"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.cs" region="ObtnColctValClaims"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.ObtnColctClaims(System.String)">
 <summary>
 Fonction permettant d'obtenir tous les claims
 du types reçu en paramètre sous forme de liste
 </summary>
 <param name="_strTypeClaim">Le type de claim sous forme de string.</param>
 <returns>La liste des claims reliés au type.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.vb" region="ObtnColctClaims"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.cs" region="ObtnColctClaims"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.ClaimExiste(System.String)">
 <summary>
 Fonction permettant de vérifier si au moins un claim
 d'un certain type est présent dans le token
 courant.
 </summary>
 <param name="_strTypeClaim">Le claim recherché.</param>
 <returns>True si le claim est présent, sinon False.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.vb" region="ClaimExiste"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.cs" region="ClaimExiste"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.ObtnValClaimsRolesGroupSID">
 <summary>
 Fonction utilitaire permettant d'obtenir toutes les valeurs des 
 claims de type Role (User FormBased) et GroupSID (User Windows) 
 de l'utilisateur courant
 </summary>
 <returns>Les valeurs de claims sous forme de liste.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.vb" region="ObtnValClaimsRolesGroupSID"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\IdentiteClaim.cs" region="ObtnValClaimsRolesGroupSID"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.ObtenirIdentCourn(System.Web.HttpContext)">
 <summary>
 Obtient l'identité courante d'un HttpContext.
 </summary>
 <param name="_objContx">HttpContext duquel on désire obtenir l'identité courante.</param>
 <returns>Interface IClaimsIdentity de l'identité courante.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.ObtenirIdentCourn">
 <summary>
 Obtient l'identité courante.
 </summary>
 <returns>Interface IIdentity de l'identité courante.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.Obtenir">
 <summary>
 Obtient l'identité revendiquée à partir de l'identité du constructeur.
 </summary>
 <returns>Interface d'identité revendiquée.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ObtenirColctClaim">
 <summary>
 Obtient une collection d'identités revendiquées.
 </summary>
 <returns>Collection d'identités revendiquées</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper">
 <summary>
 Classe enveloppante (wrapper) pour les Claims.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper.#ctor(System.Object)">
 <summary>
 Constructeur complet.
 </summary>
 <param name="_obj">Objet.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper.GetValue``1(System.String)">
 <summary>
 Obtient la valeur d'une propriété.
 </summary>
 <typeparam name="T">Type de données de la propriété.</typeparam>
 <param name="_strNomProp">Nom de la propriété.</param>
 <returns>Valeur de la propriété.</returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper.ClaimType">
 <summary>
 Obtient le ClaimType.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper.Issuer">
 <summary>
 Obtient l'émetteur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper.OriginalIssuer">
 <summary>
 Obtient l'émetteur d'origine.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper.ValueType">
 <summary>
 Obtient le type de la valeur.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Principal.IdentiteClaim.LecteurClaims.ClaimWrapper.Value">
 <summary>
 Obtient la valeur.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Principal.ImpersUtil">
 <summary>
 Classe d'utilitaires d'impersonification.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ImpersUtil.LogonUser(System.String@,System.String@,System.String@,System.Int32,System.Int32,System.IntPtr@)">
 <summary>
 API authentifie un utilisateur.
 </summary>
 <param name="_strUsername">Compte à authentifier.</param>
 <param name="_strDomain">Domaine à utiliser pour l'autentification.</param>
 <param name="_strPassword">Mot de passe.</param>
 <param name="_intLogonType">Type d'authentification.</param>
 <param name="_intLogonProvider">Fournisseur d'authentification.</param>
 <param name="_objToken">Adresse de jeton créé <code>ByRef</code>.</param>
 <returns><code>False</code> = une erreur est survenue. <code>True</code> = succès.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Principal.ImpersUtil.Impersonate(System.String,System.String,System.Security.SecureString)">
 <summary>
 Impersonifie.
 </summary>
 <param name="_strDomainName">Nom de domaine.</param>
 <param name="_strUserName">Nom d'utilisateur.</param>
 <param name="_objPassword">Mot de passe.</param>
 <returns>Contexte d'impersonification Windows.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Principal.RamqGenrqIdentite">
 <summary> 
 Définition de la classe représentant une identité générique RAMQ
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Principal.RamqGenrqIdentite.#ctor(System.String)">
 <summary>
 Constructeur
 </summary>
 <param name="_strNom">Nom d'utilisateur</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Principal.RamqGenrqIdentite.IsAuthenticated">
 <summary>
 Override permettant d'indiquer que cette identité est toujours
 authentifiée
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Principal.RamqTypesClaim">
 <summary>
 Classe de constantes pour les types d'authentifications réclamées.
 </summary>
 <remarks></remarks>
</member>
<member name="F:RAMQ.Securite.Principal.RamqTypesClaim.IdTrxClicSEQUR">
 <summary>
 ID de transaction ClicSEQUR
 </summary>
</member>
<member name="F:RAMQ.Securite.Principal.RamqTypesClaim.IndNoSecClicSEQUR">
 <summary>
 Numéro séquentiel ClicSEQUR
 </summary>
</member>
<member name="F:RAMQ.Securite.Principal.RamqTypesClaim.CodeServ">
 <summary>
 Code de service demandé
 </summary>
</member>
<member name="F:RAMQ.Securite.Principal.RamqTypesClaim.ContxAuthn">
 <summary>
 Le type d'authentification relié à l'usagé.
 </summary>
</member>
<member name="T:RAMQ.Securite.ServiceModel.Securite">
 <summary> 
 Définition de l'interface permettant de gérer la sécurité lors d'appel par référence de service.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis <br/>
  Date   : 2012-02-24
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.Securite.#ctor">
 <summary>
 Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.Securite.#ctor(System.Web.HttpContextBase,System.String,System.String)">
 <summary>
 Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objHttpContxBase">Le contexte HTTP.</param>
 <param name="_strEnvir">Environnement.</param>
 <param name="_strIdAuthnServ">Identifiant d'authentification de la référence de service.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.Securite.SecuriserEnveloppe``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Basic".
 </summary>
 <typeparam name="T">Type de la référence de service.</typeparam>
 <param name="_objServ">Instance du "proxy" de la référence de service.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppe" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppe" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.Securite.SecuriserEnveloppe(System.Web.Services.Protocols.SoapHttpClientProtocol@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Basic".
 </summary>
 <param name="_objServ">Instance du "proxy" de la référenceweb.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppeWS" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppeWS" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.Securite.SecuriserEnveloppeIntegre``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Integrated".
 </summary>
 <typeparam name="T">Type de la référence de service.</typeparam>
 <param name="_objServ">Instance du "proxy" de la référence de service.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppeIntegre" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppeIntegre" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.Securite.SecuriserEnveloppeIntegre(System.Web.Services.Protocols.SoapHttpClientProtocol@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Integrated".
 </summary>
 <param name="_objServ">Instance du "proxy" de la référence web.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppeIntegreWS" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppeIntegreWS" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.ServiceModel.ISecurite">
 <summary> 
 Définition de l'interface permettant de gérer la sécurité lors d'appel par référence de service.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis <br/>
  Date   : 2012-02-24
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.ISecurite.SecuriserEnveloppe``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Basic".
 </summary>
 <typeparam name="T">Type de la référence de service.</typeparam>
 <param name="_objServ">Instance du "proxy" de la référence de service.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppe" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppe" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.ISecurite.SecuriserEnveloppe(System.Web.Services.Protocols.SoapHttpClientProtocol@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Basic".
 </summary>
 <param name="_objServ">Instance du "proxy" de la référenceweb.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppeWS" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppeWS" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.ISecurite.SecuriserEnveloppeIntegre``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Integrated".
 </summary>
 <typeparam name="T">Type de la référence de service.</typeparam>
 <param name="_objServ">Instance du "proxy" de la référence de service.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppeIntegre" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppeIntegre" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.ISecurite.SecuriserEnveloppeIntegre(System.Web.Services.Protocols.SoapHttpClientProtocol@)">
 <summary> 
 Cette méthode permet de sécuriser une référence de service avec une authentification
 de type "Integrated".
 </summary>
 <param name="_objServ">Instance du "proxy" de la référence web.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.vb" region="SecuriserEnveloppeIntegreWS" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Securite.cs" region="SecuriserEnveloppeIntegreWS" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.ServiceModel.ISecuriteWCF">
 <summary> 
     Définition de l'interface permettant de gérer la sécurité lors d'appel de service WCF.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.ISecuriteWCF.SecuriserEnveloppe``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
     Cette méthode permet de sécuriser un service WCF avec une authentification
     de type "Basic".
 </summary>
 <typeparam name="T">Type du service WCF.</typeparam>
 <param name="_objServ">Instance du "proxy" du service WCF.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.vb" region="SecuriserEnveloppe" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.cs" region="SecuriserEnveloppe" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.ISecuriteWCF.SecuriserEnveloppeIntegreWCF``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
     Cette méthode permet de sécuriser un service WCF avec une authentification
     de type "Integrated".
 </summary>
 <typeparam name="T">Type du service WCF.</typeparam>
 <param name="_objServ">Instance du "proxy" du service WCF.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.vb" region="SecuriserEnveloppeIntegreWCF" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.cs" region="SecuriserEnveloppeIntegreWCF" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.ServiceModel.SecuriteWCF">
 <summary> 
     Définition de la classe permettant de gérer la sécurité lors d'appel de service WCF.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.SecuriteWCF.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.SecuriteWCF.#ctor(System.Web.HttpContextBase,System.String,System.String)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objHttpContxBase">Le contexte HTTP.</param>
 <param name="_strEnvir">Environnement.</param>
 <param name="_strIdAuthnServWCF">Identifiant d'authentification du service WCF.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.SecuriteWCF.SecuriserEnveloppe``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
     Cette méthode permet de sécuriser un service WCF avec une authentification
     de type "Basic".
 </summary>
 <typeparam name="T">Type du service WCF.</typeparam>
 <param name="_objServ">Instance du "proxy" du service WCF.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.vb" region="SecuriserEnveloppe" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.cs" region="SecuriserEnveloppe" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.SecuriteWCF.SecuriserEnveloppeIntegreWCF``1(System.ServiceModel.ClientBase{``0}@)">
 <summary> 
     Cette méthode permet de sécuriser un service WCF avec une authentification
     de type "Integrated".
 </summary>
 <typeparam name="T">Type du service WCF.</typeparam>
 <param name="_objServ">Instance du "proxy" du service WCF.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.vb" region="SecuriserEnveloppeIntegreWCF" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteWCF.cs" region="SecuriserEnveloppeIntegreWCF" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.SecuriteWCF.ObtenirCredentiels(System.String@,System.String@)">
 <summary>
 Méthode permettant d'obtenir les crédentiels de l'identifiant authentifié
 dans le but de faire un appel Basic
 </summary>
 <param name="_strIdent">Identifiant de l'utilisateur</param>
 <param name="_strMotps">Mot de passe de l'utilisateur</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.SecuriteWCF.ObtenirContxBase(System.Web.HttpContext)">
 <summary>
     Cette méthode permet de retourner une base de contexte HTTP.
 </summary>
 <param name="_objContx">Contexte HTTP.</param>
 <returns>Base de contexte HTTP.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.ServiceModel.SecuriteWCF.ObtenirCredentiels(System.String@,System.String@,System.Web.HttpContextBase)">
 <summary>
 Méthode permettant d'obtenir les crédentiels de l'identifiant authentifié
 dans le but de faire un appel Basic
 </summary>
 <param name="_strIdent">Identifiant de l'utilisateur</param>
 <param name="_strMotps">Mot de passe de l'utilisateur</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Web.ISecuriteAppli">
 <summary> 
     Définition de l'interface permettant de gérer la sécurité applicative.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Web.ISecuriteAppli.IdUtilAppelServ">
 <summary>
     Cette méthode permet de retourner l'identifiant de l'utilisateur qui a
     appelé le service WCF.
 </summary>
 <returns>L'identifiant de l'utilisateur.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteAppli.vb" region="IdUtilAppelWebServ" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteAppli.cs" region="IdUtilAppelWebServ" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Web.SecuriteAppli">
 <summary> 
     Définition de la classe permettant de gérer la sécurité applicative.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Web.SecuriteAppli.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Web.SecuriteAppli.#ctor(System.Web.HttpContextBase)">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objHttpContxBase">Le contexte HTTP.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Web.SecuriteAppli.IdUtilAppelWebServ">
 <summary>
     Cette méthode permet de retourner l'identifiant de l'utilisateur qui a
     appelé le service WCF.
 </summary>
 <returns>L'identifiant de l'utilisateur.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteAppli.vb" region="IdUtilAppelWebServ" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SecuriteAppli.cs" region="IdUtilAppelWebServ" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.ColctInfoDonneASigne">
 <summary> 
     Définition de la classe représentant un collection d'instances de la
     classe <see cref="T:RAMQ.Securite.Signature.InfoDonneASigne" />.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="T:RAMQ.Securite.Signature.ISignatureNum">
 <summary> 
     Définition de l'interface permettant de signer de l'information avec un certificats X509.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ISignatureNum.CreerMsgSigna(System.Xml.Linq.XDocument,System.String,RAMQ.Securite.Signature.ColctInfoDonneASigne)">
 <summary>
     Cette méthode permet de créer un message WCF signé.
 </summary>
 <param name="_objXDocMsg">Les données XML à signer.</param>
 <param name="_strSOAPActn">L'action SOAP.</param>
 <param name="_objColctInfoDonneASigne">
     La liste des signatures qui doivent être faites sous forme d'instance
     de la classe <see cref="T:RAMQ.Securite.Signature.ColctInfoDonneASigne" />.
 </param>
 <returns>Message WCF signé.</returns>
 <example>Créer un message avec une signature XML.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="CreerMsgSignaXML"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="CreerMsgSignaXML"></code>
 </example>
 <example>Créer un message avec une signature PKCS #7.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="CreerMsgSignaPKCS7"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="CreerMsgSignaPKCS7"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ISignatureNum.SignerXml(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean)">
 <summary>
     Cette méthode permet de signer un XML en format String.
 </summary>
 <param name="_strDonneASigne">Les données XML à signer en format <see cref="T:System.String" />.</param>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_strRefElmASigne">La référence de l'élément à signer dans le XML (le id="quelque chose").</param>
 <param name="_blnInclDonneSigna">Indique si on doit inclure ou non les données dans la signature.</param>
 <returns>Élément signé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="SignerXmlString"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="SignerXmlString"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ISignatureNum.SignerXml(System.Xml.Linq.XElement,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean)">
 <summary>
     Cette méthode permet de signer un XML.
 </summary>
 <param name="_objXElmDonneASigne">Les données XML à signer.</param>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_strRefElmASigne">La référence de l'élément à signer dans le XML (le id="quelque chose").</param>
 <param name="_blnInclDonneSigna">Indique si on doit inclure ou non les données dans la signature.</param>
 <returns>Élément signé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="SignerXmlXElement"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="SignerXmlXElement"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ISignatureNum.GenererPkcs7(System.Security.Cryptography.X509Certificates.X509Certificate2)">
 <summary>
     Cette méthode permet de générer un signature PKCS #7.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <returns>Signature PKCS #7.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="GenererPkcs7"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="GenererPkcs7"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ISignatureNum.GenererPkcs7(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[])">
 <summary>
     Cette méthode permet de générer un signature PKCS #7.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_bytData">Données à signer en tableau de byte.</param>
 <returns>Signature PKCS #7.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="GenererPkcs7Byte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="GenererPkcs7Byte"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ISignatureNum.GenererPkcs1(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[])">
 <summary>
 Cette méthode permet de générer une signature PKCS #1.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_bytData">Données à signer en tableau de byte.</param>
 <returns>Signature PKCS1 en string</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="GenererPkcs1Byte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="GenererPkcs1Byte"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ISignatureNum.VerifierDonneesPkcs1(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[],System.String)">
 <summary>
 Cette méthode permet de valider des données contre 
 une signature Pkcs1.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_bytData">Données à vérifier</param>
 <param name="_strSignature">Signature à utiliser</param>
 <returns>True si les données sont valides, sinon False.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="VerifierDonneesPkcs1"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="VerifierDonneesPkcs1"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.IInfoDonneASigneXMLSigna">
 <summary> 
     Définition de l'interface représentant l'information pour la signature XML.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Securite.Signature.IInfoDonneASigneXMLSigna.IdElmXml">
 <summary>
     Propriété qui retourne l'élément de référence pour la signature.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.IInfoDonneASignePKCS7">
 <summary> 
     Définition de l'interface représentant l'information la signature PKCS #7.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Securite.Signature.IInfoDonneASignePKCS7.DonneSignaPKCS7">
 <summary>
     Propriété qui retourne les données à signer.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.IInfoDonneASigne">
 <summary> 
     Définition de l'interface représentant l'information qui permet de signer.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Securite.Signature.IInfoDonneASigne.TypIntvn">
 <summary>
     Propriété qui retourne le type d'intervenant.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Signature.IInfoDonneASigne.CertIntvn">
 <summary>
     Propriété qui retourne le certificat X509 de l'intervenant.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.InfoDonneASigne">
 <summary> 
     Définition de la classe représentant l'information qui permet de signer.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Securite.Signature.InfoDonneASigne.TypIntvn">
 <summary>
     Propriété qui retourne le type d'intervenant.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Signature.InfoDonneASigne.CertIntvn">
 <summary>
     Propriété qui retourne le certificat X509 de l'intervenant.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.InfoDonneASignePKCS7">
 <summary> 
     Définition de la classe représentant l'information pour la signature PKCS #7.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Signature.InfoDonneASignePKCS7.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.InfoDonneASignePKCS7.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)">
 <summary>
     Constructeur qui permet d'initialiser toutes les propriétés.
 </summary>
 <param name="_strTypIntvn">Le type d'intervenant.</param>
 <param name="_strDonneSignPKCS7">Les données à signer.</param>
 <param name="_objCertIntvn">Le certificat X509 de l'intervenant.</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Signature.InfoDonneASignePKCS7.DonneSignaPKCS7">
 <summary>
     Propriété qui retourne les données à signer.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.InfoDonneASigneXMLSigna">
 <summary> 
     Définition de la classe représentant l'information pour la signature XML.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Signature.InfoDonneASigneXMLSigna.#ctor">
 <summary>
     Constructeur par defaut.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.InfoDonneASigneXMLSigna.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)">
 <summary>
     Constructeur qui permet d'initialiser toutes les propriétés.
 </summary>
 <param name="_strTypIntvn">Le type d'intervenant.</param>
 <param name="_strIdElmXml">Élément de référence pour la signature.</param>
 <param name="_objCertIntvn">Le certificat X509 de l'intervenant.</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Securite.Signature.InfoDonneASigneXMLSigna.IdElmXml">
 <summary>
     Propriété qui retourne l'élément de référence pour la signature.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.ElmIdSigneXml">
 <summary> 
     Définition de la classe représentant un élément signé numériquement.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ElmIdSigneXml.#ctor(System.Xml.Linq.XElement)">
 <summary>
     Constructeur par défaut.
 </summary>
 <param name="_objXElm">Élément à signer.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.ElmIdSigneXml.GetIdElement(System.Xml.XmlDocument,System.String)">
 <summary>
     Cette méthode permet d'injecter l'espace de nom de la norme WS-Security
     afin d'effectuer des recherches.
 </summary>
 <param name="_objXmlDoc">Document XML de recherche.</param>
 <param name="_strIdRechr">Valeur à rechercher.</param>
 <exception cref="T:System.ApplicationException">Impossible de rechercher un wsu:id contenant à la fois des guillemets simples et doubles.</exception>
 <exception cref="T:System.ApplicationException">Impossible de rechercher un wsu:id non unique.</exception>
 <returns>Élément recherché.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Signature.SignatureNum">
 <summary> 
     Définition de la classe permettant de signer de l'information avec un certificats X509.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.CreerMsgSigna(System.Xml.Linq.XDocument,System.String,RAMQ.Securite.Signature.ColctInfoDonneASigne)">
 <summary>
     Cette méthode permet de créer un message WCF signé.
 </summary>
 <param name="_objXDocMsg">Les données XML à signer.</param>
 <param name="_strSOAPActn">L'action SOAP.</param>
 <param name="_objColctInfoDonneASigne">
     La liste des signatures qui doivent être faites sous forme d'instance
     de la classe <see cref="T:RAMQ.Securite.Signature.ColctInfoDonneASigne" />.
 </param>
 <exception cref="T:System.ApplicationException">Impossible de signer les données avec le certificat spécifié.</exception>
 <returns>Message WCF signé.</returns>
 <example>Créer un message avec une signature XML.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="CreerMsgSignaXML"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="CreerMsgSignaXML"></code>
 </example>
 <example>Créer un message avec une signature PKCS #7.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="CreerMsgSignaPKCS7"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="CreerMsgSignaPKCS7"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.GenererPkcs7(System.Security.Cryptography.X509Certificates.X509Certificate2)">
 <summary>
     Cette méthode permet de générer un signature PKCS #7.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <exception cref="T:System.ApplicationException">Impossible de signer les données avec le certificat spécifié.</exception>
 <returns>Signature PKCS #7.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="GenererPkcs7"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="GenererPkcs7"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.GenererPkcs7(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[])">
 <summary>
     Cette méthode permet de générer un signature PKCS #7.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_bytData">Données à signer en tableau de byte.</param>
 <exception cref="T:System.ApplicationException">Impossible de signer les données avec le certificat spécifié.</exception>
 <returns>Signature PKCS #7.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="GenererPkcs7Byte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="GenererPkcs7Byte"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.SignerXml(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean)">
 <summary>
     Cette méthode permet de signer un XML en format String.
 </summary>
 <param name="_strDonneASigne">Les données XML à signer en format <see cref="T:System.String" />.</param>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_strRefElmASigne">La référence de l'élément à signer dans le XML (le id="quelque chose").</param>
 <param name="_blnInclDonneSigna">Indique si on doit inclure ou non les données dans la signature.</param>
 <exception cref="T:System.ApplicationException">Une erreur est survenue en tentant de créer la signature.</exception>
 <exception cref="T:System.ApplicationException">Une erreur est survenue en tentant d'ajouter les données XML à la signature.</exception>
 <returns>Élément signé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="SignerXmlString"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="SignerXmlString"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.SignerXml(System.Xml.Linq.XElement,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean)">
 <summary>
     Cette méthode permet de signer un XML.
 </summary>
 <param name="_objXElmDonneASigne">Les données XML à signer.</param>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_strRefElmASigne">La référence de l'élément à signer dans le XML (le id="quelque chose").</param>
 <param name="_blnInclDonneSigna">Indique si on doit inclure ou non les données dans la signature.</param>
 <exception cref="T:System.ApplicationException">Une erreur est survenue en tentant de créer la signature.</exception>
 <exception cref="T:System.ApplicationException">Une erreur est survenue en tentant d'ajouter les données XML à la signature.</exception>
 <returns>Élément signé.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="SignerXmlXElement"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="SignerXmlXElement"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.GenererPkcs1(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[])">
 <summary>
 Cette méthode permet de générer une signature PKCS #1.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_bytData">Données à signer en tableau de byte.</param>
 <returns>Signature PKCS #1 sous forme de string.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="GenererPkcs1Byte"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="GenererPkcs1Byte"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.VerifierDonneesPkcs1(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[],System.String)">
 <summary>
 Cette méthode permet de valider des données contre 
 une signature Pkcs1.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_bytData">Données à vérifier</param>
 <param name="_strSignature">Signature à utiliser</param>
 <returns>True si les données sont valides, sinon False.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.vb" region="VerifierDonneesPkcs1"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SignatureNum.cs" region="VerifierDonneesPkcs1"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.AjoutObject(System.Xml.Linq.XElement,System.String)">
 <summary>
     Cette méthode permet d'ajouter de l'élément racine «Object» aux données à signer.
 </summary>
 <param name="_objXElmDonneASigne">Données à signer.</param>
 <param name="_strRefElmASigne">Référence de l'élément à signer.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.ObtenirTimestamp">
 <summary>
     Cette méthode permet d'obtenir un timestamp en tableau de byte.
 </summary>
 <returns>Timestamp sous forme de tableau de <see cref="T:System.Byte" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.SignerPKCS7DonneCert(System.Byte[],System.Security.Cryptography.X509Certificates.X509Certificate2)">
 <summary>
     Cette méthode permet la signature PKCS #7 de données passé en paramètre.
 </summary>
 <param name="_bytData">Données à signer en tableau de byte.</param>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <exception cref="T:System.ApplicationException">Impossible de signer les données avec le certificat spécifié.</exception>
 <returns>Signature PKCS #7 sous forme de tableau de <see cref="T:System.Byte" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.SignerPKCS1DonneCert(System.Byte[],System.Security.Cryptography.X509Certificates.X509Certificate2)">
 <summary>
     Cette méthode permet la signature PKCS #1 de données passé en paramètre.
 </summary>
 <param name="_bytData">Données à signer en tableau de byte.</param>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <exception cref="T:System.ApplicationException">Impossible de signer les données avec le certificat spécifié.</exception>
 <returns>Signature PKCS #1 sous forme de tableau de <see cref="T:System.Byte" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.VerifierPkcs1(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[],System.String)">
 <summary>
 Cette méthode permet de valider des données contre 
 une signature Pkcs1.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_bytData">Données à vérifier</param>
 <param name="_strSignature">Signature à utiliser</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.SignerMsgXmlSigna(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Xml.Linq.XElement,System.String)">
 <summary>
     Cette méthode permet la signature XML (xmldsig) de données passé en paramètre.
 </summary>
 <param name="_objCert">Le certificat à utiliser pour faire la signature.</param>
 <param name="_objXElmDonneASigner">Les données XML à signer.</param>
 <param name="_strRefElmASigner">La référence de l'élément à signer dans le XML (le id="quelque chose").</param>
 <exception cref="T:System.ApplicationException">Impossible de signer les données avec le certificat spécifié.</exception>
 <returns>Élément signé.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.ObtenirHeaderSignaPKCS7(RAMQ.Securite.Signature.InfoDonneASignePKCS7)">
 <summary>
     Cette méthode retourne un entête SOAP comprenant une signature PKCS #7.
 </summary>
 <param name="_objInfoDonneASignePKCS7">Information à signer en PKCS #7 sous forme d'instance de la classe <see cref="T:RAMQ.Securite.Signature.InfoDonneASignePKCS7" />.</param>
 <returns>Instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.ObtenirHeaderSignaXML(System.Xml.Linq.XDocument,RAMQ.Securite.Signature.InfoDonneASigneXMLSigna)">
 <summary>
     Cette méthode retourne un entête SOAP comprenant une signature XML.
 </summary>
 <param name="_objXDoc">XML à signer.</param>
 <param name="_objInfoDonneASigneXMLSigna">Information pour effectuer la signature XML sous forme d'instance de la classe <see cref="T:RAMQ.Securite.Signature.InfoDonneASigneXMLSigna" />.</param>
 <returns>Instance de la classe <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Signature.SignatureNum.ToBase64(System.Byte[])">
 <summary>
     Cette méthode effectue la conversion d'un tableau de byte en une
     chaîne de caractères en base 64.
 </summary>
 <param name="_bytData">Tableau de byte à convertir.</param>
 <returns>Chaîne de caractère en base 64.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Securite.Validation">
 <summary> 
     Définition de la classe permettant des opérations de validation.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Securite.Validation.ValiderValEntre(System.String,System.Text.RegularExpressions.Regex)">
 <summary>
     Cette méthode permet de valider la valeur d'entrée en fonction de l'expression régulière fournie.
 </summary>
 <param name="_strVal">Valeur d'entrée à valider.</param>
 <param name="_objExprRegul">Expression régulière pour valider la valeur.</param>
 <returns>Indicateur (true, false) pour la validité de la valeur d'entrée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.vb" region="ValiderValEntreRegex" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.cs" region="ValiderValEntreRegex" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Validation.ValiderValEntre(System.String,System.String)">
 <summary>
     Cette méthode permet de valider la valeur d'entrée en fonction de l'expression régulière fournie sous forme de chaîne de caractère.
 </summary>
 <param name="_strVal">Valeur d'entrée à valider.</param>
 <param name="_strExprRegul">Chaîne de caractère représentant l'expression régulière pour valider la valeur.</param>
 <returns>Indicateur (true, false) pour la validité de la valeur d'entrée.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.vb" region="ValiderValEntreString" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.cs" region="ValiderValEntreString" />
 </example>
 <remarks></remarks>    
</member>
<member name="M:RAMQ.Securite.Validation.ValiderValEntre``1(``0,System.Collections.Generic.IEnumerable{``0})">
 <summary>
     Cette méthode permet de valider la valeur d'entrée en fonction d'une liste de valeurs permises (domaine de valeurs).
 </summary>
 <typeparam name="T">Type</typeparam>
 <param name="_objVal">Valeur du type à valider.</param>
 <param name="_colctValPermi">Collection (Liste) de valeurs permises.</param>
 <exception cref="T:System.ApplicationException">Cette surcharge de méthode n'accepte que les types simple (String, Boolean, Char, Date, Byte, Short, Integer, Long, Single, Double, Decimal).</exception>
 <returns>Indicateur (true, false) pour la validité de la valeur d'entrée. I.E. Valeur présente dans la liste des valeurs.</returns>
 <example>Valider une valeur dans une liste avec un type simple.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.vb" region="ValiderValEntreIEnumerableSimple"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.cs" region="ValiderValEntreIEnumerableSimple"></code>
 </example>
 <example>Valider une valeur dans une liste avec un type complexe.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.vb" region="ValiderValEntreIEnumerableComplexe"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.cs" region="ValiderValEntreIEnumerableComplexe"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Securite.Validation.ValiderValEntre``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
 <summary>
     Cette méthode permet de valider la valeur d'entrée en fonction d'une liste de valeurs permises (domaine de valeurs).
 </summary>
 <typeparam name="T">Type</typeparam>
 <param name="_objVal">Valeur du type à valider.</param>
 <param name="_colctValPermi">Collection (Liste) de valeurs permises.</param>
 <param name="_colctIEqualityComparer">Instance d'une classe qui implément l'interface <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</param>
 <returns>Indicateur (true, false) pour la validité de la valeur d'entrée. I.E. Valeur présente dans la liste des valeurs.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.vb" region="ValiderValEntreIEnumerableIEqualityComparer" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Validation.cs" region="ValiderValEntreIEnumerableIEqualityComparer" />
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.EnumerableSerialisableXml`1">
 <summary>
     Classe de base permettant de créer des IEnumerable(Of T) sérialisable en Xml.
 </summary>
 <typeparam name="T">Classe qui implémente IXmlSerializable.</typeparam>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.EnumerableSerialisableXml`1.#ctor">
 <summary>
     Constructeur vide utilisé pour la désérialisation.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.EnumerableSerialisableXml`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
 <summary>
     Constructeur utilisé pour transformer le IEnumarable(Of T) en 
     EnumerableSerialisableXml(Of T)
 </summary>
 <param name="objEnumerable">L'objet que l'on désire rendre serialisable en Xml.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.EnumerableSerialisableXml`1.IXmlSerializable_GetSchema">
 <summary>
     Afin de permettre à la classe dérivée de mettre sont propre schema.
 </summary>
 <returns>Le schema xsd.</returns>
 <remarks>Comme on ne peux définir un schema par default, la méthode est MustOverride.</remarks>
</member>
<member name="M:RAMQ.Serialisation.EnumerableSerialisableXml`1.IXmlSerializable_ReadXml(System.Xml.XmlReader)">
 <summary>
     Permet d'effectuer la désérialisation de notre collection d'objet de type T.
 </summary>
 <param name="reader">Context de désérialisation.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.EnumerableSerialisableXml`1.IXmlSerializable_WriteXml(System.Xml.XmlWriter)">
 <summary>
     Permet d'effectuer la sérialisation de notre collection d'objet de type T
 </summary>
 <param name="writer">Context de sérialisation.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.EnumerableSerialisableXml`1.IEnumerableOfT_GetEnumerator">
 <summary>
     Permet d'exposer le GetEnumerator de notre collection.
 </summary>
 <returns>Le GetEnumerator() de notre collection.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.EnumerableSerialisableXml`1.IEnumerable_GetEnumerator">
 <summary>
     Permet d'exposer le GetEnumerator de notre collection.
 </summary>
 <returns>Le GetEnumerator() de notre collection.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.ISerialiseurDataContractJson`1">
 <summary> 
 Définition de la classe permettant de faire la 
 sérialisation / désérialisation d'objet en Json
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurDataContractJson`1.Deserialiser(System.String)">
 <summary>
 Désérialisation d'une chaîne Json vers un objet
 </summary>
 <param name="_strJson">La chaîne Json à désérialiser</param>
 <returns>L'objet désérialisé</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.vb" region="Deserialiser"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.cs" region="Deserialiser"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurDataContractJson`1.Serialiser(`0)">
 <summary>
 Sérialisation d'un objet en une chaîne Json
 </summary>
 <param name="_objDonne">L'objet à sérialiser</param>
 <returns>La représentation Json de l'objet reçu en paramètre, dans une chaîne de caractères</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.vb" region="Serialiser"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.cs" region="Serialiser"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> qui offre des classes permettant 
 de faciliter la sérialisation/désérialisation.
 </summary>
 <remarks>
 <para>
 Les différentes classes encapsulent et facilitent le processus de sérialisation/désérialisation. En utilisant ces dernières, vous aurez 
 moins de lignes de code à écrire pour faire ces opérations.
 </para>
 <para>
 De plus plusieurs types de sérialisation sont offerts avec ces différentes classes :
 <ul>
 <li>(Dé)sérialisation XML</li>
 <li>(Dé)sérialisation JSON</li>
 <li><b>(Dé)sérialisation en base 64</b></li>
 </ul>
 Cette dernière n'est pas un type de sérialisation offert par le cadre d'application .Net, certains projets ont eu à recourir à une 
 sérialisation de ce type dans le cadre de leur projet. Il s'agit dans les faits d'une sérialisation binaire dont le résultat est 
 transformé en chaine de caractère sous base 64. Cette possibilité est maintenant offerte à tous via la classe 
 <see cref="T:RAMQ.Serialisation.SerialiseurBase64`1"/>.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Serialisation.SerialiseurDataContract`1">
 <summary> 
     Définition de la classe permettant de sérialiser de désérialiser des chaînes
     de caractère XML vers un objet de type T et vice-versa.
     Utilise la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.
 </summary>
 <typeparam name="T">Type de l'objet.</typeparam>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurDataContract`1.Deserialiser(System.String)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_strValeur">Objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="Deserialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="Deserialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurDataContract`1.Deserialiser(System.Xml.XmlReader)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_objXmlReader">Lecteur de flux d'un objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="DeserialiserReader" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="DeserialiserReader" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurDataContract`1.Serialiser(`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <returns>Objet sérialisé en XML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="Serialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="Serialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurDataContract`1.Serialiser(System.Xml.XmlWriter,`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objXmlWriter">Permet l'écriture d'un objet de type T à sérialiser en XML.</param>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="SerialiserWriter" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="SerialiserWriter" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.ISerialiseurDataContract`1">
 <summary> 
     Définition de l'interface permettant de sérialiser de désérialiser des chaînes
     de caractère XML vers un objet de type T et vice-versa.
     Utilise la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.
 </summary>
 <typeparam name="T">Type de l'objet.</typeparam>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurDataContract`1.Deserialiser(System.String)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_strValeur">Objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="Deserialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="Deserialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurDataContract`1.Deserialiser(System.Xml.XmlReader)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_objXmlReader">Lecteur de flux d'un objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="DeserialiserReader" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="DeserialiserReader" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurDataContract`1.Serialiser(`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <returns>Objet sérialisé en XML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="Serialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="Serialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurDataContract`1.Serialiser(System.Xml.XmlWriter,`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objXmlWriter">Permet l'écriture d'un objet de type T à sérialiser en XML.</param>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.vb" region="SerialiserWriter" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContract.cs" region="SerialiserWriter" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.SerialiseurDataContractJson`1">
 <summary> 
 Définition de la classe permettant de faire la 
 sérialisation / désérialisation d'objet en Json
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurDataContractJson`1.Deserialiser(System.String)">
 <summary>
 Désérialisation d'une chaîne Json vers un objet
 </summary>
 <param name="_strJson">La chaîne Json à désérialiser</param>
 <returns>L'objet désérialisé</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.vb" region="Deserialiser"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.cs" region="Deserialiser"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurDataContractJson`1.Serialiser(`0)">
 <summary>
 Sérialisation d'un objet en une chaîne Json
 </summary>
 <param name="_objDonne">L'objet à sérialiser</param>
 <returns>La représentation Json de l'objet reçu en paramètre, dans une chaîne de caractères</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.vb" region="Serialiser"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurDataContractJson.cs" region="Serialiser"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.SerialiseurObjetXml`1">
 <summary> 
     Définition de la classe permettant de sérialiser de désérialiser des chaînes
     de caractère XML vers un objet de type T et vice-versa pour en faire des
     message WCF (<see cref="T:System.ServiceModel.Channels.Message" />).
     Utilise la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.
 </summary>
 <typeparam name="T">Type de l'objet.</typeparam>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.#ctor">
 <summary>
     Constructeur par défaut.
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurObjetXml.vb" region="Constructeur" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurObjetXml.cs" region="Constructeur" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.#ctor(RAMQ.Serialisation.ISerialiseurXml{`0})">
 <summary>
     Constructeur secondaire servant aux tests unitaires.
 </summary>
 <param name="_objISerialiseurXml">Instance d'une classe qui implémente l'interface <see cref="T:RAMQ.Serialisation.ISerialiseurXml`1" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.IsStartObject(System.Xml.XmlDictionaryReader)">
 <summary>
     Cette méthode obtient une valeur qui spécifie si le XmlDictionaryReader 
     est positionné sur un élément XML qui peut être lu.
 </summary>
 <param name="_objLectr">Lecteur du flux XML.</param>
 <returns>Indique si c'est le début de l'objet.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
 <summary>
     Cette méthode effectue la lecture du flux XML ou un document avec un 
     XmlDictionaryReader et retourne l'objet désérialisé, il vous permet 
     également de spécifier si le sérialiseur peut lire les données avant
     de tenter de le lire.
 </summary>
 <param name="_objLectr">Lecteur du flux XML.</param>
 <param name="_blnVerifNom">Indique si l'on doit vérifier le nom.</param>
 <returns>L'objet lu.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.WriteEndObject(System.Xml.XmlDictionaryWriter)">
 <summary>
     Cette méthode écrit à la fin de l'objet de données comme un élément de
     fermeture XML pour le document XML ou d'un flux avec un XmlDictionaryWriter.
 </summary>
 <param name="_objWriter">Objet permettant l'écriture.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
 <summary>
     Cette méthode n'écrit que le contenu de l'objet du document XML ou un
     flux en utilisant le XmlDictionaryWriter.
 </summary>
 <param name="_objWriter">Objet permettant l'écriture.</param>
 <param name="_objCont">Contenu à écrire.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
 <summary>
     Cette méthode écrit le début de données de l'objet comme un élément 
     d'ouverture XML en utilisant le XmlDictionaryWriter.
 </summary>
 <param name="_objWriter">Objet permettant l'écriture.</param>
 <param name="_objCont">Contenu à écrire.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
 <summary>
     Cette méthode écrit le contenu complet (départ, un contenu, et à la fin)
     de l'objet du document XML ou d'un flux avec le XmlDictionaryWriter.
 </summary>
 <param name="_objWriter">Objet permettant l'écriture.</param>
 <param name="_objCont">Contenu à écrire.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurObjetXml`1.ReadObject(System.Xml.XmlDictionaryReader)">
 <summary>
     Cette méthode lit le document XML ou un flux avec un XmlDictionaryReader et
     retourne l'objet désérialisé.
 </summary>
 <param name="_objLectr">Lecteur du flux XML.</param>
 <returns>L'objet lu.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.SerialiseurXml`1">
 <summary> 
     Définition de la classe permettant de sérialiser de désérialiser des chaînes
     de caractère XML vers un objet de type T et vice-versa.
     Utilise la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.
 </summary>
 <typeparam name="T">Type de l'objet.</typeparam>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurXml`1.Deserialiser(System.String)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_strValeur">Objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="Deserialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="Deserialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurXml`1.Deserialiser(System.Xml.XmlReader)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_objXmlReader">Lecteur de flux d'un objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="DeserialiserReader" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="DeserialiserReader" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurXml`1.Serialiser(`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <returns>Objet sérialisé en XML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="Serialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="Serialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurXml`1.Serialiser(System.Xml.XmlWriter,`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objXmlWriter">Permet l'écriture d'un objet de type T à sérialiser en XML.</param>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="SerialiserWriter" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="SerialiserWriter" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.ISerialiseurXml`1">
 <summary> 
     Définition de l'interface permettant de sérialiser de désérialiser des chaînes
     de caractère XML vers un objet de type T et vice-versa.
     Utilise la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.
 </summary>
 <typeparam name="T">Type de l'objet.</typeparam>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurXml`1.Deserialiser(System.String)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_strValeur">Objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="Deserialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="Deserialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurXml`1.Deserialiser(System.Xml.XmlReader)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en XML.
 </summary>
 <param name="_objXmlReader">Lecteur de flux d'un objet sérialisé en XML.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="DeserialiserReader" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="DeserialiserReader" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurXml`1.Serialiser(`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <returns>Objet sérialisé en XML.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="Serialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="Serialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurXml`1.Serialiser(System.Xml.XmlWriter,`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en XML.
 </summary>
 <param name="_objXmlWriter">Permet l'écriture d'un objet de type T à sérialiser en XML.</param>
 <param name="_objDonnees">Objet de type T à sérialiser en XML.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.vb" region="SerialiserWriter" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurXml.cs" region="SerialiserWriter" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.ISerialiseurBase64`1">
 <summary> 
     Définition de l'interface permettant de sérialiser de désérialiser des chaînes
     de caractère en base 64 vers un objet de type T et vice-versa.
 </summary>
 <typeparam name="T">Type de l'objet.</typeparam>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Serialisation.ISerialiseurBase64`1.TypeEncodg">
 <summary>
 Propriété contenant le type d'encodage des chaînes de caractères
 </summary>
 <value><see cref="T:System.Text.Encoding" /></value>
 <returns><see cref="T:System.Text.Encoding" /></returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.vb" region="Deserialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.cs" region="Deserialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurBase64`1.Deserialiser(System.String)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en base 64.
 </summary>
 <param name="_strValeur">Objet sérialisé en base 64.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.vb" region="Deserialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.cs" region="Deserialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.ISerialiseurBase64`1.Serialiser(`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en base 64.
 </summary>
 <param name="_objDonnees">Objet de type T à sérialiser en base 64.</param>
 <returns>Objet sérialisé en base 64.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.vb" region="Serialiser" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.cs" region="Serialiser" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Serialisation.SerialiseurBase64`1">
 <summary> 
     Définition de la classe permettant de sérialiser de désérialiser des chaînes
     de caractère en base 64 vers un objet de type T et vice-versa.
 </summary>
 <typeparam name="T">Type de l'objet.</typeparam>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="F:RAMQ.Serialisation.SerialiseurBase64`1.objTypEncdg">
 <summary>
 Attribut contenant le type d'encodage des chaînes de caractères
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Serialisation.SerialiseurBase64`1.TypEncdg">
 <summary>
 Propriété contenant le type d'encodage des chaînes de caractères
 </summary>
 <value><see cref="T:System.Text.Encoding" /></value>
 <returns><see cref="T:System.Text.Encoding" /></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurBase64`1.#ctor">
 <summary>
 Constructeur par défaut
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurBase64`1.#ctor(System.Text.Encoding)">
 <summary>
 Constructeur permettant de préciser l'encodage des chaines de
 caractères. Ce constructeur est nécessaire lors d'appel à des
 services de décodage du base64 dans l'infrastructure CISEL.
 </summary>
 <param name="_objEncdg">Le type d'encodage <see cref="T:System.Text.Encoding" /> des chaînes de caractères.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurBase64`1.Deserialiser(System.String)">
 <summary>
     Cette méthode permet la désérialisation de l'objet sérialisé en base 64.
 </summary>
 <param name="_strValeur">Objet sérialisé en base 64.</param>
 <returns>Objet de type T.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.vb" region="Deserialiser" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.cs" region="Deserialiser" />
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Serialisation.SerialiseurBase64`1.Serialiser(`0)">
 <summary>
     Cette méthode permet la sérialisation de l'objet en base 64.
 </summary>
 <param name="_objDonnees">Objet de type T à sérialiser en base 64.</param>
 <returns>Objet sérialisé en base 64.</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.vb" region="Serialiser" />
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\SerialiseurBase64.cs" region="Serialiser" />
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.EnteteMsg">
 <summary>
  Définition de la classe représentant l'en-tête de message.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis / Jean-Philippe Bégin<br/>
  Date   : 2012-02-28<br/>
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="F:RAMQ.ServiceModel.Configuration.EnteteMsg.strNomIdent">
 <summary>
 Attribut contenant la valeur de l'identifiant appelant
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.EnteteMsg.NomIdent">
 <summary>
 Obtient le nom de l'identifiant appelant
 </summary>
 <returns>Le nom de l'identifiant appelant</returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.EnteteMsg.TypeAuth">
 <summary>
 Obtient ou définit le type d'authentification
 à inscrire dans l'en-tête
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.EnteteMsg.Roles">
 <summary>
 Obtient la liste des rôles associés à
 l'identifiant appelant
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsg.#ctor(System.String)">
 <summary>
 Constructeur
 </summary>
 <param name="_strIdent">Le nom de l'identifiant appelant</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsg.#ctor(System.String,System.Collections.Generic.List{System.String})">
 <summary>
 Constructeur
 </summary>
 <param name="_strIdent">Le nom de l'identifiant appelant</param>
 <param name="_colctRoles">La liste de rôles associés à cet identifiant</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.EnteteMsg.Name">
 <summary>
 Obtient le nom du regroupement de l'en-tête
 </summary>
 <returns>Le nom du regroupement de l'en-tête</returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.EnteteMsg.Namespace">
 <summary>
 Obtient le namespace du regroupement de l'en-tête
 </summary>
 <returns>Le namespace du regroupement de l'en-tête</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsg.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
 <summary>
 Méthode lancée au moment de l'écriture du contenu de l'en-tête
 </summary>
 <param name="_objEcritXml"><see cref="T:System.Xml.XmlDictionaryWriter"/> contenant l'en-tête de la requête à modifier</param>
 <param name="_objVersiMsg">Version du message</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsg.LireEntete">
 <summary>
 Fonction permettant de lire l'en-tête de la requête courante
 </summary>
 <returns>L'objet <see cref="T:RAMQ.ServiceModel.Configuration.EnteteMsg" />de la requête</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsg.LireEntete(System.Xml.XmlDictionaryReader)">
 <summary>
 Fonction permettant de lire l'en-tête de la requête courante
 </summary>
 <param name="_objLectrXml"><see cref="T:System.Xml.XmlDictionaryReader"/> contenant le détail de la requête</param>
 <returns>L'objet <see cref="T:RAMQ.ServiceModel.Configuration.EnteteMsg" />de la requête</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsg.LireEspaceNom(System.ServiceModel.Channels.Message)">
 <summary>
 Fonction permettant de lire l'espace nom utilisé dans l'en-tête de la requête courante
 </summary>
 <param name="_objMsgReq"><see cref="T:System.ServiceModel.Channels.Message"/> contenant la requête</param>
 <returns>Espace nom de la requête</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.EnteteMsgBehavior">
 <summary>
  Définition de la classe représentant le béhavior de l'en-tête du message.
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis / Jean-Philippe Bégin<br/>
  Date   : 2012-02-28<br/>
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsgBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
 <summary>
 Méthode implémentée pour l'ajout des paramètres du binding
 </summary>
 <param name="_objServEndpoint"><see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> courant</param>
 <param name="_objParamBinding">Les paramètres du binding <see cref="T:System.ServiceModel.Channels.BindingParameterCollection"/></param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsgBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
 <summary>
 Méthode implémentée pour l'application du behavior client
 </summary>
 <param name="_objServEndpoint"><see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> courant</param>
 <param name="_objRuntimeClient"><see cref="T:System.ServiceModel.Dispatcher.ClientRuntime"/> Servant à ajouter l'inspecteur de message</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsgBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
 <summary>
 Méthode implémentée pour l'application du behavior (côté serveur)
 </summary>
 <param name="_objServEndpoint"><see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> courant</param>
 <param name="_objEndpointDispatcher"><see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher"/></param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.EnteteMsgBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
 <summary>
 Méthode implémentée pour la validation du <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/>
 </summary>
 <param name="_objServEndpoint"><see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> à valider</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.GestErrJson">
 <summary> 
     Définition de la classe permettant d'exposer la configuration pour la gestion des erreurs d'un
     service WCF REST AJAX.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.GestErrJson.HandleError(System.Exception)">
 <summary>
     Cette méthode représente l'implémentation de IErrorHandler.HandleError.
 </summary>
 <param name="_objEx">Exception .NET.</param>
 <returns>Indique si l'erreur a été trappée.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.GestErrJson.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
 <summary>
     Cette méthode permet la création d'un message d'exception .NET en JSON.
 </summary>
 <param name="_objEx">Exception .NET.</param>
 <param name="_objMsgVersi">Version de message d'exception.</param>
 <param name="_objMsg">Message d'exception.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.InspctrEnteteMsg">
 <summary>
  Définition de la classe représentant l'inspecteur du message (côté client).
 </summary>
 <remarks>
  Auteur : Alexandre Chaussé-Paradis / Jean-Philippe Bégin<br/>
  Date   : 2012-02-28<br/>
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.InspctrEnteteMsg.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
 <summary>
 Implémentation des actions à faire après la réception de la réponse (côté client)
 </summary>
 <param name="_objMsgRetou"><see cref="T:System.ServiceModel.Channels.Message"/> contenant la réponse</param>
 <param name="_objEtatCorln">Objet contenant l'état de la corrélation</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.InspctrEnteteMsg.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
 <summary>
 Implémentation des actions à faire avant l'envoi de la requête vers le serveur (côté client)
 </summary>
 <param name="_objMsgReq"><see cref="T:System.ServiceModel.Channels.Message"/> contenant la requête</param>
 <param name="_objCanal">Canal client <see cref="T:System.ServiceModel.IClientChannel"/></param>
 <returns>Objet vide</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.InspctrEnteteMsg.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
 <summary>
 Implémentation des actions à faire après la réception de la requête (côté serveur)
 </summary>
 <param name="_objMsgReq"><see cref="T:System.ServiceModel.Channels.Message"/> contenant la requête</param>
 <param name="_objCanal">Canal client <see cref="T:System.ServiceModel.IClientChannel"/></param>
 <param name="_objContxInstc">Instance du contexte <see cref="T:System.ServiceModel.InstanceContext"/></param>
 <returns>Objet de retour après la réception de la requête.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.InspctrEnteteMsg.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
 <summary>
 Implémentation des actions à faire avant l'envoi de la réponse au client (côté serveur)
 </summary>
 <param name="_objMsgRetou"><see cref="T:System.ServiceModel.Channels.Message"/> contenant la réponse</param>
 <param name="_objEtatCorln">Objet contenant l'état de la corrélation</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl">
 <summary>
     Cette classe permet de rendre interopérable un service WCF pour tous les plateformes.
 
     Explication : 
       - Par défaut avec un ALIAS (Load Balancing), le WSDL du serrvice WCF contient le nom du 
         serveur qui a répondu (ex: V3V570) et non l'alias (nlb-prdev-app3).
       - Cette classe permet de modifier le WSDL "live" en modifiant les URL avec l'ALIAS ayant 
         servi à l'appel.
 </summary>
 <remarks>
     Auteur : Mario Grenier
     Date   : 2010-07-23
 
     Historique des modifications
     ----------------------------
     Auteur      : Mario Grenier
     Date        : 2010-07-23
     Description : Création de la classe.
 
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.#ctor(RAMQ.ServiceModel.Configuration.TrnsfAliasWsdlBehaviorExtn)">
 <summary>
  Constructeur pour l'extension du WSDL.
 </summary>
 <param name="_objConfgExtnWsdl">
  Configuration pour l'extension du WSDL.
 </param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
 <summary>
  Méthode qui permet d'écrire des éléments personnalisés dans le WSDL généré pour un contrat.
 </summary>
 <param name="_objExporter">
  L'objet "WsdlExporter" qui exporte l'info, du "EndPoint".
 </param>
 <param name="_objContx">
  Contexte des éléments du WSDL pour le "EndPoint".
 </param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
 <summary>
  Méthode qui permet d'écrire des éléments personnalisés dans le WSDL généré pour un point de terminaison (Endpoint).
 </summary>
 <param name="_objExporter">
  L'objet "WsdlExporter" qui exporte l'info, du "EndPoint".
 </param>
 <param name="_objContx">
  Contexte des éléments du WSDL pour le "EndPoint".
 </param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
 <summary>
  Méthode qui permet de passer des données lors de l'exécution à des liaisons
  pour prendre en charge un comportement personnalisé.
 </summary>
 <param name="_objEndpoint">Point de terminaison du service.</param>
 <param name="_objBindingParameters">Collection de paramètres de liaison.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
 <summary>
  Méthode qui implémente une modification ou une extension du client sur l'intégralité d'un point
  de terminaison (Endpoint).
 </summary>
 <param name="_objEndpoint">Point de terminaison du service.</param>
 <param name="_objClientRuntime">Point d'insertion pour les classes qui étendent 
 les fonctionnalités des objets clients pour tous les messages gérés par une application cliente.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
 <summary>
  Méthode qui implémente une modification ou une extension du service sur l'intégralité du point
  de terminaison (Endpoint).
 </summary>
 <param name="_objEndpoint">Point de terminaison du service.</param>
 <param name="_objEndpointDispatcher">Objet d'exécution qui expose des propriétés qui activent 
 l'insertion d'extensions ou de modifications d'exécution pour les messages dans les applications de service.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.Validate(System.ServiceModel.Description.ServiceEndpoint)">
 <summary>
  Méthode qui permet de confirmer que le point de terminaison (Endpoint) répond à certains critères prévus.
 </summary>
 <param name="_objEndpoint">Point de terminaison du service.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.ObtenirDescServRacine(System.Web.Services.Description.ServiceDescriptionCollection)">
 <summary>
  Méthode pour obtenir la description du service à la racine du WSDL.
 </summary>
 <param name="_colctWsdl">
  Collection des descriptions de services du WSDL.
 </param>
 <returns>Description du service racine du WSDL.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.ObtenirListWsdlEtXsd(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet)">
 <summary>
  Méthode pour obtenir la liste des WSDL et XSD.
 </summary>
 <param name="_colctWsdl">
  Liste des WSDL.
 </param>
 <param name="_objXsdSet">
  Liste des schémas XSD.
 </param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.AjusterAdrImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Web.Services.Description.ServiceDescription)">
 <summary>
  Méthode pour ajuster les adresses (location) des WSDL et XSD associés à la description
  du service passée en paramètre.
 </summary>
 <param name="_colctWsdl">
  Liste des WSDL.
 </param>
 <param name="_objXsdSet">
  Liste des schémas XSD.
 </param>
 <param name="_objDescServ">
  Description du service (WSDL) pour lequel ajuster les adresses.
 </param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdl.AjusterAdrXsdExt(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchema)">
 <summary>
  Méthode pour ajuster les adresses (location) XSD externes associés au schéma
  passé en paramètre.
 </summary>
 <param name="_objXsdSet">
  Liste des schémas XSD.
 </param>
 <param name="_objXsd">
  Schéma pour lequel ajuster les adresses.
 </param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdlBehaviorExtn">
 <summary>
     Cette classe permet d'exposer la configuration pour le module de transformation de l'alias 
     dans le message WCF.
 
     Explication : 
       - Par défaut avec un ALIAS (Load Balancing), le WSDL du serrvice WCF contient le nom du 
         serveur qui a répondu (ex: V3V570) et non l'alias (nlb-prdev-app3).
       - Cette classe permet de modifier le WSDL "live" en modifiant les URL avec l'ALIAS ayant 
         servi à l'appel.
 </summary>
 <remarks>
     Auteur : Mario Grenier
     Date   : 2010-09-01
 
     Historique des modifications
     ----------------------------
     Auteur      : Mario Grenier
     Date        : 2010-09-01
     Description : Création de la classe.
 
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdlBehaviorExtn.SSL">
 <summary>
  Indicateur pour savoir si le service est exposé dans une zone SSL.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdlBehaviorExtn.BehaviorType">
 <summary>
  Type du comportement WCF (Behavior).
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfAliasWsdlBehaviorExtn.CreateBehavior">
 <summary>
  Méthode héritée pour créer le comportement WCF (Behavior).
 </summary>
 <returns>Objet représemtant le comportement WCF (Behavior).</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.TrnsfWsdl">
 <summary> 
     Définition de la classe permettant de rendre interopérable un service WCF pour tous les plateformes.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
 <summary>
     Cette méthode sert à écrire des éléments personnalisés dans le WSDL généré pour un contrat.
 </summary>
 <param name="_objExporter">Instance de la classe <see cref="T:System.ServiceModel.Description.WsdlExporter" />.</param>
 <param name="_objContx">Instance de la classe <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
 <summary>
     Cette méthode sert à écrire des éléments personnalisés dans le WSDL généré pour un point de terminaison (Endpoint).
 </summary>
 <param name="_objExporter">Instance de la classe <see cref="T:System.ServiceModel.Description.WsdlExporter" />.</param>
 <param name="_objContx">Instance de la classe <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
 <summary>
     Cette méthode effectue une implémentation pour passer des données lors de l'exécution à des liaisons
     pour prendre en charge un comportement personnalisé.
 </summary>
 <param name="_objEndpoint">Instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
 <param name="_objBindingParameters">Instance de la classe <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
 <summary>
     Cette méthode implémente une modification ou une extension du client sur l'intégralité d'un point
     de terminaison (Endpoint).
 </summary>
 <param name="_objEndpoint">Instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
 <param name="_objClientRuntime">Instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
 <summary>
     Cette méthode implémente une modification ou une extension du service sur l'intégralité du point
     de terminaison (Endpoint).
 </summary>
 <param name="_objEndpoint">Instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
 <param name="_objEndpointDispatcher">Instance de la classe <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.Validate(System.ServiceModel.Description.ServiceEndpoint)">
 <summary>
     Cette méthode confirme que le point de terminaison (Endpoint) répond à certains critères prévus.
 </summary>
 <param name="_objEndpoint">Instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.AddImportedSchemas(System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.List{System.Xml.Schema.XmlSchema})">
 <summary>
     Cette méthode permet d'ajouter tous les schémas importés.
 </summary>
 <param name="_objSchema">Instance de la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
 <param name="_objSchemaSet">Instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
 <param name="_colctImportsList">Collection d'instance de la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdl.RemoveXsdImports(System.Xml.Schema.XmlSchema)">
 <summary>
     Cette méthode permet d'enlever tous les schémas importés.
 </summary>
 <param name="_objSchema">Instance de la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.TrnsfWsdlBehaviorExtn">
 <summary> 
     Définition de la classe permettant de rendre interopérable un service WCF pour tous les plateformes.
     Représenté sous forme de « behavior » WCF.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.TrnsfWsdlBehaviorExtn.BehaviorType">
 <summary>
  Propriété qui retourne le type du comportement WCF (Behavior).
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.TrnsfWsdlBehaviorExtn.CreateBehavior">
 <summary>
     Cette méthode permet de créer le comportement WCF (Behavior).
 </summary>
 <returns>Objet représentant le comportement WCF (Behavior).  Instance de la classe <see cref="T:RAMQ.ServiceModel.Configuration.TrnsfWsdl" />.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.WebHttpErrJson">
 <summary> 
     Définition de la classe permettant d'exposer la configuration pour la gestion des erreurs d'un
     service WCF REST AJAX.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.WebHttpErrJson.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
 <summary>
     Cette méthode permet de changer la façon dont les erreurs .NET seront gérées
     dans le cas d'un service WCF REST AJAX.
 </summary>
 <param name="_objServEndpoint">Instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</param>
 <param name="_objEndpointDispatcher">Instance de la classe <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />.</param>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Configuration.WebHttpErrJsonBehaviorExtn">
 <summary> 
     Définition de la classe permettant d'exposer la configuration pour la gestion des erreurs d'un
     service WCF REST AJAX.  Représenté sous forme de « behavior » WCF.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Configuration.WebHttpErrJsonBehaviorExtn.BehaviorType">
 <summary>
  Propriété qui retourne le type du comportement WCF (Behavior).
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Configuration.WebHttpErrJsonBehaviorExtn.CreateBehavior">
 <summary>
     Cette méthode permet de créer le comportement WCF (Behavior).
 </summary>
 <returns>Objet représentant le comportement WCF (Behavior).  Instance de la classe <see cref="T:RAMQ.ServiceModel.Configuration.WebHttpErrJson" />.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.ChannelFactoryRAMQ`1">
 <summary>
     Définition de la classe représentant un canal personnalisé.
     Elle permet de spécifier un fichier de configuration et d'ajouter
     les bindings nécessaires
 </summary>
 <remarks>
  Auteur : Michel-David Massac <br/>
  Date   : 2011-04-01<br/>
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.#ctor(System.String)">
 <summary>
     Constructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" />
     à l'aide du fichier de configuration spécifié.
 </summary>
 <param name="_strConfigurationPath">Chemin du fichier de configuration.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.#ctor(System.String,System.String)">
 <summary>
     Constructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" />
     avec un nom de configuration de point de terminaison spécifié et le fichier de configuration spécifié.
 </summary>
 <param name="_strEndpointConfigurationName">Nom de configuration utilisé pour le point de terminaison.</param>
 <param name="_strConfigurationPath">Chemin du fichier de configuration.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.#ctor(System.String,System.ServiceModel.EndpointAddress,System.String)">
 <summary>
     Constructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ChannelFactory`1" />
     associée à un nom spécifié pour la configuration de point de terminaison et l'adresse distante 
     de même qu'avec le fichier de configuration spécifié.
 </summary>
 <param name="_strEndpointConfigurationName">Nom de configuration utilisé pour le point de terminaison.</param>
 <param name="_objEndpointAddress">EndpointAddress qui fournit l'emplacement du service.</param>
 <param name="_strConfigurationPath">Chemin du fichier de configuration.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.CreateDescription">
 <summary>
     Cette méthode crée une description du point de terminaison de service
     à partir du fichier de configuration spécifié.
 </summary>
 <returns>Instance de la classe <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.ApplyConfiguration(System.String)">
 <summary>
     Cette méthode initialise la fabrique de canaux avec les comportements fournis par un fichier de configuration spécifié 
     et avec ceux définis dans le point de terminaison du service de la fabrique de canaux.
 </summary>
 <param name="_strConfigurationName">Nom du fichier de configuration.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.CreateBinding(System.String,System.String,System.ServiceModel.Configuration.ServiceModelSectionGroup)">
 <summary>
     Cette méthode configure la liaison pour le point de terminaison sélectionné.
 </summary>
 <param name="_strBindingType">Nom du type de liaison.</param>
 <param name="_strBindingConfiguration">Nom de la configuration de la liaison.</param>
 <param name="_objServiceModel">Section ServiceModel.</param>
 <returns>Liaison du point de terminaison sous forme d'instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.GetBinding(System.ServiceModel.Configuration.IBindingConfigurationElement)">
 <summary>
     Cette méthode crée la bonne liaison selon le type de la configuration de l'élément.
 </summary>
 <param name="_objConfigurationElement">Configuration de l'élément.</param>
 <returns>Liaison du point de terminaison sous forme d'instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.AjoutConfigServiceModelWebAppSPCourn(System.ServiceModel.Configuration.ServiceModelSectionGroup@)">
 <summary>
 Permet d'ajouter toutes les configurations de binding présentes
 dans le web.config de la web app courante.
 </summary>
 <param name="_objServiceModel"></param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.AjoutEndPointBehaviorVersDesti(System.ServiceModel.Configuration.ServiceModelSectionGroup,System.ServiceModel.Configuration.ServiceModelSectionGroup@)">
 <summary>
 Permet d'ajouter des configurations de endpointBehavior d'une section de configuration ServiceModel
 source vers une autre
 </summary>
 <param name="_objServiceModelSource"></param>
 <param name="_objServiceModelDesti"></param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.AjoutBindingsVersDesti(System.ServiceModel.Configuration.ServiceModelSectionGroup,System.ServiceModel.Configuration.ServiceModelSectionGroup@)">
 <summary>
 Permet d'ajouter des configurations de binding d'une section de configuration ServiceModel
 source vers une autre
 </summary>
 <param name="_objServiceModelSource"></param>
 <param name="_objServiceModelDesti"></param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.AddBehaviors(System.String,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceModelSectionGroup)">
 <summary>
     Cette méthode ajoute les comportements configurés au point de terminaison sélectionné.
 </summary>
 <param name="_strBehaviorConfiguration">Nom de la configuration du comportement.</param>
 <param name="_objServiceEndpoint">Point de terminaison.</param>
 <param name="_objServiceModel">Section ServiceModel.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ChannelFactoryRAMQ`1.GetIdentity(System.ServiceModel.Configuration.IdentityElement)">
 <summary>
     Cette méthode obtient l'identité du point de terminaison à partir du fichier de configuration.
 </summary>
 <param name="_objElement">Élément d'identité.</param>
 <returns>Identité du point de terminaison sous forme d'instance de la classe <see cref="T:System.ServiceModel.EndpointIdentity" />.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.ClientBaseRAMQ`1">
 <summary>
     Définition de la classe représentant un client de base personnalisé.
     Elle permet d'utiliser le fichier de configuration SP de l'application courante.
 </summary>
 <typeparam name="TChannel">Type du client.</typeparam>
 <remarks>
  Auteur : Michel-David Massac <br/>
  Date   : 2011-04-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : Alexandre Chaussé-Paradis<br/>
  Date   : 2012-03-01<br/>
  Description: Ajouter le behavior <see cref="T:RAMQ.ServiceModel.Configuration.EnteteMsgBehavior"/> utilisé<br/>
  afin de propager l'identifiant de l'appelant dans les requêtes de message.
  <br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.#ctor">
 <summary>
     Contructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> 
     à l'aide du point de terminaison cible par défaut du fichier de configuration SP de l'application courante.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.#ctor(System.String)">
 <summary>
     Contructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> 
     à l'aide des informations de configuration spécifiées dans le fichier de configuration de l'application 
     par endpointConfigurationName.
 </summary>
 <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.#ctor(System.String,System.String)">
 <summary>
     Contructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> .
 </summary>
 <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
 <param name="remoteAddress">Adresse du service.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
 <summary>
     Contructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> 
     à l'aide des informations d'adresse cible et de point de terminaison spécifiées.
 </summary>
 <param name="endpointConfigurationName">Nom du point de terminaison dans le fichier de configuration de l'application.</param>
 <param name="remoteAddress">Adresse du service.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
 <summary>
     Contructeur qui initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.ClientBase`1" /> 
     à l'aide de la liaison et de l'adresse cible spécifiées.
 </summary>
 <param name="binding">Liaison avec laquelle lancer des appels au service.</param>
 <param name="remoteAddress">Adresse du point de terminaison du service.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.ObtenirBinding(System.Reflection.Assembly)">
 <summary>
     Cette méthode obtient la liaison avec laquelle lancer les appels au service.
 </summary>
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <returns>Liaison du point de terminaison sous forme d'instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.ObtenirRemoteAddress(System.Reflection.Assembly)">
 <summary>
     Cette méthode obtient l'adresse qui fournit l'emplacement du service.
 </summary>
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <returns>Adresse de l'emplacement du service sous forme d'instance de la classe <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.ObtenirBinding(System.String,System.Reflection.Assembly)">
 <summary>
     Cette méthode obtient la liaison avec laquelle lancer les appels au service à l'aide du nom du point de terminaison spécifié.
 </summary>
 <param name="_strEndpointConfigurationName">Nom du point terminaison.</param>
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <returns>Liaison du point de terminaison sous forme d'instance de la classe <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
 <remarks></remarks>    
</member>
<member name="M:RAMQ.ServiceModel.ClientBaseRAMQ`1.ObtenirRemoteAddress(System.String,System.Reflection.Assembly)">
 <summary>
     Cette méthode obtient l'adresse qui fournit l'emplacement du service à l'aide du nom du point de terminaison spécifié.
 </summary>
 <param name="_strEndpointConfigurationName">Nom du point terminaison.</param>
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <returns>Adresse de l'emplacement du service sous forme d'instance de la classe <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Erreur.IInnerExceptionRamq">
 <summary> 
     Définition de l'interface représentant le détail d'une sous exception.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IInnerExceptionRamq.InnerMessage">
 <summary>
     Propriété qui retourne le message d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IInnerExceptionRamq.InnerPileAppel">
 <summary>
     Propriété qui retourne la pile d'appel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IInnerExceptionRamq.InnerType">
 <summary>
     Propriété qui retourne le type d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Erreur.IExceptionRamqIntrn">
 <summary> 
     Définition de l'interface représentant le détail d'une exception interne.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IExceptionRamqIntrn.Message">
 <summary>
     Propriété qui retourne le message d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IExceptionRamqIntrn.PileAppel">
 <summary>
     Propriété qui retourne la pile d'appel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IExceptionRamqIntrn.InnerException">
 <summary>
     Propriété qui retourne une collection de sous exception.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IExceptionRamqIntrn.Type">
 <summary>
     Propriété qui retourne le type d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Erreur.ExceptionRamq">
 <summary> 
     Définition de la classe représentant le détail d'une exception.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.ExceptionRamq.Message">
 <summary>
     Propriété qui retourne le message d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Erreur.ExceptionRamq.#ctor(System.String)">
 <summary>
     Constructeur par défaut.
 </summary>
 <param name="_strMsg">Le message de l'exception.</param>
 <example>Lancer une ExceptionRamq.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamq.vb" region="LancerExceptionRamq"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamq.cs" region="LancerExceptionRamq"></code>
 </example>
 <example>"Intercepter une ExceptionRamq.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamq.vb" region="IntercepterExceptionRamq"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamq.cs" region="IntercepterExceptionRamq"></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Erreur.ExceptionRamqIntrn">
 <summary> 
     Définition de la classe représentant le détail d'une exception interne.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.ExceptionRamqIntrn.Message">
 <summary>
     Propriété qui retourne le message d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.ExceptionRamqIntrn.PileAppel">
 <summary>
     Propriété qui retourne la pile d'appel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.ExceptionRamqIntrn.InnerException">
 <summary>
     Propriété qui retourne une collection de sous exception.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.ExceptionRamqIntrn.Type">
 <summary>
     Propriété qui retourne le type d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Erreur.ExceptionRamqIntrn.#ctor(System.String)">
 <summary>
     Constructeur par défaut.
 </summary>
 <param name="_strMsg">Le message de l'exception.</param>
 <example>Lancer une ExceptionRamqIntrn.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.vb" region="LancerExceptionRamqIntrnString" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.cs" region="LancerExceptionRamqIntrnString" ></code>
 </example>
 <example>Intercepter une ExceptionRamqIntrn.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.vb" region="IntercepterExceptionRamqIntrnString" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.cs" region="IntercepterExceptionRamqIntrnString" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.ServiceModel.Erreur.ExceptionRamqIntrn.#ctor(System.Exception)">
 <summary>
     Constructeur secondaire qui initialise tous les propriétés.
 </summary>
 <param name="_objEx">Exception .NET.</param>
 <example>Lancer une ExceptionRamqIntrn.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.vb" region="LancerExceptionRamqIntrnEx" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.cs" region="LancerExceptionRamqIntrnEx" ></code>
 </example>
 <example>Intercepter une ExceptionRamqIntrn.
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.vb" region="IntercepterExceptionRamqIntrnEx" ></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\ExceptionRamqIntrn.cs" region="IntercepterExceptionRamqIntrnEx" ></code>
 </example>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Erreur.IExceptionRamq">
 <summary> 
     Définition de l'interface représentant le détail d'une exception.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.IExceptionRamq.Message">
 <summary>
     Propriété qui retourne le message d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.Erreur.InnerExceptionRamq">
 <summary> 
     Définition de la classe représentant le détail d'une sous exception.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.InnerExceptionRamq.InnerMessage">
 <summary>
     Propriété qui retourne le message d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.InnerExceptionRamq.InnerPileAppel">
 <summary>
     Propriété qui retourne la pile d'appel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:RAMQ.ServiceModel.Erreur.InnerExceptionRamq.InnerType">
 <summary>
     Propriété qui retourne le type d'une exception.
 </summary>
 <remarks></remarks>
</member>
<member name="T:RAMQ.ServiceModel.NamespaceDoc">
 <summary>
 Espace de nom que l'on retrouve dans la composante <b>RAMQ.COM.COD1_V4OutilBase_cpo</b> qui offre des classes permettant l'implantation du modèle
 de sécurité en vigueur à la RAMQ.
 </summary>
 <remarks>
 <para>
 Les différentes classes exposées dans cet espace de nom (et ses enfants) permettent surtout de supporter le modèle de sécurité en vigueur à la RAMQ.
 L'ensemble de ces classes ne sont pas destinées à être utilisé de manière directe dans les différentes applications. Cependant elles sont utlisées
 indirectement par les différentes applications qui utilisent les modèles offerts à la RAMQ.
 </para>
 <para>
 Il s'agit généralement de classes héritant d'autres classes de bases offertes par la cadre d'application .Net, mais adaptées à notre modèle
 de sécurité.
 </para>
 <para>
 <b>Normalement il n'est pas nécessaire d'utiliser ces classes dans vos applications</b> et lorsque c'est le cas, elles devraient être utilisées tel quelle. 
 Cependant si vous avez des besoins particuliers nous vous invitons à consulter votre conseiller organique et au besoin le SSD afin d'être accompagné 
 dans l'élaboration d'une solution adaptée à votre besoin.
 </para>
 </remarks>
</member>
<member name="T:RAMQ.Sharepoint.Securite.ISPSecureStore">
 <summary>
 Interface pour dépôt sécurisé SharePoint.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.ObtnNomUtilWindows(System.String)">
 <summary>
 Méthode permettant d'obtenir le nom d'utilisateur Windows
 contenu dans le SecureStore pour l'application reçue en
 paramètre. Le nom d'utilisateur est retourné dans une 
 chaîne non-sécurisée.
 </summary>
 <param name="_strNomAppli">Application dans le SecureStore à interroger</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.ObtnMotPasseWindows(System.String)">
 <summary>
 Méthode permettant d'obtenir le mot de passe Windows
 contenu dans le SecureStore pour l'application reçue en
 paramètre. Le mot de passe est retourné dans une 
 chaîne sécurisée.
 </summary>
 <param name="_strNomAppli">Application dans le SecureStore à interroger</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.ConxnSecureStore">
 <summary>
 Initialisation des objets de base pour la connexion au SecureStore.
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.ObtnInfoConxn(System.String,System.Object)">
 <summary>
 Pour une application du SecureStore donnée, permet d'obtenir
 les credentials du type reçu en paramètre.
 </summary>
 <param name="_strNomAppli">Application dans le SecureStore à interroger</param>
 <param name="_objType">Type de credential recherché</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.GetSecurStrSvcCredNotFndException(System.String)">
 <summary>
 Obtient une exception de crédentiels de services non-trouvé du dépôt sécurisé.
 </summary>
 <param name="_strMessage">Message de l'exception.</param>
 <returns>Exception.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.GetSecureStoreException(System.String)">
 <summary>
 Obtient l'exception du dépôt sécurisé.
 </summary>
 <param name="_strMessage">Message de l'exception.</param>
 <returns>Exception.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.GetSPServiceContextCourant">
 <summary>
 Obtient le contexte courant du service SharePoint.
 </summary>
 <returns>Contexte courant.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.GetSecureStoreServiceProxy">
 <summary>
 Obtient le proxy de service du dépôt sécurisé.
 </summary>
 <returns>Proxy de service.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Sharepoint.Securite.SPSecureStore.GetSecureStoreCredentialType">
 <summary>
 Obtient le type de crédentiel du dépôt sécurisé.
 </summary>
 <returns>Type de crédentiels.</returns>
 <remarks></remarks>
</member>
<member name="T:RAMQ.Utilitaires">
 <summary> 
     Définition de la classe utilitaires pour les modules communs.
 </summary>
 <remarks>
  Auteur : Pierre Deblois <br/>
  Date   : 2011-03-01
 <br/>
  Historique des modifications<br/>
  ------------------------------------------------------------------------------<br/>
  Auteur : [Auteur]<br/>
  Date   : [aaaa-mm-jj]<br/>
  Description:<br/>
 <br/>
 </remarks>
</member>
<member name="P:RAMQ.Utilitaires.AppSettingsSPInitialise(System.Reflection.Assembly)">
 <summary>
     Propriété qui détermine si la configuration SP pour l'application courante est initialisée.
 </summary>    
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.vb" region="InitialiserAppSettingsSP"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.cs" region="InitialiserAppSettingsSP"></code>
 </example>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Utilitaires.CleAppSettingsSPInitialise(System.String)">
 <summary>
     Propriété qui retource la clé de configuration permettant de déterminer si la configuration SP d'une application particulière a été initialisée.
 </summary>
 <param name="_strIdAssembly">Identifiant de l'assembly.</param>
 <remarks>
     Cette clé est utilisée en mémoire seulement. 
     Elle n'a pas à être présente dans le fichier de configuration physique.
 </remarks>
</member>
<member name="P:RAMQ.Utilitaires.Envir">
 <summary>
     Propriété qui retourne l'environnement dans lequel l'application s'exécute.
 </summary>    
 <remarks></remarks>
</member>
<member name="P:RAMQ.Utilitaires.PPP(System.Reflection.Assembly)">
 <summary>
     Propriété qui retourne le PPP de l'application courante.
 </summary>
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Utilitaires.NomFichierConfiguration(System.Reflection.Assembly)">
 <summary>
     Propriété qui retourne le nom du fichier de configuration SP de l'application courante.
 </summary>
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Utilitaires.RepertoireFichierConfiguration">
 <summary>
     Propriété qui retourne le répertoire contenant les fichiers de configuration SP.
 </summary>    
 <remarks></remarks>
</member>
<member name="P:RAMQ.Utilitaires.ZoneExec">
 <summary>
     Propriété qui retourne la zone d'exécution dans laquelle l'application s'exécute.
 </summary>    
 <remarks></remarks>
</member>
<member name="P:RAMQ.Utilitaires.CheminFichierConfiguration(System.Reflection.Assembly)">
 <summary>
     Propriété qui retourne le chemin d'accès du fichier de configuration SP de l'application qui s'exécute.
 </summary>
 <param name="_objAssemblyAppelant">Assembly qui appelle cette composante.</param>
 <remarks>Inclus le répertoire et le nom du fichier.</remarks>
</member>
<member name="P:RAMQ.Utilitaires.ZoneExecSP">
 <summary>
     Propriété qui détermine si l'application s'éxécute dans la zone SP (SharePoint).
 </summary>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ObtenirEnvir">
 <summary>
 Permet d'obtenir l'environnement selon le mode d'exécution.
 </summary>
 <returns>L'environnement défini dans un appsettings si le mode d'exécution est "serveur" ou "lot". Pour tout autre
          mode d'exécution, l'environnement sera plutot celui défini dans le registre</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.vb" region="ObtenirEnvir"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.cs" region="ObtenirEnvir"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ObtenirBinding">
 <summary>
     Cette méthode permet d'obtenir le "binding" afin d'effectuer les appels
     au service WCF.
 </summary>
 <returns>Instance de la classe <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ObtenirUrlServ(System.String)">
 <summary>
     Cette méthode permet d'obtenir l'url d'un service WCF.
 </summary>
 <param name="_strCleUrlServ">Clé du fichier configuration pointant sur l'url.</param>
 <exception cref="T:System.ApplicationException">Le paramètre indiquant l'adresse du service WCF est inexistant dans le fichier configuration.</exception>
 <returns>Url du service WCF.</returns>
 <remarks></remarks>
</member>
<member name="P:RAMQ.Utilitaires.CleAppSettingsSP(System.String,System.String)">
 <summary>
     Clé de configuration SharePoint construite à en ajoutant l'identifiany de l'assembly à la clé de configuration originale.
 </summary>
 <param name="_strIdAssembly">Identifiant de l'assembly</param>
 <param name="_strCle">Clé de configuration</param>
 <remarks>    
 </remarks>
</member>
<member name="M:RAMQ.Utilitaires.ValWebAppSettings(System.String)">
 <summary>
     Cette méthode obtient le contenu de la configuration Web AppSettings relié à la clé spécifiée.
 </summary>
 <param name="_strCle">Clé de la configuration à trouver.</param>
 <returns>Contenu de la configuration web demandée.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ValLoclAppSettings(System.String)">
 <summary>
     Cette méthode obtient le contenu de la configuration AppSettings relié à la clé spécifiée.
 </summary>
 <param name="_strCle">Clé de la configuration à trouver.</param>
 <returns>Contenu de la configuration locale demandée.</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ObtenirClePourUsager(System.String,System.Web.HttpContextBase)">
 <summary>
 Générer une clé qui sera unique pour pour un usager, la clé incuera un élément de ce dernier
 </summary>
 <param name="_strCle">Partie à concaténer à la clé</param>
 <param name="_objContext">Contexte d'appel.</param>
 <returns>Une clé incluant un élément unique pour un usager donné</returns>
 <remarks>
 Cette méthode a principalement pour but d'être utilisée par les objets <see cref="T:RAMQ.Etat.Session">RAMQ.Etat.Session</see> 
 et <see cref="T:RAMQ.Etat.Cookie">RAMQ.Etat.Cookie</see>, et ce afin d'éviter les problèmes de session partagée sur un même poste
 de travail faisant en sorte que lorsqu'un usager s'était connecté sur plus d'une application et qu'il n'avait pas toute fermée 
 ces dernières, la personne suivante se connectant pouvait parfois aller vers une autre application et aisni avoir accès à la 
 session de la personne qui avait été connecté auparavant.
 </remarks>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.vb" region="ObtenirClePourUsager"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.cs" region="ObtenirClePourUsager"></code>
 </example>
 <exception cref="T:System.ArgumentNullException">Cette méthode ne peut être appelé quand dans un contexte web</exception>
</member>
<member name="M:RAMQ.Utilitaires.InitialiserAppSettingsSP(System.Reflection.Assembly)">
 <summary>
     Cette méthode initialise la configuration AppSettings SP lorsque nécessaire.
 </summary>
 <param name="_objAssembly">Assembly dont les AppSettings doivent être initialisés.</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ValiderDepd(System.Reflection.Assembly,RAMQ.Enumeration.EnumRestrValidDepd)">
 <summary>
 Cette méthode valide les dépendances d'un assembly .NET
 Exemple : Utiliser dans un Try Catch pour journaliser ou envoyer un courriel avec les dépendances manquantes
 </summary>
 <param name="_objAssembly">L'assembly a valider</param>
 <param name="_enumRestrDepd">La restriction a appliquer à la validation</param>
 <returns>La liste des dépendances manquantes</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.vb" region="ValiderDepdAssembly"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.cs" region="ValiderDepdAssembly"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ValiderDepd(System.String,RAMQ.Enumeration.EnumRestrValidDepd)">
 <summary>
 Cette méthode valide les dépendances d'un DLL .NET
 Exemple : Utiliser dans un Try Catch pour journaliser ou envoyer un courriel avec les dépendances manquantes
 </summary>
 <param name="_strCheminDll">Le chemin d'accès du DLL, incluant sont nom</param>
 <param name="_enumRestrDepd">La restriction a appliquer à la validation</param>
 <returns>La liste des dépendances manquantes</returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.vb" region="ValiderDepdDll"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.cs" region="ValiderDepdDll"></code>
 </example>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ObtenirCodAppli">
 <summary>
 Fonction permettant de récupérer la valeur de l'attribut 
 <see cref="T:RAMQ.Attribut.CodAppli" /> de l'assembly appelant
 </summary>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.vb" region="ObtenirCodAppli"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.cs" region="ObtenirCodAppli"></code>
 </example>
 <returns>La valeur du code d'application de l'assembly appelant</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ObtenirExpression``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Fonction retournant l'expression de la fonction, pour utiliser les extensions de Type
 </summary>
 <typeparam name="T">Fonction d'un type générique</typeparam>
 <param name="_fctExpression">Expression</param>
 <returns>L'expression en paramètres</returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ConvertirChaineBase64EnTableau(System.String)">
 <summary>
 Fonction qui convertit la chaîne spécifiée (qui encode les données binaires en chiffres en base 64) en
 un tableau équivalent d'entiers non signés 8 bits. Version améliorée de convert.FromBase64String. Voir remarque.
 </summary>
 <param name="_strValBase64"> Chaine en base64 à convertir</param>
 <returns> Tableau d'entiers non signés 8 bits qui est équivalent à <paramref name="_strValBase64"/></returns>
 <example>
 <code lang="VB.NET" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.vb" region="ConvertirChaineBase64EnTableau"></code>
 <code lang="C#" source="\\Corpoque\APPLI\Unit\COM\COM_LIV40\VbDotNet\Exemple\Utilitaires.cs" region="ConvertirChaineBase64EnTableau"></code>
 </example>
 <remarks> Cette fonction ne doit être utilisée que si la méthode convert.FromBase64String ne répond pas au besoin. Il
           peut arriver que pour de très grande chaine encodée en base64 qu'une System.OutOfMemoryException soit levée
           suite à un manque de mémoire. La présente fonction doit donc être alors utilisée comme solution paliative.
 </remarks>
</member>
<member name="M:RAMQ.Utilitaires.ValiderDepdRecursif(System.Reflection.AssemblyName,RAMQ.Enumeration.EnumRestrValidDepd,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
 <summary>
 Méthode récursive pour vérifier les dépendances manquante d'un assembly .NET
 </summary>
 <param name="_objAssemblyName">Nom de l'assembly à vérifier</param>
 <param name="_enumRestr">Restriction sur les assembly enfants à vérifier</param>
 <param name="_colctRetour">Liste des assembly en problème, avec la raison</param>
 <param name="_colctNomAssembly">Liste interne des assembly déjà vérifiés, pour éviter les vérification en double</param>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.CreerAssembly(System.Reflection.AssemblyName,System.String@)">
 <summary>
 Méthode utilisé pour créer un assembly à partir de son AssemblyName
 </summary>
 <param name="_objAssemblyName">Le nom long de l'assembly à créer</param>
 <param name="_strErreur">Description de l'erreur, s'il y a lieu</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:RAMQ.Utilitaires.ObtenirCodAppli(System.Reflection.MethodBase)">
 <summary>
 Fonction permettant de récupérer l'attribut <see cref="T:RAMQ.Attribut.CodAppli" /> 
 de l'assembly appelant
 </summary>
 <returns>L'attribut <see cref="T:RAMQ.Attribut.CodAppli" /> de l'assembly appelant</returns>
 <remarks></remarks>
</member>
</members>
</doc>
